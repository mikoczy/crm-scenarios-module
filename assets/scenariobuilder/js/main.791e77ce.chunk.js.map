{"version":3,"sources":["actions/types.js","reducers/SegmentsReducer.js","reducers/CriteriaReducer.js","reducers/TriggersReducer.js","reducers/CanvasReducer.js","reducers/ScenarioReducer.js","reducers/MailsReducer.js","reducers/GoalsReducer.js","reducers/BannersReducer.js","reducers/index.js","services/SegmenterService.js","config.js","components/widgets/TrayItemWidget.js","services/ExportService.js","components/Notification.js","components/elements/SimplePortFactory.js","components/elements/Link/LinkModel.js","components/elements/Link/LinkFactory.js","components/elements/Ports/LeftRightPort.js","components/elements/Ports/LeftRightBottomPort.js","components/elements/Email/PortModel.js","components/elements/Email/NodeModel.js","components/widgets/PortWidget.js","actions/CanvasActions.js","actions/ScenarioActions.js","actions/SegmentsActions.js","actions/TriggersActions.js","actions/MailsActions.js","actions/GoalsActions.js","actions/BannersActions.js","actions/CriteriaActions.js","components/StatisticTooltip.js","components/MaterialSelect.js","components/elements/Email/NodeWidget.js","components/elements/Email/NodeFactory.js","components/elements/Banner/PortModel.js","components/elements/Banner/NodeModel.js","components/elements/Banner/NodeWidget.js","components/elements/Banner/NodeFactory.js","components/elements/Segment/PortModel.js","components/elements/Segment/NodeModel.js","components/elements/Segment/NodeWidget.js","components/elements/Segment/NodeFactory.js","components/elements/Trigger/PortModel.js","components/elements/Trigger/NodeModel.js","components/elements/Trigger/NodeWidget.js","components/elements/Trigger/NodeFactory.js","components/elements/Wait/PortModel.js","components/elements/Wait/NodeModel.js","components/elements/Wait/NodeWidget.js","components/elements/Wait/NodeFactory.js","components/elements/Goal/PortModel.js","components/elements/Goal/NodeModel.js","components/elements/Goal/NodeWidget.js","components/elements/Goal/NodeFactory.js","components/elements/Condition/PortModel.js","components/elements/Condition/NodeModel.js","components/elements/Condition/criteriaReducer.js","components/elements/Condition/CriteriaTypes/StringLabeledArrayParam.js","components/elements/Condition/CriteriaTypes/BooleanParam.js","components/elements/Condition/CriteriaBuilder.js","components/elements/Condition/NodeWidget.js","components/elements/Condition/NodeFactory.js","components/widgets/BodyWidget.js","services/RenderService.js","components/Application.js","App.js","index.js"],"names":["SEGMENTS_CHANGED","CRITERIA_CHANGED","TRIGGERS_CHANGED","MAILS_CHANGED","GOALS_CHANGED","BANNERS_CHANGED","CANVAS_ZOOMABLE","CANVAS_PANNABLE","CANVAS_ZOOMABLE_PANNABLE","CANVAS_NOTIFICATION","SET_SCENARIO_ID","SET_SCENARIO_NAME","SET_SCENARIO_PAYLOAD","SET_SCENARIO_LOADING","INITIAL_STATE","avalaibleSegments","criteria","avalaibleTriggers","pannable","zoomable","notification","open","variant","text","id","name","loading","payload","availableMails","availableGoals","availableBanners","combineReducers","segments","state","arguments","length","undefined","action","type","Object","objectSpread","triggers","canvas","scenario","mails","goals","banners","SegmenterService","vueScript","document","createElement","src","segmenterScript","segmenterStyles","rel","href","head","appendChild","selector","window","Vue","render","h","RempSegmenter","$mount","Scenario","config","AUTH_TOKEN","API_HOST","SCENARIO_ID","BANNER_ENABLED","URL_SCENARIO_DETAIL","concat","URL_SCENARIO_CREATE","URL_SCENARIO_CRITERIA","URL_SEGMENTS_INDEX","URL_TRIGGERS_INDEX","URL_MAILS_INDEX","URL_GOALS_INDEX","URL_BANNERS_INDEX","URL_ELEMENT_TOOLTIP","URL_TRIGGER_TOOLTIP","TrayItemWidget","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","_this2","react","ListItem","draggable","onDragStart","event","dataTransfer","setData","JSON","stringify","model","className","ListItemIcon","icon","ListItemText","primary","React","unitTimeToMinutes","time","unit","ExportService","formatDescendant","node","parentNode","descendant","uuid","direction","portName","serializedModel","serializeDiagram","elements","visual","nodes","filter","map","formatNode","entries","getNodes","forEach","x","y","serialize","ports","find","port","links","link","nextNode","targetPort","parent","sourcePort","_this3","descendantsPositive","getAllChildrenNodes","descendantNode","descendantsNegative","toConsumableArray","_this4","email","code","selectedMail","descendants","banner","selectedBanner","expiresInMinutes","expiresInTime","expiresInUnit","condition","conditions","getPositiveAndNegativeDescendants","segment","selectedSegment","selectedTrigger","wait","minutes","waitingTime","waitingUnit","goalProperties","codes","selectedGoals","recheckPeriodMinutes","recheckPeriodTime","recheckPeriodUnit","timeoutTime","timeoutUnit","timeoutMinutes","goal","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","Notification","Icon","react_default","a","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","handleClose","SnackbarContent","message","Component","SimplePortFactory","_AbstractPortFactory","cb","initialConfig","AbstractPortFactory","LinkModel","_DefaultLinkModel","width","curvyness","color","DefaultLinkModel","LinkFactory","_DefaultLinkFactory","widget","selected","path","bem","strokeWidth","stroke","d","DefaultLinkFactory","LeftRightPort","_BasePortModel","pos","position","in","createLinkModel","setSourcePort","setTargetPort","_","get","prototype","data","engine","BasePortModel","LeftRightBottomPort","PortModel","_LeftRightPort","NodeModel","_BaseNodeModel","element","addPort","ob","BaseNodeModel","PortWidget","_BasePortWidget","assign","getProps","onMouseEnter","setState","onMouseLeave","data-name","data-nodeid","getID","children","BasePortWidget","setCanvasZoomingAndPanning","zoomingAndPanning","setCanvasNotification","notificationOptions","setScenarioId","setScenarioName","setScenarioLoading","fetchScenario","scenarioId","dispatch","axios","then","response","catch","console","log","fetchSegments","fetchTriggers","events","fetchMails","mail_templates","fetchGoals","fetchBanners","fetchCriteria","blueprint","StatisticsTooltip","html","oldProps","scenarioID","fetchStatistics","_this$props","isTrigger","url","_ref","anchorElement","Popover","Boolean","anchorEl","style","pointerEvents","transformOrigin","CircularProgress","size","dangerouslySetInnerHTML","__html","connect","inputComponent","inputRef","objectWithoutProperties","ref","components","Control","TextField","fullWidth","multiline","InputProps","inputProps","selectProps","classes","input","innerRef","innerProps","textFieldProps","Menu","Paper","square","paper","MultiValue","Chip","tabIndex","label","classNames","chip","defineProperty","chipFocused","isFocused","onDelete","removeProps","onClick","deleteIcon","Cancel_default","NoOptionsMessage","Typography","noOptionsMessage","Option","MenuItem","buttonRef","component","fontWeight","isSelected","Placeholder","placeholder","SingleValue","singleValue","ValueContainer","valueContainer","MaterialSelect","single","multi","handleChange","theme","selectStyles","base","palette","& input","font","root","react_select_esm","styles","menuPosition","InputLabelProps","shrink","isMulti","options","onChange","defaultProp","withStyles","flexGrow","marginTop","marginBottom","fontFamily","display","padding","flexWrap","flex","alignItems","overflow","margin","spacing","backgroundColor","emphasize","grey","fontSize","left","zIndex","right","divider","height","withTheme","NodeWidget","openDialog","dialogOpened","nodeFormName","anchorElementForTooltip","closeDialog","handleNodeMouseEnter","currentTarget","handleNodeMouseLeave","getFormatedValue","match","mail","transformOptionsForSelect","lodashGrouped","groupBy","mail_type","properlyGrouped","keys","push","sorting","sort","b","getSelectedMailValue","classBaseName","getClassName","background","onDoubleClick","Mail_default","PortWidget_PortWidget","StatisticTooltip","Dialog","aria-labelledby","onKeyUp","keyCode","preventDefault","stopPropagation","DialogTitle","DialogContent","DialogContentText","Grid","container","item","xs","target","components_MaterialSelect","DialogActions","Button","diagramEngine","repaintCanvas","NodeFactory","_AbstractNodeFactory","Email_NodeWidget","AbstractNodeFactory","Adjust_default","helperText","FormControl","InputLabel","htmlFor","Select","Banner_NodeWidget","_LeftRightBottomPort","group","getSelectedSegmentValue","handleNewSegmentClick","addEventListener","handleSavedNewSegment","handleCancelNewSegment","creatingNewSegment","setTimeout","init","detail","removeEventListener","SubdirectoryArrowRight_default","Check_default","top","Close_default","fullScreen","disableEscapeKeyDown","textAlign","paddingBottom","bottom","Icon_Icon","marginRight","Segment_NodeWidget","getTriggersInSelectableFormat","trigger","getSelectedTriggerValue","Notifications_default","option","Trigger_NodeWidget","nodeFormWaitingTime","timeUnit","AccessAlarmsOutlined_default","Wait_NodeWidget","matches","goalCode","CheckBox_default","AccessTime_default","Goal_NodeWidget","emptyNode","uuidv4","actionSetNodeValues","nodeId","values","reducer","n","newNodes","Error","elementStyles","makeStyles","chipRoot","&:not(:first-child)","&::before","content","operator","textTransform","marginLeft","selectedOptions","selectedValues","s","Set","has","delete","optionLabel","StringLabeledArrayParam","params","Autocomplete","multiple","ChipProps","getOptionLabel","selection","freeSolo","renderInput","BooleanParam","FormControlLabel","checked","control","Switch","BuilderDispatch","createContext","CriteriaParams","useContext","typeParams","useCriteriaFormStyles","cardContent","justifyContent","formControl","minWidth","CriteriaForm","Card","CardContent","labelId","e","cr","IconButton","aria-label","Delete_default","useCriteriaTableStyles","andContainer","maxWidth","flexBasis","CriteriaTable","Fragment","index","button","startIcon","AddCircleOutline_default","useCriteriaBuilderStyles","selectedButton","deselectedButton","forwardRef","useSelector","_useReducer","useReducer","version","_useReducer2","slicedToArray","useImperativeHandle","Provider","ButtonGroup","criteriaBlueprint","builderRef","CallSplit_default","Condition_CriteriaBuilder","current","Condition_NodeWidget","BodyWidget","saveChanges","app","isCorruptedPayload","exportService","getDiagramEngine","getDiagramModel","exportPayload","post","startEditingName","editedName","editingName","cancelEditingName","submitEditingName","handleCloseAndSaveDuringChangingName","handleNameTyping","closeNotification","prevProps","diagramProps","maxNumberPointsPerLink","allowLooseLinks","allowCanvasTranslation","allowCanvasZoom","CssBaseline","AppBar","appBar","Toolbar","noWrap","autoFocus","onKeyDown","onBlur","justify","Drawer","drawer","drawerPaper","toolbar","List","subheader","ListSubheader","TrayItemWidget_TrayItemWidget","components_Notification","onDrop","stormDiagramNode","getData","parse","Email","Banner","Segment","Condition","Trigger","Wait","Goal","points","getRelativeMousePoint","addNode","forceUpdate","onDragOver","main","compose","flexShrink","mixins","minutesToTimeUnit","RenderService","activeModel","flatMap","triggerVisual","renderElements","elementId","nextNodes","getPort","addLink","descendantObj","hasOwnProperty","recheckPeriodTimeUnit","_this$renderCondition","renderCondition","_this$renderCondition2","setPosition","Application","DiagramEngine","installDefaultFactories","DiagramModel","renderService","corruptedPayload","renderPayload","registerCustomModels","ex","setDiagramModel","registerLinkFactory","registerPortFactory","registerNodeFactory","App","load","scenarioPayload","widgets_BodyWidget","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","defaults","headers","common","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.791e77ce.chunk.js","sourcesContent":["export const SEGMENTS_CHANGED = 'segments_changed';\n\nexport const CRITERIA_CHANGED = 'criteria_changed';\n\nexport const TRIGGERS_CHANGED = 'triggers_changed';\n\nexport const MAILS_CHANGED = 'mails_changed';\nexport const GOALS_CHANGED = 'goals_changed';\nexport const BANNERS_CHANGED = 'banners_changed';\n\nexport const CANVAS_ZOOMABLE = 'canvas_zoomable';\nexport const CANVAS_PANNABLE = 'canvas_pannable';\nexport const CANVAS_ZOOMABLE_PANNABLE = 'canvas_zoomable_pannable';\nexport const CANVAS_NOTIFICATION = 'canvas_notification';\n\nexport const SET_SCENARIO_ID = 'set_scenario_id';\nexport const SET_SCENARIO_NAME = 'set_scenario_name';\nexport const SET_SCENARIO_PAYLOAD = 'set_scenario_payload';\nexport const SET_SCENARIO_LOADING = 'set_scenario_loading';\n","\nimport {\n    SEGMENTS_CHANGED\n} from './../actions/types';\n  \nconst INITIAL_STATE = {\n    avalaibleSegments: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SEGMENTS_CHANGED:\n            return { ...state, avalaibleSegments: action.payload };\n\n        default:\n            return state;\n    }\n};","\nimport {\n    CRITERIA_CHANGED\n} from './../actions/types';\n  \nconst INITIAL_STATE = {\n    criteria: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case CRITERIA_CHANGED:\n            return { ...state, criteria: action.payload };\n\n        default:\n            return state;\n    }\n};","import { TRIGGERS_CHANGED } from './../actions/types';\n\nconst INITIAL_STATE = {\n  avalaibleTriggers: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TRIGGERS_CHANGED:\n      return { ...state, avalaibleTriggers: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import {\n  CANVAS_PANNABLE,\n  CANVAS_ZOOMABLE,\n  CANVAS_ZOOMABLE_PANNABLE,\n  CANVAS_NOTIFICATION\n} from './../actions/types';\n\nconst INITIAL_STATE = {\n  pannable: true,\n  zoomable: true,\n  notification: {\n    open: false,\n    variant: 'success',\n    text: ''\n  }\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CANVAS_PANNABLE:\n      return { ...state, pannable: action.payload };\n\n    case CANVAS_ZOOMABLE:\n      return { ...state, zoomable: action.payload };\n\n    case CANVAS_ZOOMABLE_PANNABLE:\n      return { ...state, zoomable: action.payload, pannable: action.payload };\n\n    case CANVAS_NOTIFICATION:\n      return {\n        ...state,\n        notification: { ...state.notification, ...action.payload }\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  SET_SCENARIO_ID,\n  SET_SCENARIO_NAME,\n  SET_SCENARIO_LOADING,\n  SET_SCENARIO_PAYLOAD\n} from './../actions/types';\n\nconst INITIAL_STATE = {\n  id: null,\n  name: '',\n  loading: 0,\n  payload: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_SCENARIO_ID:\n      return { ...state, id: action.payload };\n\n    case SET_SCENARIO_NAME:\n      return { ...state, name: action.payload };\n\n    case SET_SCENARIO_LOADING:\n      let loading = state.loading;\n      if (action.payload) {\n        ++loading;\n      } else {\n        --loading;\n      }\n      return { ...state, loading };\n\n    case SET_SCENARIO_PAYLOAD:\n      return { ...state, payload: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { MAILS_CHANGED } from './../actions/types';\n\nconst INITIAL_STATE = {\n  availableMails: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case MAILS_CHANGED:\n      return { ...state, availableMails: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { GOALS_CHANGED } from './../actions/types';\n\nconst INITIAL_STATE = {\n  availableGoals: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case GOALS_CHANGED:\n      return { ...state, availableGoals: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { BANNERS_CHANGED } from '../actions/types';\n\nconst INITIAL_STATE = {\n  availableBanners: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case BANNERS_CHANGED:\n      return { ...state, availableBanners: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport SegmentsReducer from './SegmentsReducer';\nimport CriteriaReducer from './CriteriaReducer';\nimport TriggersReducer from './TriggersReducer';\nimport CanvasReducer from './CanvasReducer';\nimport ScenarioReducer from './ScenarioReducer';\nimport MailsReducer from './MailsReducer';\nimport GoalsReducer from './GoalsReducer';\nimport BannersReducer from './BannersReducer';\n\nexport default combineReducers({\n  segments: SegmentsReducer,\n  triggers: TriggersReducer,\n  canvas: CanvasReducer,\n  criteria: CriteriaReducer,\n  scenario: ScenarioReducer,\n  mails: MailsReducer,\n  goals: GoalsReducer,\n  banners: BannersReducer,\n});\n","export default class SegmenterService {\n  static load() {\n    // maybe add async defer if needed\n    const vueScript = document.createElement('script');\n    vueScript.type = 'text/javascript';\n    vueScript.src = '/segmenter/vue.min.js';\n\n    const segmenterScript = document.createElement('script');\n    segmenterScript.type = 'text/javascript';\n    segmenterScript.src = '/segmenter/RempSegmenter.umd.min.js';\n\n    var segmenterStyles = document.createElement('link');\n    segmenterStyles.rel = 'stylesheet';\n    segmenterStyles.href = '/segmenter/RempSegmenter.css';\n\n    document.head.appendChild(vueScript);\n    document.head.appendChild(segmenterScript);\n    document.head.appendChild(segmenterStyles);\n  }\n\n  static init(selector = '#segmenter') {\n    new window.Vue({\n      render: h => h(window.RempSegmenter)\n    }).$mount(selector);\n  }\n}\n","// window.Scenario = {\n//   config: {\n//     AUTH_TOKEN: '',\n//     API_HOST: 'https://predplatne.dennikn.sk/api/v1',\n//     SCENARIO_ID: null\n//     BANNER_ENABLED: null\n//   }\n// };\n\n// window.Segments = {\n//   config: {\n//     AUTH_TOKEN: '',\n//     API_HOST: 'https://predplatne.dennikn.sk',\n//     CANCEL_PATH: '#',\n//     SEGMENT_ID: null\n//   }\n// };\n\nexport const { AUTH_TOKEN, API_HOST, SCENARIO_ID, BANNER_ENABLED } = window.Scenario.config;\n\nexport const URL_SCENARIO_DETAIL = `${API_HOST}/scenarios/info?id=`;\nexport const URL_SCENARIO_CREATE = `${API_HOST}/scenarios/create`;\nexport const URL_SCENARIO_CRITERIA = `${API_HOST}/scenarios/criteria`;\nexport const URL_SEGMENTS_INDEX = `${API_HOST}/user-segments/list`;\nexport const URL_TRIGGERS_INDEX = `${API_HOST}/events/list`;\nexport const URL_MAILS_INDEX = `${API_HOST}/mail-template/list`;\nexport const URL_GOALS_INDEX = `${API_HOST}/onboarding-goals/list`;\nexport const URL_BANNERS_INDEX = `${API_HOST}/remp/list-banners`;\nexport const URL_ELEMENT_TOOLTIP = `${API_HOST}/scenarios/element`;\nexport const URL_TRIGGER_TOOLTIP = `${API_HOST}/scenarios/trigger`;\n","import * as React from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nexport class TrayItemWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <ListItem\n        // button\n        key={this.props.name}\n        draggable={true}\n        onDragStart={event => {\n          event.dataTransfer.setData(\n            'storm-diagram-node',\n            JSON.stringify(this.props.model)\n          );\n        }}\n        className='tray-item'\n      >\n        <ListItemIcon>{this.props.icon}</ListItemIcon>\n        <ListItemText primary={this.props.name} />\n      </ListItem>\n    );\n  }\n}\n","function unitTimeToMinutes(time, unit) {\n  switch (unit) {\n    case 'minutes':\n      return time;\n    case 'hours':\n      return time * 60;\n    case 'days':\n      return time * 60 * 24;\n    default:\n      return time;\n  }\n}\n\nexport class ExportService {\n  constructor(model) {\n    this.model = model;\n  }\n\n  exportPayload() {\n    const payload = {};\n    const serializedModel = this.model.serializeDiagram();\n\n    payload.triggers = {};\n    payload.elements = {};\n    payload.visual = {};\n\n    serializedModel.nodes\n      .filter(node => node.type === 'trigger')\n      .map(node => (payload.triggers[node.id] = this.formatNode(node)));\n\n    Object.entries(this.model.getNodes()).forEach(node => {\n      payload.visual[node[0]] = {\n        x: node[1].x,\n        y: node[1].y\n      };\n    });\n\n    Object.entries(this.model.getNodes()).forEach(node => {\n      if (node[1].type !== 'trigger') {\n        payload.elements[node[0]] = this.formatNode(node[1].serialize());\n      }\n    });\n\n    return payload;\n  }\n\n  getAllChildrenNodes(node, portName = 'right') {\n    const port = node.ports.find(port => port.name === portName);\n\n    return port.links.map(link => {\n      let nextNode = null;\n\n      if (this.model.links[link].targetPort.parent.id !== node.id) {\n        nextNode = this.model.links[link].targetPort.parent;\n      } else {\n        nextNode = this.model.links[link].sourcePort.parent;\n      }\n\n      return { ...nextNode.serialize(), portName };\n    });\n  }\n\n  getPositiveAndNegativeDescendants(node) {\n    const descendantsPositive = this.getAllChildrenNodes(node, 'right').map(\n      descendantNode => this.formatDescendant(descendantNode, node)\n    );\n    const descendantsNegative = this.getAllChildrenNodes(node, 'bottom').map(\n      descendantNode => this.formatDescendant(descendantNode, node)\n    );\n    return [...descendantsPositive, ...descendantsNegative];\n  }\n\n  formatNode(node) {\n    if (node.type === 'email') {\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'email',\n        email: {\n          code: node.selectedMail,\n          descendants: this.getAllChildrenNodes(node).map(descendantNode =>\n            this.formatDescendant(descendantNode, node)\n          )\n        }\n      };\n    } else if (node.type === 'banner') {\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'banner',\n        banner: {\n          id: node.selectedBanner,\n          expiresInMinutes: unitTimeToMinutes(node.expiresInTime, node.expiresInUnit),\n          descendants: this.getAllChildrenNodes(node).map(descendantNode =>\n            this.formatDescendant(descendantNode, node)\n          )\n        }\n      };\n    } else if (node.type === 'condition') {\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'condition',\n        condition: {\n          conditions: node.conditions,\n          descendants: this.getPositiveAndNegativeDescendants(node),\n        }\n      };\n    } else if (node.type === 'segment') {\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'segment',\n        segment: {\n          code: node.selectedSegment ? node.selectedSegment : 'all_users',\n          descendants: this.getPositiveAndNegativeDescendants(node),\n        }\n      };\n    } else if (node.type === 'trigger') {\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'event',\n        event: {\n          code: node.selectedTrigger ? node.selectedTrigger : 'user_created'\n        },\n        elements: this.getAllChildrenNodes(node).map(\n          descendantNode => descendantNode.id\n        )\n      };\n    } else if (node.type === 'wait') {\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'wait',\n        wait: {\n          minutes: unitTimeToMinutes(node.waitingTime, node.waitingUnit),\n          descendants: this.getAllChildrenNodes(node).map(descendantNode =>\n            this.formatDescendant(descendantNode, node)\n          )\n        }\n      };\n    } else if (node.type === 'goal') {\n      let goalProperties = {\n        codes: node.selectedGoals ? node.selectedGoals : [],\n        descendants: this.getPositiveAndNegativeDescendants(node),\n        recheckPeriodMinutes: unitTimeToMinutes(node.recheckPeriodTime, node.recheckPeriodUnit)\n      };\n\n      if (node.timeoutTime && node.timeoutUnit) {\n        goalProperties.timeoutMinutes = unitTimeToMinutes(node.timeoutTime, node.timeoutUnit);\n      }\n\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'goal',\n        goal: goalProperties,\n      };\n    }\n  }\n\n  formatDescendant = (node, parentNode) => {\n    let descendant = {\n      uuid: node.id\n    };\n\n    if (parentNode.type === 'segment') {\n      descendant.direction = node.portName === 'right' ? 'positive' : 'negative';\n    } else if (parentNode.type === 'goal') {\n      descendant.direction = node.portName === 'right' ? 'positive' : 'negative';\n    } else if (parentNode.type === 'condition') {\n      descendant.direction = node.portName === 'right' ? 'positive' : 'negative';\n    }\n\n    return descendant;\n  };\n\n  \n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nclass Notification extends React.Component {\n  render() {\n    const Icon = variantIcon[this.props.variant];\n\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n        open={this.props.open}\n        autoHideDuration={3000}\n        onClose={this.props.handleClose}\n      >\n        <SnackbarContent\n          className={'toast-' + this.props.variant}\n          message={\n            <span id='client-snackbar' className='toast__message'>\n              <Icon className='toast__icon toast__icon-variant' />\n              {this.props.text}\n            </span>\n          }\n        />\n      </Snackbar>\n    );\n  }\n}\n\nNotification.propTypes = {\n  variant: PropTypes.oneOf(['success', 'warning', 'info', 'error']).isRequired,\n  text: PropTypes.string.isRequired,\n  handleClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default Notification;\n","import { AbstractPortFactory } from 'storm-react-diagrams';\n\nexport class SimplePortFactory extends AbstractPortFactory {\n  cb;\n\n  constructor(type, cb) {\n    super(type);\n    this.cb = cb;\n  }\n\n  getNewInstance(initialConfig) {\n    return this.cb(initialConfig);\n  }\n}\n","import { DefaultLinkModel } from 'storm-react-diagrams';\n\nexport class LinkModel extends DefaultLinkModel {\n  constructor() {\n    super('custom');\n\n    this.width = 3;\n    this.curvyness = 50;\n    this.color = 'rgba(0,0,0,0.3)';\n  }\n}\n","import * as React from 'react';\nimport { DefaultLinkFactory } from 'storm-react-diagrams';\n\nimport { LinkModel } from './LinkModel';\n\nexport class LinkFactory extends DefaultLinkFactory {\n  constructor() {\n    super();\n    this.type = 'custom';\n  }\n\n  getNewInstance(initialConfig) {\n    return new LinkModel();\n  }\n\n  generateLinkSegment(model, widget, selected, path) {\n    return (\n      <path\n        className={selected ? widget.bem('--path-selected') : ''}\n        strokeWidth={model.width}\n        stroke={model.color}\n        d={path}\n      />\n    );\n  }\n}\n","import * as _ from 'lodash';\nimport { PortModel as BasePortModel } from 'storm-react-diagrams';\n\nimport { LinkModel } from './../Link';\n\nexport class LeftRightPort extends BasePortModel {\n  in;\n  position;\n\n  constructor(pos = 'left', type) {\n    super(pos, type);\n\n    this.position = pos;\n    this.in = this.position === 'left';\n  }\n\n  link(port) {\n    let link = this.createLinkModel();\n\n    link.setSourcePort(this);\n    link.setTargetPort(port);\n\n    return link;\n  }\n\n  canLinkToPort(port) {\n    return this.in !== port.in;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      position: this.position\n    });\n  }\n\n  deSerialize(data, engine) {\n    super.deSerialize(data, engine);\n    this.position = data.position;\n  }\n\n  createLinkModel() {\n    return new LinkModel();\n  }\n}\n","import * as _ from 'lodash';\nimport { PortModel as BasePortModel } from 'storm-react-diagrams';\n\nimport { LinkModel } from './../Link';\n\nexport class LeftRightBottomPort extends BasePortModel {\n  position;\n\n  constructor(pos = 'left', type) {\n    super(pos, type);\n\n    this.position = pos;\n    this.in = this.position === 'left';\n  }\n\n  link(port) {\n    let link = this.createLinkModel();\n\n    link.setSourcePort(this);\n    link.setTargetPort(port);\n\n    return link;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      position: this.position\n    });\n  }\n\n  canLinkToPort(port) {\n    return this.in !== port.in;\n  }\n\n  deSerialize(data, engine) {\n    super.deSerialize(data, engine);\n    this.position = data.position;\n  }\n\n  createLinkModel() {\n    return new LinkModel();\n  }\n}\n","import { LeftRightPort } from '../Ports';\n\nexport class PortModel extends LeftRightPort {\n  constructor(position = 'left') {\n    super(position, 'email');\n  }\n}\n","import { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport * as _ from 'lodash';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('email', element.id);\n\n    this.name = element.name;\n    this.selectedMail = element.selectedMail;\n    this.addPort(new PortModel('left'));\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.selectedMail = ob.selectedMail;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      selectedMail: this.selectedMail\n    });\n  }\n}\n","import * as React from 'react';\n\nimport { PortWidget as BasePortWidget } from 'storm-react-diagrams';\n\nexport class PortWidget extends BasePortWidget {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: false\n    };\n  }\n\n  getClassName() {\n    return (\n      'port ' +\n      super.getClassName() +\n      (this.state.selected ? this.bem('--selected') : '')\n    );\n  }\n\n  render() {\n    return (\n      <div\n        {...this.getProps()}\n        onMouseEnter={() => {\n          this.setState({ selected: true });\n        }}\n        onMouseLeave={() => {\n          this.setState({ selected: false });\n        }}\n        data-name={this.props.name}\n        data-nodeid={this.props.node.getID()}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import {\n  CANVAS_PANNABLE,\n  CANVAS_ZOOMABLE,\n  CANVAS_ZOOMABLE_PANNABLE,\n  CANVAS_NOTIFICATION\n} from './types';\n\nexport function setCanvasZoomable(zoomable) {\n  return {\n    type: CANVAS_ZOOMABLE,\n    payload: zoomable\n  };\n}\n\nexport function setCanvasPannable(pannable) {\n  return {\n    type: CANVAS_PANNABLE,\n    payload: pannable\n  };\n}\n\nexport function setCanvasZoomingAndPanning(zoomingAndPanning) {\n  return {\n    type: CANVAS_ZOOMABLE_PANNABLE,\n    payload: zoomingAndPanning\n  };\n}\n\nexport function setCanvasNotification(notificationOptions) {\n  return {\n    type: CANVAS_NOTIFICATION,\n    payload: notificationOptions\n  };\n}\n","import axios from 'axios';\nimport {\n  SET_SCENARIO_ID,\n  SET_SCENARIO_NAME,\n  SET_SCENARIO_LOADING,\n  SET_SCENARIO_PAYLOAD\n} from './types';\nimport * as config from '../config';\nimport { setCanvasNotification } from './CanvasActions';\n\nexport function setScenarioId(id) {\n  return {\n    type: SET_SCENARIO_ID,\n    payload: id\n  };\n}\n\nexport function setScenarioName(name) {\n  return {\n    type: SET_SCENARIO_NAME,\n    payload: name\n  };\n}\n\nexport function setScenarioPayload(payload) {\n  return {\n    type: SET_SCENARIO_PAYLOAD,\n    payload\n  };\n}\n\nexport function setScenarioLoading(loading) {\n  return {\n    type: SET_SCENARIO_LOADING,\n    payload: loading\n  };\n}\n\nexport function fetchScenario(scenarioId) {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(config.URL_SCENARIO_DETAIL + scenarioId)\n      .then(response => {\n        dispatch(setScenarioPayload(response.data));\n        dispatch(setScenarioName(response.data.name));\n        dispatch(setScenarioId(response.data.id));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Scenario fetching failed.'\n          })\n        );\n        console.log(error);\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from './../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\n\nimport { SEGMENTS_CHANGED } from './types';\n\nexport function updateSegments(segments) {\n  return {\n    type: SEGMENTS_CHANGED,\n    payload: segments\n  };\n}\n\nexport function fetchSegments() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(`${config.URL_SEGMENTS_INDEX}`)\n      .then(response => {\n        dispatch(updateSegments(response.data.segments));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(setScenarioLoading(false));\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Segments fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from './../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\n\nimport { TRIGGERS_CHANGED } from './types';\n\nexport function updateTriggers(triggers) {\n  return {\n    type: TRIGGERS_CHANGED,\n    payload: triggers\n  };\n}\n\nexport function fetchTriggers() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(`${config.URL_TRIGGERS_INDEX}`)\n      .then(response => {\n        dispatch(updateTriggers(response.data.events));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        console.log(error);\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Triggers fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from './../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\n\nimport { MAILS_CHANGED } from './types';\n\nexport function updateMails(mails) {\n  return {\n    type: MAILS_CHANGED,\n    payload: mails\n  };\n}\n\nexport function fetchMails() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(`${config.URL_MAILS_INDEX}`)\n      .then(response => {\n        dispatch(updateMails(response.data.mail_templates));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        console.log(error);\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Mails fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from './../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\nimport { GOALS_CHANGED } from './types';\n\nexport function updateGoals(goals) {\n  return {\n    type: GOALS_CHANGED,\n    payload: goals\n  };\n}\n\nexport function fetchGoals() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(config.URL_GOALS_INDEX)\n      .then(response => {\n        dispatch(updateGoals(response.data.goals));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        console.log(error);\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Goals fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from '../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\nimport { BANNERS_CHANGED } from './types';\n\nexport function updateBanners(banners) {\n  return {\n    type: BANNERS_CHANGED,\n    payload: banners\n  };\n}\n\nexport function fetchBanners() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(config.URL_BANNERS_INDEX)\n      .then(response => {\n        dispatch(updateBanners(response.data.banners));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        console.log(error);\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Banners fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from '../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\nimport { CRITERIA_CHANGED } from './types';\n\nexport function updateCriteria(criteria) {\n  return {\n    type: CRITERIA_CHANGED,\n    payload: criteria\n  };\n}\n\nexport function fetchCriteria() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(config.URL_SCENARIO_CRITERIA)\n      .then(response => {\n        dispatch(updateCriteria(response.data.blueprint));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(setScenarioLoading(false));\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Criteria fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from '@material-ui/core/Popover';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport * as config from '../config';\nimport { setCanvasNotification } from '../actions';\n\nclass StatisticsTooltip extends React.Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    anchorElement: PropTypes.instanceOf(Element)\n  };\n\n  state = {\n    html: null,\n    loading: true\n  };\n\n  componentDidUpdate(oldProps) {\n    if (\n      this.props.scenarioID &&\n      this.props.scenarioID !== oldProps.scenarioID\n    ) {\n      this.fetchStatistics();\n    }\n  }\n\n  fetchStatistics() {\n    const { dispatch, id, scenarioID, isTrigger } = this.props;\n    if (!scenarioID) return;\n\n    let url = isTrigger ? `${config.URL_TRIGGER_TOOLTIP}?trigger_uuid=${id}` : `${config.URL_ELEMENT_TOOLTIP}?element_uuid=${id}`; \n\n    this.setState({ loading: true });\n    axios\n      .get(url)\n      .then(({ data }) => {\n        this.setState({ html: data.html });\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Tooltip fetching failed.'\n          })\n        );\n      })\n      .then(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    const { anchorElement } = this.props;\n    const { html } = this.state;\n    if (!html) return null;\n\n    return (\n      <Popover\n        open={Boolean(anchorElement)}\n        anchorEl={anchorElement}\n        style={{ pointerEvents: 'none' }}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        {this.state.loading && (\n          <div className='node-tooltip-loader'>\n            <CircularProgress size={30} />\n          </div>\n        )}\n\n        <div\n          className='node-tooltip-wrapper'\n          dangerouslySetInnerHTML={{ __html: this.state.html }}\n        />\n      </Popover>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { scenario } = state;\n\n  return {\n    scenarioID: scenario.id\n  };\n}\n\nexport default connect(mapStateToProps)(StatisticsTooltip);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '10px',\n    marginBottom: '10px',\n    fontFamily: 'Roboto, Helvetica, Arial, sans-serif'\n  },\n  input: {\n    display: 'flex',\n    padding: 0,\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  chip: {\n    margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === 'light'\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\n  },\n  singleValue: {\n    fontSize: 14\n  },\n  placeholder: {\n    position: 'absolute',\n    left: 2,\n    fontSize: 14\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0\n  },\n  divider: {\n    height: theme.spacing.unit * 2\n  }\n});\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color='textSecondary'\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n  return (\n    <TextField\n      fullWidth\n      multiline\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps\n        }\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n}\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component='div'\n      style={{\n        fontWeight: props.isSelected ? 500 : 400\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nfunction Placeholder(props) {\n  return (\n    <Typography\n      color='textSecondary'\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction SingleValue(props) {\n  return (\n    <Typography\n      className={props.selectProps.classes.singleValue}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction ValueContainer(props) {\n  return (\n    <div className={props.selectProps.classes.valueContainer}>\n      {props.children}\n    </div>\n  );\n}\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={classNames(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\n\nfunction Menu(props) {\n  return (\n    <Paper\n      square\n      className={props.selectProps.classes.paper}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Paper>\n  );\n}\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer\n};\n\nclass MaterialSelect extends React.Component {\n  state = {\n    single: null,\n    multi: null\n  };\n\n  handleChange = name => value => {\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    const selectStyles = {\n      input: base => ({\n        ...base,\n        color: theme.palette.text.primary,\n        '& input': {\n          font: 'inherit'\n        }\n      })\n    };\n\n    return (\n      <div className={classes.root}>\n        <Select\n          classes={classes}\n          styles={selectStyles} \n          components={components}\n          menuPosition={'fixed'}\n          textFieldProps={{\n            label: this.props.label,\n            InputLabelProps: {\n              shrink: true\n            }\n          }}\n          isMulti={this.props.isMulti}\n          options={this.props.options}\n          value={this.props.value}\n          onChange={this.props.onChange}\n          placeholder={this.props.placeholder}\n        />\n      </div>\n    );\n  }\n}\n\nMaterialSelect.propTypes = {\n  classes: PropTypes.object,\n  theme: PropTypes.object,\n  options: PropTypes.array,\n  placeholder: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n  isMulti: PropTypes.bool\n};\n\nMaterialSelect.defaultProp = {\n  isMulti: false\n};\n\nexport default withStyles(styles, { withTheme: true })(MaterialSelect);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport ActionIcon from '@material-ui/icons/Mail';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport groupBy from 'lodash/groupBy';\n\nimport { PortWidget } from '../../widgets/PortWidget';\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport MaterialSelect from '../../MaterialSelect';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodeFormName: this.props.node.name,\n      selectedMail: this.props.node.selectedMail,\n      dialogOpened: false,\n      anchorElementForTooltip: null\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  getFormatedValue = () => {\n    const match = this.props.mails.find(mail => {\n      return mail.code === this.state.selectedMail;\n    });\n\n    return match\n      ? {\n          value: match.code,\n          label: match.name\n        }\n      : {};\n  };\n\n  // maybe refactor to more effective way if is a problem\n  transformOptionsForSelect = () => {\n    const lodashGrouped = groupBy(\n      this.props.mails,\n      mail => mail.mail_type.code\n    );\n\n    const properlyGrouped = [];\n\n    Object.keys(lodashGrouped).forEach(key => {\n      properlyGrouped.push({\n        label: lodashGrouped[key][0].mail_type.name,\n        sorting: lodashGrouped[key][0].mail_type.sorting,\n        options: lodashGrouped[key].map(mail => ({\n          value: mail.code,\n          label: mail.name\n        }))\n      });\n    });\n\n    const properlyGroupedSorted = properlyGrouped.sort((a, b) => {\n      return a.sorting - b.sorting;\n    });\n\n    return properlyGroupedSorted;\n  };\n\n  getSelectedMailValue = () => {\n    const selected = this.props.mails.find(\n      mail => mail.code === this.props.node.selectedMail\n    );\n\n    return selected ? ` - ${selected.name}` : '';\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        style={{ background: this.props.node.color }}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <ActionIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__left')}>\n              <PortWidget name='left' node={this.props.node} />\n            </div>\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node} />\n            </div>\n          </div>\n        </div>\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : `Mail ${this.getSelectedMailValue()}`}\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n          fullWidth\n        >\n          <DialogTitle id='form-dialog-title'>Email node</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText>Sends an email to user.</DialogContentText>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='action-name'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={12}>\n                <MaterialSelect\n                  options={this.transformOptionsForSelect()}\n                  value={this.getFormatedValue()}\n                  onChange={event => {\n                    this.setState({\n                      selectedMail: event.value\n                    });\n                  }}\n                  placeholder='Pick one'\n                  label='Selected Mail'\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.selectedMail = this.state.selectedMail;\n\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    mails: state.mails.availableMails\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('email');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='square-node'\n        className='email-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightPort } from '../Ports';\n\nexport class PortModel extends LeftRightPort {\n  constructor(position = 'left') {\n    super(position, 'banner');\n  }\n}\n","import { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport * as _ from 'lodash';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('banner', element.id);\n\n    this.name = element.name;\n    this.selectedBanner = element.selectedBanner;\n\n    this.expiresInTime = element.expiresInTime;\n    this.expiresInUnit = element.expiresInUnit;\n\n    this.addPort(new PortModel('left'));\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.selectedBanner = ob.selectedBanner;\n\n    this.expiresInTime = ob.expiresInTime || '1';\n    this.expiresInUnit = ob.expiresInUnit || 'days';\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      selectedBanner: this.selectedBanner,\n      expiresInTime: this.expiresInTime,\n      expiresInUnit: this.expiresInUnit,\n    });\n  }\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport ActionIcon from '@material-ui/icons/Adjust';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { PortWidget } from '../../widgets/PortWidget';\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport MaterialSelect from '../../MaterialSelect';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodeFormName: this.props.node.name,\n      selectedBanner: this.props.node.selectedBanner,\n      dialogOpened: false,\n      anchorElementForTooltip: null,\n      expiresInTime: this.props.node.expiresInTime,\n      expiresInUnit: this.props.node.expiresInUnit,\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  getFormatedValue = () => {\n    const match = this.props.banners.find(banner => {\n      return banner.id === this.state.selectedBanner;\n    });\n\n    return match\n      ? {\n          value: match.id,\n          label: match.name\n        }\n      : {};\n  };\n\n  // maybe refactor to more effective way if is a problem\n  transformOptionsForSelect = () => {\n    const banners = this.props.banners.map(banner => ({\n      value: banner.id,\n      label: banner.name,\n    }));\n    return banners;\n  };\n\n  getSelectedMailValue = () => {\n    const selected = this.props.banners.find(\n      banner => banner.id === this.props.node.selectedBanner\n    );\n\n    return selected ? ` - ${selected.name}` : '';\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        style={{ background: this.props.node.color }}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <ActionIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__left')}>\n              <PortWidget name='left' node={this.props.node} />\n            </div>\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node} />\n            </div>\n          </div>\n        </div>\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : `Banner ${this.getSelectedMailValue()}`}\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n          fullWidth\n        >\n          <DialogTitle id='form-dialog-title'>Banner node</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText>Shows a one-time banner to user.</DialogContentText>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='action-name'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={12}>\n                <MaterialSelect\n                  options={this.transformOptionsForSelect()}\n                  value={this.getFormatedValue()}\n                  onChange={event => {\n                    this.setState({\n                      selectedBanner: event.value\n                    });\n                  }}\n                  placeholder='Pick one'\n                  label='Selected Banner'\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  id='expires-in-time'\n                  label='Expires in'\n                  type='number'\n                  helperText=\"Banner is not shown after given period\"\n                  fullWidth\n                  value={this.state.expiresInTime}\n                  onChange={event => {\n                    this.setState({\n                      expiresInTime: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <FormControl fullWidth>\n                  <InputLabel htmlFor='time-unit'>Time unit</InputLabel>\n                  <Select\n                    value={this.state.expiresInUnit}\n                    onChange={event => {\n                      this.setState({\n                        expiresInUnit: event.target.value\n                      });\n                    }}\n                    inputProps={{\n                      name: 'expires-in-unit',\n                      id: 'expires-in-unit'\n                    }}\n                  >\n                    <MenuItem value='minutes'>Minutes</MenuItem>\n                    <MenuItem value='hours'>Hours</MenuItem>\n                    <MenuItem value='days'>Days</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.selectedBanner = this.state.selectedBanner;\n                this.props.node.expiresInTime = this.state.expiresInTime;\n                this.props.node.expiresInUnit = this.state.expiresInUnit;\n\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    banners: state.banners.availableBanners\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('banner');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='square-node'\n        className='banner-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightBottomPort } from './../Ports';\n\nexport class PortModel extends LeftRightBottomPort {\n  constructor(position = 'top') {\n    super(position, 'segment');\n  }\n}\n","import { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport * as _ from 'lodash';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('segment', element.id);\n\n    this.name = element.name;\n    this.selectedSegment = element.selectedSegment;\n\n    this.addPort(new PortModel('left'));\n    this.addPort(new PortModel('bottom'));\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.selectedSegment = ob.selectedSegment;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      selectedSegment: this.selectedSegment\n    });\n  }\n}","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport SegmentIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport OkIcon from '@material-ui/icons/Check';\nimport NopeIcon from '@material-ui/icons/Close';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Icon from '@material-ui/core/Icon';\nimport groupBy from 'lodash/groupBy';\n\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport { PortWidget } from './../../widgets/PortWidget';\nimport MaterialSelect from '../../MaterialSelect';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\nimport SegmenterService from '../../../services/SegmenterService';\nimport { fetchSegments } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodeFormName: this.props.node.name,\n      selectedSegment: this.props.node.selectedSegment,\n      dialogOpened: false,\n      anchorElementForTooltip: null,\n      creatingNewSegment: false\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      selectedSegment: this.props.node.selectedSegment,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  // maybe refactor to more effective way if is a problem\n  transformOptionsForSelect = () => {\n    const lodashGrouped = groupBy(\n      this.props.segments,\n      segment => segment.group.name\n    );\n\n    const properlyGrouped = [];\n\n    Object.keys(lodashGrouped).forEach(key => {\n      properlyGrouped.push({\n        label: key,\n        sorting: lodashGrouped[key][0].group.sorting,\n        options: lodashGrouped[key].map(segment => ({\n          value: segment.code,\n          label: segment.name\n        }))\n      });\n    });\n\n    const properlyGroupedSorted = properlyGrouped.sort((a, b) => {\n      return a.sorting - b.sorting;\n    });\n\n    return properlyGroupedSorted;\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  getFormatedValue = () => {\n    const match = this.props.segments.find(segment => {\n      return segment.code === this.state.selectedSegment;\n    });\n\n    return match\n      ? {\n          value: match.code,\n          label: match.name\n        }\n      : {};\n  };\n\n  getSelectedSegmentValue = () => {\n    const selected = this.props.segments.find(\n      segment => segment.code === this.props.node.selectedSegment\n    );\n\n    return selected ? ` - ${selected.name}` : '';\n  };\n\n  handleNewSegmentClick = () => {\n    window.addEventListener('savedSegment', this.handleSavedNewSegment);\n    window.addEventListener('canceledNewSegment', this.handleCancelNewSegment);\n    this.setState({ creatingNewSegment: true });\n    setTimeout(() => {\n      SegmenterService.init();\n    });\n  };\n\n  handleSavedNewSegment = event => {\n    this.props.dispatch(fetchSegments());\n    this.setState({\n      selectedSegment: event.detail.code,\n      creatingNewSegment: false\n    });\n    this.props.node.name = this.state.nodeFormName;\n    this.props.node.selectedSegment = this.state.selectedSegment;\n    this.props.diagramEngine.repaintCanvas();\n    this.closeDialog();\n    window.removeEventListener('savedSegment', this.handleSavedNewSegment);\n  };\n\n  handleCancelNewSegment = event => {\n    this.setState({ creatingNewSegment: false });\n    window.removeEventListener(\n      'canceledNewSegment',\n      this.handleSavedNewSegment\n    );\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : `Segment ${this.getSelectedSegmentValue()}`}\n          </div>\n        </div>\n\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <SegmentIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__left')}>\n              <PortWidget name='left' node={this.props.node} />\n            </div>\n\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node}>\n                <OkIcon\n                  style={{\n                    position: 'absolute',\n                    top: '-20px',\n                    right: '-20px',\n                    color: '#2ECC40'\n                  }}\n                />\n              </PortWidget>\n            </div>\n\n            <div className={this.bem('__bottom')}>\n              <PortWidget name='bottom' node={this.props.node}>\n                <NopeIcon\n                  style={{\n                    position: 'absolute',\n                    top: '8px',\n                    right: '-22px',\n                    color: '#FF695E'\n                  }}\n                />\n              </PortWidget>\n            </div>\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n          fullScreen={this.state.creatingNewSegment}\n          disableEscapeKeyDown={this.state.creatingNewSegment}\n        >\n          {!this.state.creatingNewSegment && (\n            <>\n              <DialogTitle id='form-dialog-title'>Segment node</DialogTitle>\n\n              <DialogContent>\n                <DialogContentText>\n                  Segments evaluate user's presence in a group of users defined\n                  by system-provided conditions. Execution flow can be directed\n                  based on presence/absence of user within the selected segment.\n                  You can either pick one of the existing segments or create a\n                  new one.\n                </DialogContentText>\n\n                <Grid container spacing={32}>\n                  <Grid item xs={6}>\n                    <TextField\n                      margin='normal'\n                      id='segment-name'\n                      label='Node name'\n                      fullWidth\n                      value={this.state.nodeFormName}\n                      onChange={event => {\n                        this.setState({\n                          nodeFormName: event.target.value\n                        });\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n\n                <Grid container spacing={32} alignItems='flex-end'>\n                  <Grid item xs={8}>\n                    <MaterialSelect\n                      options={this.transformOptionsForSelect()}\n                      value={this.getFormatedValue()}\n                      onChange={event => {\n                        console.log(event.value);\n                        this.setState({\n                          selectedSegment: event.value\n                        });\n                      }}\n                      placeholder='Pick one'\n                      label='Selected Segment'\n                    />\n                  </Grid>\n                  {window.RempSegmenter && (\n                    <Grid item xs={4} style={{textAlign: 'right', paddingBottom: '4px'}}>\n                      <Button\n                        variant='contained'\n                        color='primary'\n                        size='small'\n                        style={{ position: 'relative', bottom: '10px' }}\n                        onClick={this.handleNewSegmentClick}\n                      >\n                        <Icon style={{ marginRight: '5px' }}>add_circle</Icon>\n                        New segment\n                      </Button>\n                    </Grid>\n                  )}\n                </Grid>\n              </DialogContent>\n            </>\n          )}\n\n          {this.state.creatingNewSegment && (\n            <DialogContent>\n              <div\n                id='segmenter'\n                style={{ position: 'fixed', zIndex: '99999999' }}\n              />\n            </DialogContent>\n          )}\n\n          {!this.state.creatingNewSegment && (\n            <DialogActions>\n              <Button\n                color='secondary'\n                onClick={() => {\n                  this.closeDialog();\n                }}\n              >\n                Cancel\n              </Button>\n\n              <Button\n                color='primary'\n                onClick={() => {\n                  // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                  this.props.node.name = this.state.nodeFormName;\n                  this.props.node.selectedSegment = this.state.selectedSegment;\n\n                  this.props.diagramEngine.repaintCanvas();\n                  this.closeDialog();\n                }}\n              >\n                Save changes\n              </Button>\n            </DialogActions>\n          )}\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { segments, dispatch } = state;\n\n  return {\n    segments: segments.avalaibleSegments,\n    dispatch\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('segment');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='diamond-node'\n        className='segment-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightPort } from './../Ports';\n\nexport class PortModel extends LeftRightPort {\n  constructor(position = 'left') {\n    super(position, 'trigger');\n  }\n}\n","import * as _ from 'lodash';\nimport { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('trigger', element.id);\n\n    this.name = element.name;\n    this.selectedTrigger = element.selectedTrigger;\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.selectedTrigger = ob.selectedTrigger;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      selectedTrigger: this.selectedTrigger\n    });\n  }\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport TriggerIcon from '@material-ui/icons/Notifications';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { PortWidget } from './../../widgets/PortWidget';\nimport MaterialSelect from '../../MaterialSelect';\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      nodeFormName: this.props.node.name,\n      selectedTrigger: this.props.node.selectedTrigger,\n      dialogOpened: false,\n      anchorElementForTooltip: null\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  getTriggersInSelectableFormat = () => {\n    return this.props.triggers.map(trigger => {\n      return {\n        value: trigger.code,\n        label: trigger.name\n      };\n    });\n  };\n\n  getSelectedTriggerValue = () => {\n    const selected = this.getTriggersInSelectableFormat().find(\n      trigger => trigger.value === this.props.node.selectedTrigger\n    );\n\n    return selected ? ` - ${selected.label}` : '';\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        style={{ background: this.props.node.color }}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <TriggerIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node} />\n            </div>\n          </div>\n        </div>\n\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : `Event ${this.getSelectedTriggerValue()}`}\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          isTrigger={true}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n        >\n          <DialogTitle id='form-dialog-title'>Trigger node</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText>\n              Events are emitted on any change related to user. We recommend to\n              combine \"before\" events with \"Wait\" operations to achieve\n              execution at any desired time.\n            </DialogContentText>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='trigger-name'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={12}>\n                <MaterialSelect\n                  options={this.getTriggersInSelectableFormat()}\n                  value={this.getTriggersInSelectableFormat().find(\n                    option => option.value === this.state.selectedTrigger\n                  )}\n                  onChange={event => {\n                    this.setState({\n                      selectedTrigger: event.value\n                    });\n                  }}\n                  placeholder='Pick one'\n                  label='Selected Trigger'\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.selectedTrigger = this.state.selectedTrigger;\n\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { triggers } = state;\n\n  return {\n    triggers: triggers.avalaibleTriggers\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('trigger');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='square-node'\n        className='trigger-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightPort } from './../Ports';\n\nexport class PortModel extends LeftRightPort {\n  constructor(position = 'left') {\n    super(position, 'wait');\n  }\n}\n","import * as _ from 'lodash';\nimport { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('wait', element.id);\n\n    this.name = element.name;\n    this.waitingTime = element.waitingTime || 10;\n    this.waitingUnit = element.waitingUnit || 'minutes';\n\n    this.addPort(new PortModel('left'));\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.waitingTime = ob.waitingTime;\n    this.waitingUnit = ob.waitingUnit;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      waitingTime: this.waitingTime,\n      waitingUnit: this.waitingUnit\n    });\n  }\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport WaitIcon from '@material-ui/icons/AccessAlarmsOutlined';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { PortWidget } from './../../widgets/PortWidget';\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodeFormWaitingTime: this.props.node.waitingTime,\n      nodeFormName: this.props.node.name,\n      timeUnit: this.props.node.waitingUnit,\n      dialogOpened: false,\n      anchorElementForTooltip: null\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormWaitingTime: this.props.node.waitingTime,\n      nodeFormName: this.props.node.name,\n      timeUnit: this.props.node.waitingUnit,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        style={{ background: this.props.node.color }}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <WaitIcon />\n          </div>\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__left')}>\n              <PortWidget name='left' node={this.props.node} />\n            </div>\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node} />\n            </div>\n          </div>\n        </div>\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : `Wait - ${this.props.node.waitingTime} ${\n                  this.props.node.waitingUnit\n                }`}\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n        >\n          <DialogTitle id='form-dialog-title'>Wait node</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Postpones the execution of next node in flow by selected amount of\n              time.\n            </DialogContentText>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='waiting-time'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  id='waiting-time'\n                  label='Waiting time'\n                  type='number'\n                  fullWidth\n                  value={this.state.nodeFormWaitingTime}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormWaitingTime: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <FormControl fullWidth>\n                  <InputLabel htmlFor='time-unit'>Time unit</InputLabel>\n                  <Select\n                    value={this.state.timeUnit}\n                    onChange={event => {\n                      this.setState({\n                        timeUnit: event.target.value\n                      });\n                    }}\n                    inputProps={{\n                      name: 'time-unit',\n                      id: 'time-unit'\n                    }}\n                  >\n                    <MenuItem value='minutes'>Minutes</MenuItem>\n                    <MenuItem value='hours'>Hours</MenuItem>\n                    <MenuItem value='days'>Days</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                this.props.node.waitingTime = this.state.nodeFormWaitingTime;\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.waitingUnit = this.state.timeUnit;\n\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { segments } = state;\n\n  return {\n    segments: segments.avalaibleSegments\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\nimport * as React from 'react';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('wait');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='round-node'\n        className='wait-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightBottomPort } from '../Ports';\n\nexport class PortModel extends LeftRightBottomPort {\n  constructor(position = 'top') {\n    super(position, 'goal');\n  }\n}\n","import { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport * as _ from 'lodash';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('goal', element.id);\n\n    this.name = element.name;\n    this.selectedGoals = element.selectedGoals;\n    this.timeoutTime = element.timeoutTime;\n    this.timeoutUnit = element.timeoutUnit;\n\n    this.recheckPeriodTime = element.recheckPeriodTime;\n    this.recheckPeriodUnit = element.recheckPeriodUnit;\n\n    this.addPort(new PortModel('left'));\n    this.addPort(new PortModel('bottom'));\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.selectedGoals = ob.selectedGoals;\n    this.timeoutTime = ob.timeoutTime || '';\n    this.timeoutUnit = ob.timeoutUnit || 'days';\n\n    this.recheckPeriodTime = ob.recheckPeriodTime || '1';\n    this.recheckPeriodUnit = ob.recheckPeriodUnit || 'hours';\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      selectedGoals: this.selectedGoals,\n      timeoutTime: this.timeoutTime,\n      timeoutUnit: this.timeoutUnit,\n      recheckPeriodTime: this.recheckPeriodTime,\n      recheckPeriodUnit: this.recheckPeriodUnit,\n    });\n  }\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport OkIcon from '@material-ui/icons/Check';\nimport TimeoutIcon from '@material-ui/icons/AccessTime';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport GoalIcon from '@material-ui/icons/CheckBox';\n\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport { PortWidget } from './../../widgets/PortWidget';\nimport MaterialSelect from '../../MaterialSelect';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodeFormName: this.props.node.name,\n      selectedGoals: this.props.node.selectedGoals,\n      timeoutTime: this.props.node.timeoutTime,\n      timeoutUnit: this.props.node.timeoutUnit,\n      recheckPeriodTime: this.props.node.recheckPeriodTime,\n      recheckPeriodUnit: this.props.node.recheckPeriodUnit,\n      dialogOpened: false,\n      anchorElementForTooltip: null,      \n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      selectedGoals: this.props.node.selectedGoals,\n      timeoutTime: this.props.node.timeoutTime,\n      timeoutUnit: this.props.node.timeoutUnit,\n      recheckPeriodTime: this.props.node.recheckPeriodTime,\n      recheckPeriodUnit: this.props.node.recheckPeriodUnit,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  transformOptionsForSelect = () => {\n    const goals = this.props.goals.map(goal => ({\n      value: goal.code,\n      label: goal.name,\n    }));\n    return goals;\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  getFormatedValue = () => {\n    let goals = {};\n    this.props.goals.forEach(goal => {\n      goals[goal.code] = goal;\n    });\n\n    let matches = [];\n\n    if (this.state.selectedGoals !== undefined) {\n      this.state.selectedGoals.forEach(goalCode => {\n        matches.push({\n          value: goalCode,\n          label: goals[goalCode].name \n        });\n      });\n    }\n\n    return matches;\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name ? this.props.node.name : 'Goal'}\n          </div>\n        </div>\n\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <GoalIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__left')}>\n              <PortWidget name='left' node={this.props.node} />\n            </div>\n\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node}>\n                <OkIcon\n                  style={{\n                    position: 'absolute',\n                    top: '-20px',\n                    right: '-20px',\n                    color: '#2ECC40'\n                  }}\n                />\n              </PortWidget>\n            </div>\n\n            <div className={this.bem('__bottom')}>\n              <PortWidget name='bottom' node={this.props.node}>\n                <TimeoutIcon\n                  style={{\n                    position: 'absolute',\n                    top: '8px',\n                    right: '-22px',\n                    color: '#FF695E'\n                  }}\n                />\n              </PortWidget>\n            </div>\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n          // fullScreen={this.state.creatingNewSegment}\n          // disableEscapeKeyDown={this.state.creatingNewSegment}\n        >            \n          <DialogTitle id='form-dialog-title'>Goal node</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText>\n              Goal node evaluates whether user has completed selected onboarding goals. \n              Timeout value can be optionally specified, defining a point in time when evalution of completed goals is stopped.\n              Execution flow can be directed two ways from the node - a positive direction, when all goals are completed, or a negative one, when timeout threshold is reached.\n            </DialogContentText>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='goal-name'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={12}>\n                <MaterialSelect\n                  options={this.transformOptionsForSelect()}\n                  value={this.getFormatedValue()}\n                  onChange={selectedGoals => {\n                    this.setState({\n                      selectedGoals: selectedGoals.map(item => item.value)\n                    });\n                  }}\n                  isMulti={true}\n                  placeholder='Pick goals'\n                  label='Selected Goal(s)'\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  id='recheck-period-time'\n                  label='Recheck period time'\n                  type='number'\n                  helperText=\"How often goals completition should be checked\"\n                  fullWidth\n                  value={this.state.recheckPeriodTime}\n                  onChange={event => {\n                    this.setState({\n                      recheckPeriodTime: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <FormControl fullWidth>\n                  <InputLabel htmlFor='time-unit'>Time unit</InputLabel>\n                  <Select\n                    value={this.state.recheckPeriodUnit}\n                    onChange={event => {\n                      this.setState({\n                        recheckPeriodUnit: event.target.value\n                      });\n                    }}\n                    inputProps={{\n                      name: 'recheck-period-unit',\n                      id: 'recheck-period-unit'\n                    }}\n                  >\n                    <MenuItem value='minutes'>Minutes</MenuItem>\n                    <MenuItem value='hours'>Hours</MenuItem>\n                    <MenuItem value='days'>Days</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n            \n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  id='timeout-time'\n                  label='Timeout time'\n                  type='number'\n                  placeholder=\"No timeout\"\n                  helperText=\"Optionally select a timeout\"\n                  fullWidth\n                  value={this.state.timeoutTime}\n                  onChange={event => {\n                    this.setState({\n                      timeoutTime: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <FormControl fullWidth>\n                  <InputLabel htmlFor='time-unit'>Time unit</InputLabel>\n                  <Select\n                    value={this.state.timeoutUnit}\n                    onChange={event => {\n                      this.setState({\n                        timeoutUnit: event.target.value\n                      });\n                    }}\n                    inputProps={{\n                      name: 'time-unit',\n                      id: 'time-unit'\n                    }}\n                  >\n                    <MenuItem value='minutes'>Minutes</MenuItem>\n                    <MenuItem value='hours'>Hours</MenuItem>\n                    <MenuItem value='days'>Days</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.selectedGoals = this.state.selectedGoals;\n                this.props.node.timeoutTime = this.state.timeoutTime;\n                this.props.node.timeoutUnit = this.state.timeoutUnit;\n                this.props.node.recheckPeriodTime = this.state.recheckPeriodTime;\n                this.props.node.recheckPeriodUnit = this.state.recheckPeriodUnit;\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { goals, dispatch } = state;\n\n  return {\n    goals: goals.availableGoals,\n    dispatch\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('goal');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='diamond-node'\n        className='goal-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightBottomPort } from './../Ports';\n\nexport class PortModel extends LeftRightBottomPort {\n  constructor(position = 'top') {\n    super(position, 'condition');\n  }\n}\n","import { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport * as _ from 'lodash';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('condition', element.id);\n\n    this.name = element.name;\n    this.conditions = element.conditions;\n\n    this.addPort(new PortModel('left'));\n    this.addPort(new PortModel('bottom'));\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.conditions = ob.conditions;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      conditions: this.conditions,\n    });\n  }\n}\n","import uuidv4 from 'uuid/v4';\n\n///////////////////////////\n// local reducer and state for criteria builder\n///////////////////////////\n\nexport function emptyNode() {\n\treturn {\n\t\tid: uuidv4(),\n\t\tkey: ''\n\t};\n}\n\nexport function actionSetNodeValues(nodeId, values) {\n\treturn {\n\t\ttype: 'SET_NODE_VALUES',\n\t\tpayload: {\n\t\t\tvalues: values,\n\t\t\tnodeId: nodeId,\n\t\t}\n\t};\n}\n\nexport function actionSetKeyForNode(nodeId, key) {\n\treturn {\n\t\ttype: 'SET_KEY_FOR_NODE',\n\t\tpayload: {\n\t\t\tkey: key,\n\t\t\tnodeId: nodeId,\n\t\t}\n\t};\n}\n\nexport function actionDeleteNode(nodeId) {\n\treturn {\n\t\ttype: 'DELETE_NODE',\n\t\tpayload: {\n\t\t\tnodeId: nodeId,\n\t\t}\n\t};\n}\n\nexport function actionAddCriterion() {\n\treturn {\n\t\ttype: 'ADD_CRITERION'\n\t};\n}\n\nexport function actionSetEvent(event) {\n\treturn {\n\t\ttype: 'SET_EVENT',\n\t\tpayload: event\n\t};\n}\n\nexport function reducer(state, action) {\n\tswitch (action.type) {\n\t\tcase 'SET_NODE_VALUES':\n\t\t\treturn {\n\t\t\t\t...state, nodes: state.nodes.map(node => {\n\t\t\t\t\tif (node.id === action.payload.nodeId) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...node,\n\t\t\t\t\t\t\tvalues: action.payload.values\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn node;\n\t\t\t\t})\n\t\t\t};\n\t\tcase 'SET_EVENT':\n\t\t\t// this also resets nodes state\n\t\t\treturn {\n\t\t\t\t...state, nodes: [emptyNode()], event: action.payload\n\t\t\t};\n\t\tcase 'ADD_CRITERION':\n\t\t\treturn {\n\t\t\t\t...state, nodes: [...state.nodes, emptyNode()]\n\t\t\t};\n\t\tcase 'DELETE_NODE':\n\t\t\treturn {\n\t\t\t\t...state, nodes: state.nodes.filter(n => n.id !== action.payload.nodeId)\n\t\t\t};\n\t\tcase 'SET_KEY_FOR_NODE':\n\t\t\tlet newNodes = state.nodes.map(node => {\n\t\t\t\tif (action.payload.nodeId === node.id) return {\n\t\t\t\t\tid: node.id,\n\t\t\t\t\tkey: action.payload.key,\n\t\t\t\t\tvalues: [], // reset values, TODO: add default value depending on key type\n\t\t\t\t};\n\t\t\t\treturn node;\n\t\t\t});\n\t\t\treturn {\n\t\t\t\t...state, nodes: newNodes\n\t\t\t};\n\t\tdefault:\n\t\t\tthrow new Error(\"unsupported action type \" + action.type)\n\t}\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { actionSetNodeValues } from '../criteriaReducer';\n\nconst elementStyles = makeStyles(theme => ({\n  // Puts visually OR/AND between tags\n  chipRoot: props => ({\n    \"&:not(:first-child)\": {\n      \"&::before\": {\n        content: \"'\" + props.operator + \"'\",\n        textTransform: 'uppercase',\n        position: 'absolute',\n        left: '-20px',\n      },\n      marginLeft: '20px'\n    },\n    position: 'relative'\n  })\n}));\n\nfunction selectedOptions(selectedValues, options) {\n  const s = new Set(selectedValues);\n  let selected = options.filter(option => {\n    let has = s.has(option.value);\n    if (has) {\n      // for free-solo mode\n      s.delete(option.value);\n    }\n    return has;\n  });\n  // If free solo mode is enabled, there might be additional selected values (outside of options), add them as well\n  return selected.concat([...s]);\n}\n\nfunction optionLabel(option) {\n  if (typeof(option) === 'string') {\n    // free-solo value\n    return option;\n  } else {\n    // predefined option value\n    return option.label;\n  }\n}\n\nexport default function StringLabeledArrayParam(props) {\n  const classes = elementStyles({operator: props.params.operator});\n  const handleChange = (event, values) => {\n    props.dispatch(actionSetNodeValues(props.node.id, {\n      operator: props.params.operator, // TODO add ability to change operator\n      selection: values.map(item => {\n        if (typeof(item) === 'string') {\n          // free-solo value\n          return item;\n        } else {\n          // predefined option value\n          return item.value;\n        }\n      })\n    }));\n  };\n\n  return (\n    <Autocomplete\n        multiple\n        ChipProps={{\n          classes: {\n            root: classes.chipRoot\n          }\n        }}\n        options={props.params.options}\n        getOptionLabel={optionLabel}\n        onChange={handleChange}\n        value={selectedOptions(props.node.values.selection, props.params.options)}\n        freeSolo={props.params.freeSolo}\n        renderInput={params => (\n          <TextField\n            {...params}\n            variant=\"standard\"\n            label={props.params.label}\n            placeholder=\"\"\n            fullWidth\n          />\n        )}\n      />\n  );\n}\n\nStringLabeledArrayParam.propTypes = {\n  // node = {values: {selection: ['city_1'], operator: 'or'}, key: 'type', id: '1'}\n  node: PropTypes.object.isRequired,\n  // params = {label: 'Cities', type: 'string_labeled_array', options: [{value: 'city_1', label: 'City 1'}], operator: 'or', freeSolo: true}\n  params: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { actionSetNodeValues } from '../criteriaReducer';\n\nexport default function BooleanParam(props) {\n    // if not selected yet, set selection to True\n    if (props.node.values.selection === undefined) {\n      props.dispatch(actionSetNodeValues(props.node.id, {\n        selection: true\n      }));\n    }\n\n    const handleChange = (event) => {\n      props.dispatch(actionSetNodeValues(props.node.id, {\n        selection: event.target.checked\n      }));\n    };\n  \n    return (\n      <FormControlLabel\n          onChange={handleChange}\n          control={<Switch />}\n          checked={props.node.values.selection !== undefined && props.node.values.selection}\n          label={props.params.label}\n        />\n    );\n  }\n\nBooleanParam.propTypes = {\n    // node = {values: {selection: true}, key: 'type_of_boolean_condition', id: '1'}\n    node: PropTypes.object.isRequired,\n    // params = {label: 'Is recurrent', type: 'boolean'}\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n};","import React, { useImperativeHandle, useReducer, useContext, forwardRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\nimport { Card, CardContent, FormControl, InputLabel, Select, MenuItem, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport StringLabeledArrayParam from './CriteriaTypes/StringLabeledArrayParam';\nimport BooleanParam from './CriteriaTypes/BooleanParam';\nimport { emptyNode, reducer, actionSetEvent, actionSetKeyForNode, actionAddCriterion, actionDeleteNode } from './criteriaReducer';\n\nconst BuilderDispatch = React.createContext(null);\n\n////////////////////\n// CriteriaParams\n////////////////////\n\n// Props - node, params\nfunction CriteriaParams(props) {\n  const dispatch = useContext(BuilderDispatch);\n  let typeParams = props.params[props.node.key];\n  switch (typeParams.type) {\n    case 'string_labeled_array':\n      return (<StringLabeledArrayParam node={props.node} params={typeParams} dispatch={dispatch}></StringLabeledArrayParam>);\n    case 'boolean':\n      return (<BooleanParam node={props.node} params={typeParams} dispatch={dispatch}></BooleanParam>);\n    default:\n      throw new Error(\"unsupported node type \" + typeParams.type);\n  }\n}\n\n////////////////////\n// CriteriaForm\n////////////////////\n\nconst useCriteriaFormStyles = makeStyles({\n  cardContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    backgroundColor: '#F2F2F2',\n  },\n  formControl: {\n    minWidth: '180px',\n  },\n});\n\n// Props - node, criteria\nfunction CriteriaForm(props) {\n  const classes = useCriteriaFormStyles();\n  const dispatch = useContext(BuilderDispatch);\n\n  return (\n    <Card>\n      <CardContent className={classes.cardContent}>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"select-criteria-label\">Criteria</InputLabel>\n          <Select\n            labelId=\"select-criteria-label\"\n            id=\"select-criteria\"\n            placeholder=\"Select criteria\"\n            value={props.node.key}\n            onChange={e => dispatch(actionSetKeyForNode(props.node.id, e.target.value))}\n          >\n            {props.criteria.map(cr => (\n              <MenuItem key={cr.key} value={cr.key}>{cr.label}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <IconButton onClick={() => dispatch(actionDeleteNode(props.node.id))} \n          size=\"small\" \n          className={classes.icon} \n          aria-label=\"delete\">\n          <DeleteIcon />\n        </IconButton>\n      </CardContent>\n\n      { props.node.key &&\n        <CardContent>\n          <CriteriaParams \n            node={props.node} \n            params={props.criteria.filter(cr => cr.key === props.node.key)[0].params}>\n          </CriteriaParams>\n        </CardContent>\n      }\n    </Card>\n  );\n}\n\n////////////////////\n// CriteriaTable\n////////////////////\n\nconst useCriteriaTableStyles = makeStyles({\n  andContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexGrow: 0,\n    maxWidth: '100%',\n    flexBasis: '100%'\n  }\n});\n\n// Props - blueprint, nodes\nfunction CriteriaTable(props) {\n  const classes = useCriteriaTableStyles();\n  const dispatch = useContext(BuilderDispatch);\n\n  return (\n    <>\n      {props.nodes.map((node, index) => (\n        <React.Fragment key={node.id}>\n          { index >= 1 &&\n            <div className={classes.andContainer}>AND</div>\n          }\n          <Grid item xs={12}>\n            <CriteriaForm\n              node={node}\n              criteria={props.blueprint.criteria}>\n            </CriteriaForm>\n          </Grid>\n        </React.Fragment>\n      ))}\n\n      <Grid item xs={12}>\n        <Button onClick={() => dispatch(actionAddCriterion())} className={classes.button} startIcon={<AddIcon />}>\n          Add new criteria\n        </Button>\n      </Grid>\n    </>\n  )\n}\n\n////////////////////\n// CriteriaBuilder\n////////////////////\n\nconst useCriteriaBuilderStyles = makeStyles({\n  selectedButton: {\n    backgroundColor: \"#E4E4E4\"\n  }, \n  deselectedButton: {\n    color:  \"#A6A6A6\"\n  }\n});\n\nfunction CriteriaBuilder(props, ref) {\n  const classes = useCriteriaBuilderStyles();\n  const criteria = useSelector(state => state.criteria.criteria);\n\n  const [state, dispatch] = useReducer(reducer, {\n    version: 1,\n    event: criteria[0].event,\n    nodes: [emptyNode()] // by default, one empty node\n  , ...props.conditions});\n\n  // expose state to outer node\n  useImperativeHandle(ref, () => ({\n    state: state\n  }));\n\n  return (\n    <BuilderDispatch.Provider value={dispatch}>\n      <Grid container item xs={12} spacing={3}>\n        <Grid item xs={12}>\n          <ButtonGroup aria-label=\"outlined button group\">\n            {criteria.map(criteriaBlueprint => (\n              <Button \n                onClick={() => dispatch(actionSetEvent(criteriaBlueprint.event))}\n                className={state.event === criteriaBlueprint.event ? classes.selectedButton : classes.deselectedButton}\n                key={criteriaBlueprint.event}>{criteriaBlueprint.event}</Button>\n            ))}\n          </ButtonGroup>\n        </Grid>\n\n        {criteria.filter(cb => cb.event === state.event).map(criteriaBlueprint => (\n            <CriteriaTable \n              key={criteriaBlueprint.event} \n              blueprint={criteriaBlueprint}\n              nodes={state.nodes}></CriteriaTable>\n          )\n        )}\n      </Grid>\n    </BuilderDispatch.Provider>\n  )\n}\n\n// forwardRef is here used to access local state from parent node\nexport default forwardRef(CriteriaBuilder)\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport ConditionIcon from '@material-ui/icons/CallSplit';\nimport OkIcon from '@material-ui/icons/Check';\nimport Grid from '@material-ui/core/Grid';\nimport NopeIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CriteriaBuilder from './CriteriaBuilder';\n\nimport { PortWidget } from './../../widgets/PortWidget';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Use it to access CriteriaBuilder state\n    this.builderRef = React.createRef();\n\n    this.state = {\n      nodeFormName: this.props.node.name,\n      dialogOpened: false,\n      anchorElementForTooltip: null\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        style={{ background: this.props.node.color }}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : 'Condition'}\n          </div>\n        </div>\n\n\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <ConditionIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__left')}>\n              <PortWidget name='left' node={this.props.node} />\n            </div>\n\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node}>\n                <OkIcon\n                  style={{\n                    position: 'absolute',\n                    top: '-20px',\n                    right: '-20px',\n                    color: '#2ECC40'\n                  }}\n                />\n              </PortWidget>\n            </div>\n\n            <div className={this.bem('__bottom')}>\n              <PortWidget name='bottom' node={this.props.node}>\n                <NopeIcon\n                  style={{\n                    position: 'absolute',\n                    top: '8px',\n                    right: '-22px',\n                    color: '#FF695E'\n                  }}\n                />\n              </PortWidget>\n            </div>\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n        >\n          <DialogTitle id='form-dialog-title'>\n            Event Condition\n          </DialogTitle>\n\n          <DialogContent>\n            <Grid container spacing={32}>\n              <Grid style={{marginBottom: '10px'}} item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='trigger-name'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n\n              <CriteriaBuilder\n                conditions={this.props.node.conditions}\n                ref={this.builderRef}>\n              </CriteriaBuilder>\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.conditions = this.builderRef.current.state;\n\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { dispatch } = state;\n  return { dispatch };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('condition');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='diamond-node'\n        className='condition-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import * as React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport { DiagramWidget } from 'storm-react-diagrams';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EmailIcon from '@material-ui/icons/Mail';\nimport BannerIcon from '@material-ui/icons/Adjust';\nimport TriggerIcon from '@material-ui/icons/Notifications';\nimport WaitIcon from '@material-ui/icons/AccessAlarmsOutlined';\nimport SegmentIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport ConditionIcon from '@material-ui/icons/CallSplit';\nimport GoalIcon from '@material-ui/icons/CheckBox';\n\nimport * as config from './../../config';\nimport { TrayItemWidget } from './TrayItemWidget';\nimport { ExportService } from './../../services/ExportService';\nimport Notification from '../Notification';\nimport { Email, Segment, Trigger, Wait, Goal, Banner, Condition } from './../elements';\nimport {\n  setScenarioId,\n  setScenarioName,\n  setCanvasNotification,\n  setScenarioLoading\n} from '../../actions';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: 0\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nclass BodyWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editingName: false,\n      editedName: ''\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.app.isCorruptedPayload() === true && prevProps.app.isCorruptedPayload() === false) {\n      this.props.dispatch(\n        setCanvasNotification({\n          open: true,\n          variant: 'error',\n          text: 'Unable to load corrupted scenario.'\n        })\n      );\n    }\n  }\n\n  saveChanges = () => {\n    const { dispatch } = this.props;\n\n    // Check for corruption to prevent override\n    if (this.props.app.isCorruptedPayload()) {\n      dispatch(\n        setCanvasNotification({\n          open: true,\n          variant: 'error',\n          text: 'Cannot modify corrupted scenario.'\n        })\n      );\n      return;\n    };\n\n    const exportService = new ExportService(\n      this.props.app.getDiagramEngine().getDiagramModel()\n    );\n\n    const payload = {\n      name: this.props.scenario.name,\n      ...exportService.exportPayload()\n    };\n\n    const scenarioId = this.props.scenario.id;\n    if (scenarioId) {\n      payload.id = scenarioId;\n    }\n\n    dispatch(setScenarioLoading(true));\n\n    axios\n      .post(`${config.URL_SCENARIO_CREATE}`, payload)\n      .then(response => {\n        dispatch(setScenarioId(response.data.id));\n        dispatch(setScenarioLoading(false));\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'success',\n            text: 'Scenario saving succeeded.'\n          })\n        );\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Scenario saving failed.'\n          })\n        );\n        console.log(error);\n      });\n  };\n\n  startEditingName = () => {\n    this.setState({\n      editedName: this.props.scenario.name,\n      editingName: true\n    });\n  };\n\n  cancelEditingName = () => {\n    this.setState({\n      editedName: '',\n      editingName: false\n    });\n  };\n\n  submitEditingName = () => {\n    if (this.state.editedName.length === 0) {\n      this.cancelEditingName();\n      return;\n    }\n\n    this.props.dispatch(setScenarioName(this.state.editedName));\n    this.setState({\n      editedName: '',\n      editingName: false\n    });\n  };\n\n  handleCloseAndSaveDuringChangingName = event => {\n    if (event.keyCode === 27) {\n      this.cancelEditingName();\n    } else if (event.keyCode === 13) {\n      this.submitEditingName();\n    }\n  };\n\n  handleNameTyping = event => {\n    this.setState({\n      editedName: event.target.value\n    });\n  };\n\n  closeNotification = () => {\n    this.props.dispatch(setCanvasNotification({ open: false }));\n  };\n\n  render() {\n    const { classes, canvas } = this.props;\n\n    const diagramProps = {\n      className: 'srd-demo-canvas',\n      diagramEngine: this.props.app.getDiagramEngine(),\n      maxNumberPointsPerLink: 0,\n      allowLooseLinks: false,\n      allowCanvasTranslation: canvas.pannable,\n      allowCanvasZoom: canvas.zoomable\n    }; // as DiagramProps;\n\n    return (\n      <div className='body'>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar position='fixed' className={classes.appBar}>\n            <Toolbar>\n              <Grid container>\n                <Grid item xs={4}>\n                  <Typography variant='h6' color='inherit' noWrap>\n                    {this.state.editingName ? (\n                      <input\n                        autoFocus\n                        type='text'\n                        value={this.state.editedName}\n                        onChange={this.handleNameTyping}\n                        onKeyDown={this.handleCloseAndSaveDuringChangingName}\n                        onBlur={this.submitEditingName}\n                        className='changing-name-input'\n                      />\n                    ) : (\n                      <span\n                        onClick={this.startEditingName}\n                        className='scenario-name'\n                      >\n                        {this.props.scenario.name}\n                      </span>\n                    )}\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={8}>\n                  <Grid container direction='row' justify='flex-end'>\n                    {!!this.props.scenario.loading && (\n                      <CircularProgress\n                        className='circular-loading'\n                        size={19}\n                        color='inherit'\n                      />\n                    )}\n                    <Button\n                      size='small'\n                      variant='contained'\n                      color='secondary'\n                      onClick={() => this.saveChanges()}\n                    >\n                      {this.props.scenario.id ? 'Update' : 'Save'}\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant='permanent'\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            <div className={classes.toolbar} />\n            <List\n              component='nav'\n              subheader={\n                <ListSubheader component='div'>Triggers</ListSubheader>\n              }\n            >\n              <TrayItemWidget\n                model={{ type: 'trigger' }}\n                name='Event'\n                icon={<TriggerIcon />}\n              />\n            </List>\n\n            <List\n              component='nav'\n              subheader={<ListSubheader component='div'>Actions</ListSubheader>}\n            >\n              <TrayItemWidget\n                model={{ type: 'email' }}\n                name='Send email'\n                icon={<EmailIcon />}\n              />\n\n              {config.BANNER_ENABLED &&\n                <TrayItemWidget\n                  model={{ type: 'banner' }}\n                  name='Show banner'\n                  icon={<BannerIcon />}\n                />\n              }\n              \n            </List>\n\n            <List\n              component='nav'\n              subheader={\n                <ListSubheader component='div'>Operations</ListSubheader>\n              }\n            >\n              <TrayItemWidget\n                model={{ type: 'segment' }}\n                name='Segment'\n                icon={<SegmentIcon />}\n              />\n\n              <TrayItemWidget\n                model={{ type: 'condition' }}\n                name='Condition'\n                icon={<ConditionIcon />}\n              />\n\n              <TrayItemWidget\n                model={{ type: 'wait' }}\n                name='Wait'\n                icon={<WaitIcon />}\n              />\n\n              <TrayItemWidget\n                model={{ type: 'goal' }}\n                name='Goal'\n                icon={<GoalIcon />}\n              />\n            </List>\n          </Drawer>\n          <Notification\n            variant={this.props.canvas.notification.variant}\n            text={this.props.canvas.notification.text}\n            open={this.props.canvas.notification.open}\n            handleClose={this.closeNotification}\n          />\n\n          <main className={classes.content}>\n            <div\n              className='diagram-layer'\n              onDrop={event => {\n                const stormDiagramNode = event.dataTransfer.getData(\n                  'storm-diagram-node'\n                );\n                if (!stormDiagramNode) return;\n                var data = JSON.parse(stormDiagramNode);\n              \n                var node = null;\n                if (data.type === 'email') {\n                  node = new Email.NodeModel({});\n                } else if (data.type === 'banner') {\n                  node = new Banner.NodeModel({\n                    expiresInUnit: 'days',\n                    expiresInTime: 1,\n                  });\n                } else if (data.type === 'segment') {\n                  node = new Segment.NodeModel({});\n                } else if (data.type === 'condition') {\n                  node = new Condition.NodeModel({});\n                } else if (data.type === 'trigger') {\n                  node = new Trigger.NodeModel({});\n                } else if (data.type === 'wait') {\n                  node = new Wait.NodeModel({});\n                } else if (data.type === 'goal') {\n                  node = new Goal.NodeModel({\n                    recheckPeriodUnit: 'hours',\n                    recheckPeriodTime: 1,\n                  });\n                }\n                var points = this.props.app\n                  .getDiagramEngine()\n                  .getRelativeMousePoint(event);\n                node.x = points.x;\n                node.y = points.y;\n                this.props.app\n                  .getDiagramEngine()\n                  .getDiagramModel()\n                  .addNode(node);\n                this.forceUpdate();\n              }}\n              onDragOver={event => {\n                event.preventDefault();\n              }}\n            >\n              <DiagramWidget {...diagramProps} />\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    canvas: state.canvas,\n    scenario: state.scenario\n  };\n}\n\nexport default compose(\n  withStyles(styles, { name: 'BodyWidget' }),\n  connect(\n    mapStateToProps,\n    null\n  )\n)(BodyWidget);\n","import flatMap from 'lodash/flatMap';\n\n// import the custom models\nimport { Banner, Email, Segment, Trigger, Wait, Goal, Condition } from './../components/elements';\nimport { BANNER_ENABLED } from './../config';\n\nfunction minutesToTimeUnit(minutes) {\n  if (minutes % 1440 === 0) {\n    return {\n      unit: 'days',\n      time: minutes / 1440 \n    };\n  } else if (minutes % 60 === 0) {\n    return {\n      unit: 'hours',\n      time: minutes / 60 \n    };\n  }\n  return {\n    unit: 'minutes',\n    time: minutes\n  };\n}\n\nexport class RenderService {\n  constructor(activeModel, payload = {}) {\n    this.activeModel = activeModel;\n    this.payload = payload;\n  }\n\n  renderPayload(payload) {\n    this.payload = payload;\n\n    flatMap(payload.triggers, trigger => {\n      const triggerVisual = payload.visual[trigger.id];\n      // trigger.type = \"trigger\";\n\n      return this.renderElements(trigger, triggerVisual);\n    });\n  }\n\n  renderElements(element, visual) {\n    let nodes = [];\n    let node = null;\n\n    if (element.type === 'event') {\n      element.selectedTrigger = element.event.code;\n      node = new Trigger.NodeModel(element);\n\n      nodes = element.elements.flatMap(elementId => {\n        const element = this.payload.elements[elementId];\n        const visual = this.payload.visual[element.id];\n\n        const nextNodes = this.renderElements(element, visual);\n        const link = node.getPort('right').link(nextNodes[0].getPort('left')); //FIXME/REFACTOR: nextNodes[0] is the last added node, it works, but it's messy\n\n        this.activeModel.addLink(link);\n\n        return nextNodes;\n      });\n    } else if (element.type === 'email') {\n      element.selectedMail = element.email.code;\n      node = new Email.NodeModel(element);\n\n      nodes = element.email.descendants.flatMap(descendantObj => {\n        const element = this.payload.elements[descendantObj.uuid];\n        const visual = this.payload.visual[element.id];\n\n        const nextNodes = this.renderElements(element, visual);\n        const link = node.getPort('right').link(nextNodes[0].getPort('left'));\n\n        this.activeModel.addLink(link);\n\n        return nextNodes;\n      });\n    } else if (element.type === 'banner') {\n\n      if (!BANNER_ENABLED) {\n        throw Error(\"BANNER_ENABLED configuration is false, but loaded scenario contains banner element.\");\n      }\n\n      const timeUnit = minutesToTimeUnit(element.banner.expiresInMinutes);\n      element.expiresInUnit = timeUnit.unit;\n      element.expiresInTime = timeUnit.time;\n\n      element.selectedBanner = element.banner.id;\n      node = new Banner.NodeModel(element);\n\n      nodes = element.banner.descendants.flatMap(descendantObj => {\n        const element = this.payload.elements[descendantObj.uuid];\n        const visual = this.payload.visual[element.id];\n\n        const nextNodes = this.renderElements(element, visual);\n        const link = node.getPort('right').link(nextNodes[0].getPort('left'));\n\n        this.activeModel.addLink(link);\n\n        return nextNodes;\n      });\n    } else if (element.type === 'segment') {\n      element.selectedSegment = element.segment.code;\n      node = new Segment.NodeModel(element);\n\n      nodes = element.segment.descendants.flatMap(descendantObj => {\n        const element = this.payload.elements[descendantObj.uuid];\n        const visual = this.payload.visual[element.id];\n        const nextNodes = this.renderElements(element, visual);\n\n        if (descendantObj.direction) {\n          if (descendantObj.direction === 'positive') {\n            const link = node.getPort('right').link(nextNodes[0].getPort('left'));\n            this.activeModel.addLink(link);\n          } else if (descendantObj.direction === 'negative') {\n            const link = node.getPort('bottom').link(nextNodes[0].getPort('left'));\n            this.activeModel.addLink(link);\n          }\n        }\n\n        return nextNodes;\n      });\n    } else if (element.type === 'wait') {\n      const timeUnit = minutesToTimeUnit(element.wait.minutes);\n      element.waitingUnit = timeUnit.unit;\n      element.waitingTime = timeUnit.time;\n\n      node = new Wait.NodeModel(element);\n\n      nodes = element.wait.descendants.flatMap(descendantObj => {\n        const element = this.payload.elements[descendantObj.uuid];\n        const visual = this.payload.visual[element.id];\n\n        const nextNodes = this.renderElements(element, visual);\n        const link = node.getPort('right').link(nextNodes[0].getPort('left'));\n        this.activeModel.addLink(link);\n\n        return nextNodes;\n      });\n    } else if (element.type === 'goal') {\n      if (element.goal.hasOwnProperty(\"timeoutMinutes\")) {\n        const timeUnit = minutesToTimeUnit(element.goal.timeoutMinutes);\n        element.timeoutUnit = timeUnit.unit;\n        element.timeoutTime = timeUnit.time;\n      }\n\n      const recheckPeriodTimeUnit = minutesToTimeUnit(element.goal.recheckPeriodMinutes);\n      element.recheckPeriodUnit = recheckPeriodTimeUnit.unit;\n      element.recheckPeriodTime = recheckPeriodTimeUnit.time;\n\n      element.selectedGoals = element.goal.codes;\n      node = new Goal.NodeModel(element);\n\n      nodes = element.goal.descendants.flatMap(descendantObj => {\n        const element = this.payload.elements[descendantObj.uuid];\n        const visual = this.payload.visual[element.id];\n        const nextNodes = this.renderElements(element, visual);\n\n        if (descendantObj.direction) {\n          if (descendantObj.direction === 'positive') {\n            const link = node.getPort('right').link(nextNodes[0].getPort('left'));\n            this.activeModel.addLink(link);\n          } else if (descendantObj.direction === 'negative') {\n            const link = node.getPort('bottom').link(nextNodes[0].getPort('left'));\n            this.activeModel.addLink(link);\n          }\n        }\n\n        return nextNodes;\n      });\n    } else if (element.type === 'condition') {\n        [node, nodes] = this.renderCondition(element);\n     }\n\n    this.activeModel.addNode(node);\n    node.setPosition(visual.x, visual.y);\n\n    return [node, ...nodes];\n  }\n\n  renderCondition(element) {\n    let node = new Condition.NodeModel({\n      id: element.id,\n      name: element.name,\n      conditions: element.condition.conditions\n    });\n\n    let nodes = element.condition.descendants.flatMap(descendantObj => {\n      const element = this.payload.elements[descendantObj.uuid];\n      const visual = this.payload.visual[element.id];\n      const nextNodes = this.renderElements(element, visual);\n\n      if (descendantObj.direction) {\n        if (descendantObj.direction === 'positive') {\n          const link = node.getPort('right').link(nextNodes[0].getPort('left'));\n          this.activeModel.addLink(link);\n        } else if (descendantObj.direction === 'negative') {\n          const link = node.getPort('bottom').link(nextNodes[0].getPort('left'));\n          this.activeModel.addLink(link);\n        }\n      }\n\n      return nextNodes;\n    });\n    return [node, nodes];\n  }\n}\n","import { DiagramEngine, DiagramModel } from 'storm-react-diagrams';\n\n// import the custom models\nimport { SimplePortFactory, Banner, Email, Segment, Trigger, Wait, Goal, Condition } from './elements';\n\nimport './sass/main.scss';\nimport { LinkFactory } from './elements/Link';\nimport { RenderService } from './../services/RenderService';\n\nexport class Application {\n  activeModel;\n  diagramEngine;\n\n  constructor(payload) {\n    this.diagramEngine = new DiagramEngine();\n    this.diagramEngine.installDefaultFactories();\n    this.activeModel = new DiagramModel();\n    this.renderService = new RenderService(this.activeModel);\n    this.payload = payload;\n    this.corruptedPayload = false;\n\n    if (payload) {\n      this.renderPayload();\n    } else {\n      this.registerCustomModels();\n    }\n  }\n\n  renderPayload() {\n    this.registerCustomModels();\n    try {\n      this.renderService.renderPayload(this.payload);\n    } catch(ex) {\n      // In case of rendering error, dump loaded model, log and flag as corrupted scenario\n      console.log(ex.message);\n      this.corruptedPayload = true;\n      this.activeModel = new DiagramModel();\n    }\n    \n    this.diagramEngine.setDiagramModel(this.activeModel);\n    this.diagramEngine.repaintCanvas();\n  }\n\n  registerCustomModels() {\n    this.diagramEngine.registerLinkFactory(new LinkFactory());\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('email', config => new Email.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Email.NodeFactory());\n\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('segment', config => new Segment.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Segment.NodeFactory());\n\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('trigger', config => new Trigger.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Trigger.NodeFactory());\n\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('wait', config => new Wait.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Wait.NodeFactory());\n\n    // Goal\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('goal', config => new Goal.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Goal.NodeFactory());\n\n    // Banner\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('banner', config => new Banner.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Banner.NodeFactory());\n\n    // Condition\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('condition', config => new Condition.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Condition.NodeFactory());\n  }\n\n  getActiveDiagram() {\n    return this.activeModel;\n  }\n\n  getDiagramEngine() {\n    return this.diagramEngine;\n  }\n\n  isCorruptedPayload() {\n    return this.corruptedPayload;\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport SegmenterService from './services/SegmenterService';\nimport BodyWidget from './components/widgets/BodyWidget';\nimport { Application } from './components/Application';\nimport * as config from './config';\nimport {\n  fetchSegments,\n  fetchGoals,\n  fetchBanners,\n  fetchTriggers,\n  fetchCriteria,\n  fetchScenario,\n  setScenarioName,\n  fetchMails\n} from './actions';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n\n    dispatch(fetchSegments());\n    dispatch(fetchCriteria());\n    dispatch(fetchGoals());\n    dispatch(fetchTriggers());\n    dispatch(fetchMails());\n\n    if (config.BANNER_ENABLED) {\n      dispatch(fetchBanners());\n    }\n\n    if (config.SCENARIO_ID) {\n      dispatch(fetchScenario(config.SCENARIO_ID));\n    } else {\n      dispatch(setScenarioName('Unnamed scenario'));\n    }\n\n    SegmenterService.load();\n  }\n\n  render() {\n    var app = new Application(this.props.scenarioPayload);\n\n    return <BodyWidget app={app} />;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    scenarioPayload: state.scenario.payload\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport axios from 'axios';\n\nimport rootReducer from './reducers';\nimport App from './App';\nimport * as config from './config';\n\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\naxios.defaults.headers.common['Authorization'] = config.AUTH_TOKEN;\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  {},\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}