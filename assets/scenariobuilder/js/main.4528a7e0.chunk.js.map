{"version":3,"sources":["actions/types.js","reducers/SegmentsReducer.js","reducers/CriteriaReducer.js","reducers/TriggersReducer.js","reducers/BeforeTriggersReducer.js","reducers/CanvasReducer.js","reducers/ScenarioReducer.js","reducers/MailsReducer.js","reducers/GoalsReducer.js","reducers/BannersReducer.js","reducers/index.js","services/SegmenterService.js","config.js","components/widgets/TrayItemWidget.js","services/ExportService.js","components/Notification.js","components/elements/SimplePortFactory.js","components/elements/Link/LinkModel.js","components/elements/Link/LinkFactory.js","components/elements/Ports/LeftRightPort.js","components/elements/Ports/LeftRightBottomPort.js","components/elements/Email/PortModel.js","components/elements/Email/NodeModel.js","components/widgets/PortWidget.js","actions/CanvasActions.js","actions/ScenarioActions.js","actions/SegmentsActions.js","actions/TriggersActions.js","actions/MailsActions.js","actions/GoalsActions.js","actions/BannersActions.js","actions/CriteriaActions.js","actions/BeforeTriggersActions.js","components/StatisticTooltip.js","components/MaterialSelect.js","components/elements/Email/NodeWidget.js","components/elements/Email/NodeFactory.js","components/elements/Banner/PortModel.js","components/elements/Banner/NodeModel.js","components/elements/Banner/NodeWidget.js","components/elements/Banner/NodeFactory.js","components/elements/Segment/PortModel.js","components/elements/Segment/NodeModel.js","components/elements/Segment/SegmentFormSelect.js","components/elements/Segment/SegmentSelector.js","components/elements/Segment/NodeWidget.js","components/elements/Segment/NodeFactory.js","components/elements/Trigger/PortModel.js","components/elements/Trigger/NodeModel.js","components/elements/Trigger/NodeWidget.js","components/elements/Trigger/NodeFactory.js","components/elements/BeforeTrigger/PortModel.js","components/elements/BeforeTrigger/NodeModel.js","components/elements/BeforeTrigger/NodeWidget.js","components/elements/BeforeTrigger/NodeFactory.js","components/elements/Wait/PortModel.js","components/elements/Wait/NodeModel.js","components/elements/Wait/NodeWidget.js","components/elements/Wait/NodeFactory.js","components/elements/Goal/PortModel.js","components/elements/Goal/NodeModel.js","components/elements/Goal/NodeWidget.js","components/elements/Goal/NodeFactory.js","components/elements/Condition/PortModel.js","components/elements/Condition/NodeModel.js","components/elements/Condition/criteriaReducer.js","components/elements/Condition/CriteriaTypes/StringLabeledArrayParam.js","components/elements/Condition/CriteriaTypes/BooleanParam.js","components/elements/Condition/CriteriaBuilder.js","components/elements/Condition/NodeWidget.js","components/elements/Condition/NodeFactory.js","components/widgets/BodyWidget.js","services/RenderService.js","components/Application.js","App.js","index.js"],"names":["SEGMENTS_CHANGED","CRITERIA_CHANGED","TRIGGERS_CHANGED","BEFORE_TRIGGERS_CHANGED","MAILS_CHANGED","GOALS_CHANGED","BANNERS_CHANGED","CANVAS_ZOOMABLE","CANVAS_PANNABLE","CANVAS_ZOOMABLE_PANNABLE","CANVAS_NOTIFICATION","SET_SCENARIO_ID","SET_SCENARIO_NAME","SET_SCENARIO_PAYLOAD","SET_SCENARIO_LOADING","INITIAL_STATE","avalaibleSegments","criteria","avalaibleTriggers","availableBeforeTriggers","pannable","zoomable","notification","open","variant","text","id","name","loading","payload","availableMails","availableGoals","availableBanners","combineReducers","segments","state","arguments","length","undefined","action","type","Object","objectSpread","triggers","beforeTriggers","canvas","scenario","mails","goals","banners","SegmenterService","vueScript","document","createElement","src","segmenterScript","segmenterStyles","rel","href","head","appendChild","selector","window","Vue","render","h","RempSegmenter","$mount","Scenario","config","AUTH_TOKEN","API_HOST","SCENARIO_ID","BANNER_ENABLED","URL_SCENARIO_DETAIL","concat","URL_SCENARIO_CREATE","URL_SCENARIO_CRITERIA","URL_SEGMENTS_INDEX","URL_TRIGGERS_INDEX","URL_BEFORE_TRIGGERS_INDEX","URL_MAILS_INDEX","URL_GOALS_INDEX","URL_BANNERS_INDEX","URL_ELEMENT_TOOLTIP","URL_TRIGGER_TOOLTIP","TrayItemWidget","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","_this2","react","ListItem","draggable","onDragStart","event","dataTransfer","setData","JSON","stringify","model","className","ListItemIcon","icon","ListItemText","primary","React","unitTimeToMinutes","time","unit","parseInt","ExportService","formatDescendant","node","parentNode","descendant","uuid","direction","portName","serializedModel","serializeDiagram","elements","visual","nodes","filter","includes","map","formatNode","entries","getNodes","forEach","x","y","serialize","ports","find","port","links","link","nextNode","targetPort","parent","sourcePort","_this3","descendantsPositive","getAllChildrenNodes","descendantNode","descendantsNegative","toConsumableArray","_this4","email","code","selectedMail","descendants","banner","selectedBanner","expiresInMinutes","expiresInTime","expiresInUnit","condition","conditions","getPositiveAndNegativeDescendants","segment","selectedSegment","selectedTrigger","options","minutes","timeUnit","wait","waitingTime","waitingUnit","goalProperties","codes","selectedGoals","recheckPeriodMinutes","recheckPeriodTime","recheckPeriodUnit","timeoutTime","timeoutUnit","timeoutMinutes","goal","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","Notification","Icon","react_default","a","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","handleClose","SnackbarContent","message","Component","SimplePortFactory","_AbstractPortFactory","cb","initialConfig","AbstractPortFactory","LinkModel","_DefaultLinkModel","width","curvyness","color","DefaultLinkModel","LinkFactory","_DefaultLinkFactory","widget","selected","path","bem","strokeWidth","stroke","d","DefaultLinkFactory","LeftRightPort","_BasePortModel","pos","position","in","createLinkModel","setSourcePort","setTargetPort","_","get","prototype","data","engine","BasePortModel","LeftRightBottomPort","PortModel","_LeftRightPort","NodeModel","_BaseNodeModel","element","addPort","ob","BaseNodeModel","PortWidget","_BasePortWidget","assign","getProps","onMouseEnter","setState","onMouseLeave","data-name","data-nodeid","getID","children","BasePortWidget","setCanvasZoomingAndPanning","zoomingAndPanning","setCanvasNotification","notificationOptions","setScenarioId","setScenarioName","setScenarioLoading","fetchScenario","scenarioId","dispatch","axios","then","response","catch","console","log","fetchSegments","result","fetchTriggers","events","fetchMails","mail_templates","fetchGoals","fetchBanners","fetchCriteria","blueprint","fetchBeforeTriggers","StatisticsTooltip","html","oldProps","scenarioID","fetchStatistics","_this$props","isTrigger","url","_ref","anchorElement","Popover","Boolean","anchorEl","style","pointerEvents","transformOrigin","CircularProgress","size","dangerouslySetInnerHTML","__html","connect","inputComponent","inputRef","objectWithoutProperties","ref","components","Control","TextField","fullWidth","multiline","InputProps","inputProps","selectProps","classes","input","innerRef","innerProps","textFieldProps","Menu","Paper","square","paper","MultiValue","Chip","tabIndex","label","classNames","chip","defineProperty","chipFocused","isFocused","onDelete","removeProps","onClick","deleteIcon","Cancel_default","NoOptionsMessage","Typography","noOptionsMessage","Option","MenuItem","buttonRef","component","fontWeight","isSelected","Placeholder","placeholder","SingleValue","singleValue","ValueContainer","valueContainer","MaterialSelect","single","multi","handleChange","theme","selectStyles","base","palette","& input","font","root","react_select_esm","styles","menuPosition","InputLabelProps","shrink","isMulti","onChange","defaultProp","withStyles","flexGrow","marginTop","marginBottom","fontFamily","display","padding","flexWrap","flex","alignItems","overflow","margin","spacing","backgroundColor","emphasize","grey","fontSize","left","zIndex","right","divider","height","withTheme","NodeWidget","openDialog","dialogOpened","nodeFormName","anchorElementForTooltip","closeDialog","handleNodeMouseEnter","currentTarget","handleNodeMouseLeave","getFormatedValue","match","mail","transformOptionsForSelect","lodashGrouped","groupBy","mail_type","properlyGrouped","keys","push","sorting","sort","b","getSelectedMailValue","classBaseName","getClassName","background","onDoubleClick","Mail_default","PortWidget_PortWidget","StatisticTooltip","Dialog","aria-labelledby","onKeyUp","keyCode","preventDefault","stopPropagation","DialogTitle","DialogContent","DialogContentText","Grid","container","item","xs","target","components_MaterialSelect","DialogActions","Button","diagramEngine","repaintCanvas","NodeFactory","_AbstractNodeFactory","Email_NodeWidget","AbstractNodeFactory","Adjust_default","helperText","FormControl","InputLabel","htmlFor","Select","Banner_NodeWidget","_LeftRightBottomPort","optionLabel","option","optionSelected","hasOwnProperty","items","SegmentFormSelect","useSelector","table","selectedSegmentSourceTable","group","Autocomplete","getOptionSelected","getOptionLabel","marginLeft","onSegmentSelectedChange","renderInput","params","useCriteriaBuilderStyles","makeStyles","selectedButton","deselectedButton","SegmentSelector","sourceTable","getSourceTable","ButtonGroup","aria-label","onSegmentTypeButtonClick","actionSetTable","segmentSelectedChange","getSelectedSegmentValue","flatMap","handleNewSegmentClick","addEventListener","handleSavedNewSegment","handleCancelNewSegment","creatingNewSegment","setTimeout","init","detail","removeEventListener","SubdirectoryArrowRight_default","Check_default","top","Close_default","fullScreen","disableEscapeKeyDown","textAlign","paddingBottom","bottom","Icon_Icon","marginRight","Segment_NodeWidget","getTriggersInSelectableFormat","trigger","getSelectedTriggerValue","Notifications_default","Trigger_NodeWidget","nodeFormBeforeTime","NotificationsActive_default","selectedOption","BeforeTrigger_NodeWidget","nodeFormWaitingTime","AccessAlarmsOutlined_default","Wait_NodeWidget","matches","goalCode","CheckBox_default","AccessTime_default","Goal_NodeWidget","emptyNode","uuidv4","actionSetNodeValues","nodeId","values","reducer","n","newNodes","Error","elementStyles","chipRoot","&:not(:first-child)","&::before","content","operator","textTransform","selectedOptions","selectedValues","s","Set","has","delete","optionGroup","StringLabeledArrayParam","multiple","ChipProps","selection","freeSolo","BooleanParam","FormControlLabel","checked","control","Switch","BuilderDispatch","createContext","CriteriaParams","useContext","typeParams","useCriteriaFormStyles","cardContent","justifyContent","formControl","minWidth","CriteriaForm","Card","CardContent","labelId","e","cr","IconButton","Delete_default","useCriteriaTableStyles","andContainer","maxWidth","flexBasis","CriteriaTable","Fragment","index","button","startIcon","AddCircleOutline_default","forwardRef","_useReducer","useReducer","version","_useReducer2","slicedToArray","useImperativeHandle","Provider","criteriaBlueprint","builderRef","CallSplit_default","Condition_CriteriaBuilder","current","Condition_NodeWidget","BodyWidget","saveChanges","app","isCorruptedPayload","exportService","getDiagramEngine","getDiagramModel","exportPayload","post","startEditingName","editedName","editingName","cancelEditingName","submitEditingName","handleCloseAndSaveDuringChangingName","handleNameTyping","closeNotification","prevProps","diagramProps","maxNumberPointsPerLink","allowLooseLinks","allowCanvasTranslation","allowCanvasZoom","CssBaseline","AppBar","appBar","Toolbar","noWrap","autoFocus","onKeyDown","onBlur","justify","Drawer","drawer","drawerPaper","toolbar","List","subheader","ListSubheader","TrayItemWidget_TrayItemWidget","components_Notification","onDrop","stormDiagramNode","getData","parse","Email","Banner","Segment","Condition","Trigger","BeforeTrigger","Wait","Goal","points","getRelativeMousePoint","addNode","forceUpdate","onDragOver","main","compose","flexShrink","mixins","minutesToTimeUnit","RenderService","activeModel","triggerVisual","renderElements","elementId","nextNodes","getPort","addLink","descendantObj","recheckPeriodTimeUnit","_this$renderCondition","renderCondition","_this$renderCondition2","setPosition","Application","DiagramEngine","installDefaultFactories","DiagramModel","renderService","corruptedPayload","renderPayload","registerCustomModels","ex","setDiagramModel","registerLinkFactory","registerPortFactory","registerNodeFactory","App","load","scenarioPayload","widgets_BodyWidget","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","defaults","headers","common","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.4528a7e0.chunk.js","sourcesContent":["export const SEGMENTS_CHANGED = 'segments_changed';\n\nexport const CRITERIA_CHANGED = 'criteria_changed';\n\nexport const TRIGGERS_CHANGED = 'triggers_changed';\nexport const BEFORE_TRIGGERS_CHANGED = 'before_triggers_changed';\n\nexport const MAILS_CHANGED = 'mails_changed';\nexport const GOALS_CHANGED = 'goals_changed';\nexport const BANNERS_CHANGED = 'banners_changed';\n\nexport const CANVAS_ZOOMABLE = 'canvas_zoomable';\nexport const CANVAS_PANNABLE = 'canvas_pannable';\nexport const CANVAS_ZOOMABLE_PANNABLE = 'canvas_zoomable_pannable';\nexport const CANVAS_NOTIFICATION = 'canvas_notification';\n\nexport const SET_SCENARIO_ID = 'set_scenario_id';\nexport const SET_SCENARIO_NAME = 'set_scenario_name';\nexport const SET_SCENARIO_PAYLOAD = 'set_scenario_payload';\nexport const SET_SCENARIO_LOADING = 'set_scenario_loading';\n","\nimport {\n    SEGMENTS_CHANGED\n} from './../actions/types';\n  \nconst INITIAL_STATE = {\n    avalaibleSegments: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SEGMENTS_CHANGED:\n            return { ...state, avalaibleSegments: action.payload };\n\n        default:\n            return state;\n    }\n};","\nimport {\n    CRITERIA_CHANGED\n} from './../actions/types';\n  \nconst INITIAL_STATE = {\n    criteria: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case CRITERIA_CHANGED:\n            return { ...state, criteria: action.payload };\n\n        default:\n            return state;\n    }\n};","import { TRIGGERS_CHANGED } from './../actions/types';\n\nconst INITIAL_STATE = {\n  avalaibleTriggers: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TRIGGERS_CHANGED:\n      return { ...state, avalaibleTriggers: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import {BEFORE_TRIGGERS_CHANGED} from '../actions/types';\n\nconst INITIAL_STATE = {\n  availableBeforeTriggers: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case BEFORE_TRIGGERS_CHANGED:\n      return { ...state, availableBeforeTriggers: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import {\n  CANVAS_PANNABLE,\n  CANVAS_ZOOMABLE,\n  CANVAS_ZOOMABLE_PANNABLE,\n  CANVAS_NOTIFICATION\n} from './../actions/types';\n\nconst INITIAL_STATE = {\n  pannable: true,\n  zoomable: true,\n  notification: {\n    open: false,\n    variant: 'success',\n    text: ''\n  }\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CANVAS_PANNABLE:\n      return { ...state, pannable: action.payload };\n\n    case CANVAS_ZOOMABLE:\n      return { ...state, zoomable: action.payload };\n\n    case CANVAS_ZOOMABLE_PANNABLE:\n      return { ...state, zoomable: action.payload, pannable: action.payload };\n\n    case CANVAS_NOTIFICATION:\n      return {\n        ...state,\n        notification: { ...state.notification, ...action.payload }\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  SET_SCENARIO_ID,\n  SET_SCENARIO_NAME,\n  SET_SCENARIO_LOADING,\n  SET_SCENARIO_PAYLOAD\n} from './../actions/types';\n\nconst INITIAL_STATE = {\n  id: null,\n  name: '',\n  loading: 0,\n  payload: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_SCENARIO_ID:\n      return { ...state, id: action.payload };\n\n    case SET_SCENARIO_NAME:\n      return { ...state, name: action.payload };\n\n    case SET_SCENARIO_LOADING:\n      let loading = state.loading;\n      if (action.payload) {\n        ++loading;\n      } else {\n        --loading;\n      }\n      return { ...state, loading };\n\n    case SET_SCENARIO_PAYLOAD:\n      return { ...state, payload: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { MAILS_CHANGED } from './../actions/types';\n\nconst INITIAL_STATE = {\n  availableMails: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case MAILS_CHANGED:\n      return { ...state, availableMails: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { GOALS_CHANGED } from './../actions/types';\n\nconst INITIAL_STATE = {\n  availableGoals: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case GOALS_CHANGED:\n      return { ...state, availableGoals: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { BANNERS_CHANGED } from '../actions/types';\n\nconst INITIAL_STATE = {\n  availableBanners: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case BANNERS_CHANGED:\n      return { ...state, availableBanners: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport SegmentsReducer from './SegmentsReducer';\nimport CriteriaReducer from './CriteriaReducer';\nimport TriggersReducer from './TriggersReducer';\nimport BeforeTriggersReducer from './BeforeTriggersReducer';\nimport CanvasReducer from './CanvasReducer';\nimport ScenarioReducer from './ScenarioReducer';\nimport MailsReducer from './MailsReducer';\nimport GoalsReducer from './GoalsReducer';\nimport BannersReducer from './BannersReducer';\n\nexport default combineReducers({\n  segments: SegmentsReducer,\n  triggers: TriggersReducer,\n  beforeTriggers: BeforeTriggersReducer,\n  canvas: CanvasReducer,\n  criteria: CriteriaReducer,\n  scenario: ScenarioReducer,\n  mails: MailsReducer,\n  goals: GoalsReducer,\n  banners: BannersReducer,\n});\n","export default class SegmenterService {\n  static load() {\n    // maybe add async defer if needed\n    const vueScript = document.createElement('script');\n    vueScript.type = 'text/javascript';\n    vueScript.src = '/segmenter/vue.min.js';\n\n    const segmenterScript = document.createElement('script');\n    segmenterScript.type = 'text/javascript';\n    segmenterScript.src = '/segmenter/RempSegmenter.umd.min.js';\n\n    var segmenterStyles = document.createElement('link');\n    segmenterStyles.rel = 'stylesheet';\n    segmenterStyles.href = '/segmenter/RempSegmenter.css';\n\n    document.head.appendChild(vueScript);\n    document.head.appendChild(segmenterScript);\n    document.head.appendChild(segmenterStyles);\n  }\n\n  static init(selector = '#segmenter') {\n    new window.Vue({\n      render: h => h(window.RempSegmenter)\n    }).$mount(selector);\n  }\n}\n","// window.Scenario = {\n//   config: {\n//     AUTH_TOKEN: '',\n//     API_HOST: 'https://predplatne.dennikn.sk/api/v1',\n//     SCENARIO_ID: null\n//     BANNER_ENABLED: null\n//   }\n// };\n\n// window.Segments = {\n//   config: {\n//     AUTH_TOKEN: '',\n//     API_HOST: 'https://predplatne.dennikn.sk',\n//     CANCEL_PATH: '#',\n//     SEGMENT_ID: null\n//   }\n// };\n\nexport const { AUTH_TOKEN, API_HOST, SCENARIO_ID, BANNER_ENABLED } = window.Scenario.config;\n\nexport const URL_SCENARIO_DETAIL = `${API_HOST}/scenarios/info?id=`;\nexport const URL_SCENARIO_CREATE = `${API_HOST}/scenarios/create`;\nexport const URL_SCENARIO_CRITERIA = `${API_HOST}/scenarios/criteria`;\nexport const URL_SEGMENTS_INDEX = `${API_HOST}/segments/list`;\nexport const URL_TRIGGERS_INDEX = `${API_HOST}/events/list`;\nexport const URL_BEFORE_TRIGGERS_INDEX = `${API_HOST}/event-generators/list`;\nexport const URL_MAILS_INDEX = `${API_HOST}/mail-template/list`;\nexport const URL_GOALS_INDEX = `${API_HOST}/onboarding-goals/list`;\nexport const URL_BANNERS_INDEX = `${API_HOST}/remp/list-banners`;\nexport const URL_ELEMENT_TOOLTIP = `${API_HOST}/scenarios/element`;\nexport const URL_TRIGGER_TOOLTIP = `${API_HOST}/scenarios/trigger`;\n","import * as React from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nexport class TrayItemWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <ListItem\n        // button\n        key={this.props.name}\n        draggable={true}\n        onDragStart={event => {\n          event.dataTransfer.setData(\n            'storm-diagram-node',\n            JSON.stringify(this.props.model)\n          );\n        }}\n        className='tray-item'\n      >\n        <ListItemIcon>{this.props.icon}</ListItemIcon>\n        <ListItemText primary={this.props.name} />\n      </ListItem>\n    );\n  }\n}\n","function unitTimeToMinutes(time, unit) {\n  switch (unit) {\n    case 'minutes':\n      return parseInt(time);\n    case 'hours':\n      return time * 60;\n    case 'days':\n      return time * 60 * 24;\n    default:\n      return parseInt(time);\n  }\n}\n\nexport class ExportService {\n  constructor(model) {\n    this.model = model;\n  }\n\n  exportPayload() {\n    const payload = {};\n    const serializedModel = this.model.serializeDiagram();\n    const triggers = ['trigger', 'before_trigger'];\n\n    payload.triggers = {};\n    payload.elements = {};\n\n    payload.visual = {};\n\n    serializedModel.nodes\n      .filter(node => triggers.includes(node.type))\n      .map(node => (payload.triggers[node.id] = this.formatNode(node)));\n\n    Object.entries(this.model.getNodes()).forEach(node => {\n      payload.visual[node[0]] = {\n        x: node[1].x,\n        y: node[1].y\n      };\n    });\n\n    Object.entries(this.model.getNodes()).forEach(node => {\n      if (!triggers.includes(node[1].type)) {\n        payload.elements[node[0]] = this.formatNode(node[1].serialize());\n      }\n    });\n\n    return payload;\n  }\n\n  getAllChildrenNodes(node, portName = 'right') {\n    const port = node.ports.find(port => port.name === portName);\n\n    return port.links.map(link => {\n      let nextNode = null;\n\n      if (this.model.links[link].targetPort.parent.id !== node.id) {\n        nextNode = this.model.links[link].targetPort.parent;\n      } else {\n        nextNode = this.model.links[link].sourcePort.parent;\n      }\n\n      return { ...nextNode.serialize(), portName };\n    });\n  }\n\n  getPositiveAndNegativeDescendants(node) {\n    const descendantsPositive = this.getAllChildrenNodes(node, 'right').map(\n      descendantNode => this.formatDescendant(descendantNode, node)\n    );\n    const descendantsNegative = this.getAllChildrenNodes(node, 'bottom').map(\n      descendantNode => this.formatDescendant(descendantNode, node)\n    );\n    return [...descendantsPositive, ...descendantsNegative];\n  }\n\n  formatNode(node) {\n    if (node.type === 'email') {\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'email',\n        email: {\n          code: node.selectedMail,\n          descendants: this.getAllChildrenNodes(node).map(descendantNode =>\n            this.formatDescendant(descendantNode, node)\n          )\n        }\n      };\n    } else if (node.type === 'banner') {\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'banner',\n        banner: {\n          id: node.selectedBanner,\n          expiresInMinutes: unitTimeToMinutes(node.expiresInTime, node.expiresInUnit),\n          descendants: this.getAllChildrenNodes(node).map(descendantNode =>\n            this.formatDescendant(descendantNode, node)\n          )\n        }\n      };\n    } else if (node.type === 'condition') {\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'condition',\n        condition: {\n          conditions: node.conditions,\n          descendants: this.getPositiveAndNegativeDescendants(node),\n        }\n      };\n    } else if (node.type === 'segment') {\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'segment',\n        segment: {\n          code: node.selectedSegment ? node.selectedSegment : 'all_users',\n          descendants: this.getPositiveAndNegativeDescendants(node),\n        }\n      };\n    } else if (node.type === 'trigger') {\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'event',\n        event: {\n          code: node.selectedTrigger ? node.selectedTrigger : 'user_created'\n        },\n        elements: this.getAllChildrenNodes(node).map(\n          descendantNode => descendantNode.id\n        )\n      };\n    } else if (node.type === 'before_trigger') {\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'before_event',\n        event: {\n          code: node.selectedTrigger ? node.selectedTrigger : 'subscription_ends'\n        },\n        elements: this.getAllChildrenNodes(node).map(\n          descendantNode => descendantNode.id\n        ),\n        options: {\n          minutes: unitTimeToMinutes(node.time, node.timeUnit)\n        }\n      };\n    } else if (node.type === 'wait') {\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'wait',\n        wait: {\n          minutes: unitTimeToMinutes(node.waitingTime, node.waitingUnit),\n          descendants: this.getAllChildrenNodes(node).map(descendantNode =>\n            this.formatDescendant(descendantNode, node)\n          )\n        }\n      };\n    } else if (node.type === 'goal') {\n      let goalProperties = {\n        codes: node.selectedGoals ? node.selectedGoals : [],\n        descendants: this.getPositiveAndNegativeDescendants(node),\n        recheckPeriodMinutes: unitTimeToMinutes(node.recheckPeriodTime, node.recheckPeriodUnit)\n      };\n\n      if (node.timeoutTime && node.timeoutUnit) {\n        goalProperties.timeoutMinutes = unitTimeToMinutes(node.timeoutTime, node.timeoutUnit);\n      }\n\n      return {\n        id: node.id,\n        name: node.name ? node.name : '',\n        type: 'goal',\n        goal: goalProperties,\n      };\n    }\n  }\n\n  formatDescendant = (node, parentNode) => {\n    let descendant = {\n      uuid: node.id\n    };\n\n    if (parentNode.type === 'segment') {\n      descendant.direction = node.portName === 'right' ? 'positive' : 'negative';\n    } else if (parentNode.type === 'goal') {\n      descendant.direction = node.portName === 'right' ? 'positive' : 'negative';\n    } else if (parentNode.type === 'condition') {\n      descendant.direction = node.portName === 'right' ? 'positive' : 'negative';\n    }\n\n    return descendant;\n  };\n\n  \n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nclass Notification extends React.Component {\n  render() {\n    const Icon = variantIcon[this.props.variant];\n\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n        open={this.props.open}\n        autoHideDuration={3000}\n        onClose={this.props.handleClose}\n      >\n        <SnackbarContent\n          className={'toast-' + this.props.variant}\n          message={\n            <span id='client-snackbar' className='toast__message'>\n              <Icon className='toast__icon toast__icon-variant' />\n              {this.props.text}\n            </span>\n          }\n        />\n      </Snackbar>\n    );\n  }\n}\n\nNotification.propTypes = {\n  variant: PropTypes.oneOf(['success', 'warning', 'info', 'error']).isRequired,\n  text: PropTypes.string.isRequired,\n  handleClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default Notification;\n","import { AbstractPortFactory } from 'storm-react-diagrams';\n\nexport class SimplePortFactory extends AbstractPortFactory {\n  cb;\n\n  constructor(type, cb) {\n    super(type);\n    this.cb = cb;\n  }\n\n  getNewInstance(initialConfig) {\n    return this.cb(initialConfig);\n  }\n}\n","import { DefaultLinkModel } from 'storm-react-diagrams';\n\nexport class LinkModel extends DefaultLinkModel {\n  constructor() {\n    super('custom');\n\n    this.width = 3;\n    this.curvyness = 50;\n    this.color = 'rgba(0,0,0,0.3)';\n  }\n}\n","import * as React from 'react';\nimport { DefaultLinkFactory } from 'storm-react-diagrams';\n\nimport { LinkModel } from './LinkModel';\n\nexport class LinkFactory extends DefaultLinkFactory {\n  constructor() {\n    super();\n    this.type = 'custom';\n  }\n\n  getNewInstance(initialConfig) {\n    return new LinkModel();\n  }\n\n  generateLinkSegment(model, widget, selected, path) {\n    return (\n      <path\n        className={selected ? widget.bem('--path-selected') : ''}\n        strokeWidth={model.width}\n        stroke={model.color}\n        d={path}\n      />\n    );\n  }\n}\n","import * as _ from 'lodash';\nimport { PortModel as BasePortModel } from 'storm-react-diagrams';\n\nimport { LinkModel } from './../Link';\n\nexport class LeftRightPort extends BasePortModel {\n  in;\n  position;\n\n  constructor(pos = 'left', type) {\n    super(pos, type);\n\n    this.position = pos;\n    this.in = this.position === 'left';\n  }\n\n  link(port) {\n    let link = this.createLinkModel();\n\n    link.setSourcePort(this);\n    link.setTargetPort(port);\n\n    return link;\n  }\n\n  canLinkToPort(port) {\n    return this.in !== port.in;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      position: this.position\n    });\n  }\n\n  deSerialize(data, engine) {\n    super.deSerialize(data, engine);\n    this.position = data.position;\n  }\n\n  createLinkModel() {\n    return new LinkModel();\n  }\n}\n","import * as _ from 'lodash';\nimport { PortModel as BasePortModel } from 'storm-react-diagrams';\n\nimport { LinkModel } from './../Link';\n\nexport class LeftRightBottomPort extends BasePortModel {\n  position;\n\n  constructor(pos = 'left', type) {\n    super(pos, type);\n\n    this.position = pos;\n    this.in = this.position === 'left';\n  }\n\n  link(port) {\n    let link = this.createLinkModel();\n\n    link.setSourcePort(this);\n    link.setTargetPort(port);\n\n    return link;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      position: this.position\n    });\n  }\n\n  canLinkToPort(port) {\n    return this.in !== port.in;\n  }\n\n  deSerialize(data, engine) {\n    super.deSerialize(data, engine);\n    this.position = data.position;\n  }\n\n  createLinkModel() {\n    return new LinkModel();\n  }\n}\n","import { LeftRightPort } from '../Ports';\n\nexport class PortModel extends LeftRightPort {\n  constructor(position = 'left') {\n    super(position, 'email');\n  }\n}\n","import { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport * as _ from 'lodash';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('email', element.id);\n\n    this.name = element.name;\n    this.selectedMail = element.selectedMail;\n    this.addPort(new PortModel('left'));\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.selectedMail = ob.selectedMail;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      selectedMail: this.selectedMail\n    });\n  }\n}\n","import * as React from 'react';\n\nimport { PortWidget as BasePortWidget } from 'storm-react-diagrams';\n\nexport class PortWidget extends BasePortWidget {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: false\n    };\n  }\n\n  getClassName() {\n    return (\n      'port ' +\n      super.getClassName() +\n      (this.state.selected ? this.bem('--selected') : '')\n    );\n  }\n\n  render() {\n    return (\n      <div\n        {...this.getProps()}\n        onMouseEnter={() => {\n          this.setState({ selected: true });\n        }}\n        onMouseLeave={() => {\n          this.setState({ selected: false });\n        }}\n        data-name={this.props.name}\n        data-nodeid={this.props.node.getID()}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import {\n  CANVAS_PANNABLE,\n  CANVAS_ZOOMABLE,\n  CANVAS_ZOOMABLE_PANNABLE,\n  CANVAS_NOTIFICATION\n} from './types';\n\nexport function setCanvasZoomable(zoomable) {\n  return {\n    type: CANVAS_ZOOMABLE,\n    payload: zoomable\n  };\n}\n\nexport function setCanvasPannable(pannable) {\n  return {\n    type: CANVAS_PANNABLE,\n    payload: pannable\n  };\n}\n\nexport function setCanvasZoomingAndPanning(zoomingAndPanning) {\n  return {\n    type: CANVAS_ZOOMABLE_PANNABLE,\n    payload: zoomingAndPanning\n  };\n}\n\nexport function setCanvasNotification(notificationOptions) {\n  return {\n    type: CANVAS_NOTIFICATION,\n    payload: notificationOptions\n  };\n}\n","import axios from 'axios';\nimport {\n  SET_SCENARIO_ID,\n  SET_SCENARIO_NAME,\n  SET_SCENARIO_LOADING,\n  SET_SCENARIO_PAYLOAD\n} from './types';\nimport * as config from '../config';\nimport { setCanvasNotification } from './CanvasActions';\n\nexport function setScenarioId(id) {\n  return {\n    type: SET_SCENARIO_ID,\n    payload: id\n  };\n}\n\nexport function setScenarioName(name) {\n  return {\n    type: SET_SCENARIO_NAME,\n    payload: name\n  };\n}\n\nexport function setScenarioPayload(payload) {\n  return {\n    type: SET_SCENARIO_PAYLOAD,\n    payload\n  };\n}\n\nexport function setScenarioLoading(loading) {\n  return {\n    type: SET_SCENARIO_LOADING,\n    payload: loading\n  };\n}\n\nexport function fetchScenario(scenarioId) {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(config.URL_SCENARIO_DETAIL + scenarioId)\n      .then(response => {\n        dispatch(setScenarioPayload(response.data));\n        dispatch(setScenarioName(response.data.name));\n        dispatch(setScenarioId(response.data.id));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Scenario fetching failed.'\n          })\n        );\n        console.log(error);\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from './../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\n\nimport { SEGMENTS_CHANGED } from './types';\n\nexport function updateSegments(segments) {\n  return {\n    type: SEGMENTS_CHANGED,\n    payload: segments\n  };\n}\n\nexport function fetchSegments() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(`${config.URL_SEGMENTS_INDEX}`)\n      .then(response => {\n        dispatch(updateSegments(response.data.result));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(setScenarioLoading(false));\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Segments fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from './../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\n\nimport { TRIGGERS_CHANGED } from './types';\n\nexport function updateTriggers(triggers) {\n  return {\n    type: TRIGGERS_CHANGED,\n    payload: triggers\n  };\n}\n\nexport function fetchTriggers() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(`${config.URL_TRIGGERS_INDEX}`)\n      .then(response => {\n        dispatch(updateTriggers(response.data.events));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        console.log(error);\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Triggers fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from './../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\n\nimport { MAILS_CHANGED } from './types';\n\nexport function updateMails(mails) {\n  return {\n    type: MAILS_CHANGED,\n    payload: mails\n  };\n}\n\nexport function fetchMails() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(`${config.URL_MAILS_INDEX}`)\n      .then(response => {\n        dispatch(updateMails(response.data.mail_templates));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        console.log(error);\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Mails fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from './../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\nimport { GOALS_CHANGED } from './types';\n\nexport function updateGoals(goals) {\n  return {\n    type: GOALS_CHANGED,\n    payload: goals\n  };\n}\n\nexport function fetchGoals() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(config.URL_GOALS_INDEX)\n      .then(response => {\n        dispatch(updateGoals(response.data.goals));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        console.log(error);\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Goals fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from '../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\nimport { BANNERS_CHANGED } from './types';\n\nexport function updateBanners(banners) {\n  return {\n    type: BANNERS_CHANGED,\n    payload: banners\n  };\n}\n\nexport function fetchBanners() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(config.URL_BANNERS_INDEX)\n      .then(response => {\n        dispatch(updateBanners(response.data.banners));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        console.log(error);\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Banners fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from '../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\nimport { CRITERIA_CHANGED } from './types';\n\nexport function updateCriteria(criteria) {\n  return {\n    type: CRITERIA_CHANGED,\n    payload: criteria\n  };\n}\n\nexport function fetchCriteria() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(config.URL_SCENARIO_CRITERIA)\n      .then(response => {\n        dispatch(updateCriteria(response.data.blueprint));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(setScenarioLoading(false));\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Criteria fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import axios from 'axios';\nimport * as config from './../config';\nimport { setScenarioLoading } from './ScenarioActions';\nimport { setCanvasNotification } from './CanvasActions';\n\nimport { BEFORE_TRIGGERS_CHANGED } from './types';\n\nexport function updateBeforeTriggers(beforeTriggers) {\n  return {\n    type: BEFORE_TRIGGERS_CHANGED,\n    payload: beforeTriggers\n  };\n}\n\nexport function fetchBeforeTriggers() {\n  return dispatch => {\n    dispatch(setScenarioLoading(true));\n    return axios\n      .get(`${config.URL_BEFORE_TRIGGERS_INDEX}`)\n      .then(response => {\n        dispatch(updateBeforeTriggers(response.data.events));\n        dispatch(setScenarioLoading(false));\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        console.log(error);\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Triggers fetching failed.'\n          })\n        );\n      });\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from '@material-ui/core/Popover';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport * as config from '../config';\nimport { setCanvasNotification } from '../actions';\n\nclass StatisticsTooltip extends React.Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    anchorElement: PropTypes.instanceOf(Element)\n  };\n\n  state = {\n    html: null,\n    loading: true\n  };\n\n  componentDidUpdate(oldProps) {\n    if (\n      this.props.scenarioID &&\n      this.props.scenarioID !== oldProps.scenarioID\n    ) {\n      this.fetchStatistics();\n    }\n  }\n\n  fetchStatistics() {\n    const { dispatch, id, scenarioID, isTrigger } = this.props;\n    if (!scenarioID) return;\n\n    let url = isTrigger ? `${config.URL_TRIGGER_TOOLTIP}?trigger_uuid=${id}` : `${config.URL_ELEMENT_TOOLTIP}?element_uuid=${id}`; \n\n    this.setState({ loading: true });\n    axios\n      .get(url)\n      .then(({ data }) => {\n        this.setState({ html: data.html });\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Tooltip fetching failed.'\n          })\n        );\n      })\n      .then(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    const { anchorElement } = this.props;\n    const { html } = this.state;\n    if (!html) return null;\n\n    return (\n      <Popover\n        open={Boolean(anchorElement)}\n        anchorEl={anchorElement}\n        style={{ pointerEvents: 'none' }}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        {this.state.loading && (\n          <div className='node-tooltip-loader'>\n            <CircularProgress size={30} />\n          </div>\n        )}\n\n        <div\n          className='node-tooltip-wrapper'\n          dangerouslySetInnerHTML={{ __html: this.state.html }}\n        />\n      </Popover>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { scenario } = state;\n\n  return {\n    scenarioID: scenario.id\n  };\n}\n\nexport default connect(mapStateToProps)(StatisticsTooltip);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '10px',\n    marginBottom: '10px',\n    fontFamily: 'Roboto, Helvetica, Arial, sans-serif'\n  },\n  input: {\n    display: 'flex',\n    padding: 0,\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  chip: {\n    margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === 'light'\n        ? theme.palette.grey[300]\n        : theme.palette.grey[700],\n      0.08\n    )\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\n  },\n  singleValue: {\n    fontSize: 14\n  },\n  placeholder: {\n    position: 'absolute',\n    left: 2,\n    fontSize: 14\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0\n  },\n  divider: {\n    height: theme.spacing.unit * 2\n  }\n});\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color='textSecondary'\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n  return (\n    <TextField\n      fullWidth\n      multiline\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps\n        }\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n}\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component='div'\n      style={{\n        fontWeight: props.isSelected ? 500 : 400\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nfunction Placeholder(props) {\n  return (\n    <Typography\n      color='textSecondary'\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction SingleValue(props) {\n  return (\n    <Typography\n      className={props.selectProps.classes.singleValue}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction ValueContainer(props) {\n  return (\n    <div className={props.selectProps.classes.valueContainer}>\n      {props.children}\n    </div>\n  );\n}\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={classNames(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\n\nfunction Menu(props) {\n  return (\n    <Paper\n      square\n      className={props.selectProps.classes.paper}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Paper>\n  );\n}\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer\n};\n\nclass MaterialSelect extends React.Component {\n  state = {\n    single: null,\n    multi: null\n  };\n\n  handleChange = name => value => {\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    const selectStyles = {\n      input: base => ({\n        ...base,\n        color: theme.palette.text.primary,\n        '& input': {\n          font: 'inherit'\n        }\n      })\n    };\n\n    return (\n      <div className={classes.root}>\n        <Select\n          classes={classes}\n          styles={selectStyles} \n          components={components}\n          menuPosition={'fixed'}\n          textFieldProps={{\n            label: this.props.label,\n            InputLabelProps: {\n              shrink: true\n            }\n          }}\n          isMulti={this.props.isMulti}\n          options={this.props.options}\n          value={this.props.value}\n          onChange={this.props.onChange}\n          placeholder={this.props.placeholder}\n        />\n      </div>\n    );\n  }\n}\n\nMaterialSelect.propTypes = {\n  classes: PropTypes.object,\n  theme: PropTypes.object,\n  options: PropTypes.array,\n  placeholder: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n  isMulti: PropTypes.bool\n};\n\nMaterialSelect.defaultProp = {\n  isMulti: false\n};\n\nexport default withStyles(styles, { withTheme: true })(MaterialSelect);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport ActionIcon from '@material-ui/icons/Mail';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport groupBy from 'lodash/groupBy';\n\nimport { PortWidget } from '../../widgets/PortWidget';\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport MaterialSelect from '../../MaterialSelect';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodeFormName: this.props.node.name,\n      selectedMail: this.props.node.selectedMail,\n      dialogOpened: false,\n      anchorElementForTooltip: null\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  getFormatedValue = () => {\n    const match = this.props.mails.find(mail => {\n      return mail.code === this.state.selectedMail;\n    });\n\n    return match\n      ? {\n          value: match.code,\n          label: match.name\n        }\n      : {};\n  };\n\n  // maybe refactor to more effective way if is a problem\n  transformOptionsForSelect = () => {\n    const lodashGrouped = groupBy(\n      this.props.mails,\n      mail => mail.mail_type.code\n    );\n\n    const properlyGrouped = [];\n\n    Object.keys(lodashGrouped).forEach(key => {\n      properlyGrouped.push({\n        label: lodashGrouped[key][0].mail_type.name,\n        sorting: lodashGrouped[key][0].mail_type.sorting,\n        options: lodashGrouped[key].map(mail => ({\n          value: mail.code,\n          label: mail.name\n        }))\n      });\n    });\n\n    const properlyGroupedSorted = properlyGrouped.sort((a, b) => {\n      return a.sorting - b.sorting;\n    });\n\n    return properlyGroupedSorted;\n  };\n\n  getSelectedMailValue = () => {\n    const selected = this.props.mails.find(\n      mail => mail.code === this.props.node.selectedMail\n    );\n\n    return selected ? ` - ${selected.name}` : '';\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        style={{ background: this.props.node.color }}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <ActionIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__left')}>\n              <PortWidget name='left' node={this.props.node} />\n            </div>\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node} />\n            </div>\n          </div>\n        </div>\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : `Mail ${this.getSelectedMailValue()}`}\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n          fullWidth\n        >\n          <DialogTitle id='form-dialog-title'>Email node</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText>Sends an email to user.</DialogContentText>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='action-name'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={12}>\n                <MaterialSelect\n                  options={this.transformOptionsForSelect()}\n                  value={this.getFormatedValue()}\n                  onChange={event => {\n                    this.setState({\n                      selectedMail: event.value\n                    });\n                  }}\n                  placeholder='Pick one'\n                  label='Selected Mail'\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.selectedMail = this.state.selectedMail;\n\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    mails: state.mails.availableMails\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('email');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='square-node'\n        className='email-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightPort } from '../Ports';\n\nexport class PortModel extends LeftRightPort {\n  constructor(position = 'left') {\n    super(position, 'banner');\n  }\n}\n","import { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport * as _ from 'lodash';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('banner', element.id);\n\n    this.name = element.name;\n    this.selectedBanner = element.selectedBanner;\n\n    this.expiresInTime = element.expiresInTime;\n    this.expiresInUnit = element.expiresInUnit;\n\n    this.addPort(new PortModel('left'));\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.selectedBanner = ob.selectedBanner;\n\n    this.expiresInTime = ob.expiresInTime || '1';\n    this.expiresInUnit = ob.expiresInUnit || 'days';\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      selectedBanner: this.selectedBanner,\n      expiresInTime: this.expiresInTime,\n      expiresInUnit: this.expiresInUnit,\n    });\n  }\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport ActionIcon from '@material-ui/icons/Adjust';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { PortWidget } from '../../widgets/PortWidget';\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport MaterialSelect from '../../MaterialSelect';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodeFormName: this.props.node.name,\n      selectedBanner: this.props.node.selectedBanner,\n      dialogOpened: false,\n      anchorElementForTooltip: null,\n      expiresInTime: this.props.node.expiresInTime,\n      expiresInUnit: this.props.node.expiresInUnit,\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  getFormatedValue = () => {\n    const match = this.props.banners.find(banner => {\n      return banner.id === this.state.selectedBanner;\n    });\n\n    return match\n      ? {\n          value: match.id,\n          label: match.name\n        }\n      : {};\n  };\n\n  // maybe refactor to more effective way if is a problem\n  transformOptionsForSelect = () => {\n    const banners = this.props.banners.map(banner => ({\n      value: banner.id,\n      label: banner.name,\n    }));\n    return banners;\n  };\n\n  getSelectedMailValue = () => {\n    const selected = this.props.banners.find(\n      banner => banner.id === this.props.node.selectedBanner\n    );\n\n    return selected ? ` - ${selected.name}` : '';\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        style={{ background: this.props.node.color }}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <ActionIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__left')}>\n              <PortWidget name='left' node={this.props.node} />\n            </div>\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node} />\n            </div>\n          </div>\n        </div>\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : `Banner ${this.getSelectedMailValue()}`}\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n          fullWidth\n        >\n          <DialogTitle id='form-dialog-title'>Banner node</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText>Shows a one-time banner to user.</DialogContentText>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='action-name'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={12}>\n                <MaterialSelect\n                  options={this.transformOptionsForSelect()}\n                  value={this.getFormatedValue()}\n                  onChange={event => {\n                    this.setState({\n                      selectedBanner: event.value\n                    });\n                  }}\n                  placeholder='Pick one'\n                  label='Selected Banner'\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  id='expires-in-time'\n                  label='Expires in'\n                  type='number'\n                  helperText=\"Banner is not shown after given period\"\n                  fullWidth\n                  value={this.state.expiresInTime}\n                  onChange={event => {\n                    this.setState({\n                      expiresInTime: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <FormControl fullWidth>\n                  <InputLabel htmlFor='time-unit'>Time unit</InputLabel>\n                  <Select\n                    value={this.state.expiresInUnit}\n                    onChange={event => {\n                      this.setState({\n                        expiresInUnit: event.target.value\n                      });\n                    }}\n                    inputProps={{\n                      name: 'expires-in-unit',\n                      id: 'expires-in-unit'\n                    }}\n                  >\n                    <MenuItem value='minutes'>Minutes</MenuItem>\n                    <MenuItem value='hours'>Hours</MenuItem>\n                    <MenuItem value='days'>Days</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.selectedBanner = this.state.selectedBanner;\n                this.props.node.expiresInTime = this.state.expiresInTime;\n                this.props.node.expiresInUnit = this.state.expiresInUnit;\n\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    banners: state.banners.availableBanners\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('banner');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='square-node'\n        className='banner-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightBottomPort } from './../Ports';\n\nexport class PortModel extends LeftRightBottomPort {\n  constructor(position = 'top') {\n    super(position, 'segment');\n  }\n}\n","import { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport * as _ from 'lodash';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('segment', element.id);\n\n    this.name = element.name;\n    this.selectedSegment = element.selectedSegment;\n\n    this.addPort(new PortModel('left'));\n    this.addPort(new PortModel('bottom'));\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.selectedSegment = ob.selectedSegment;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      selectedSegment: this.selectedSegment\n    });\n  }\n}","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\n\nfunction optionLabel(option) {\n    return typeof(option) === 'string' ? option : option.name;\n}\n\nfunction optionSelected(option, value) {\n    if (value && value.hasOwnProperty('code')) {\n        return option.code === value.code;\n    }\n\n    return false;\n}\n\nfunction value(selectedSegment, items) {\n    const item = items.filter(item => item.code === selectedSegment)[0];\n\n    return item ? item : null;\n}\n\nexport default function SegmentFormSelect(props) {\n    const items = useSelector(state => state.segments.avalaibleSegments.filter(\n        item => item.table === props.selectedSegmentSourceTable\n    ))[0].segments.sort(\n        (a,b) => a.group.sorting - b.group.sorting === 0 ? a.group.id - b.group.id : a.group.sorting - b.group.sorting\n    );\n\n    return (\n        <Autocomplete\n            value={value(props.selectedSegment, items)}\n            options={items}\n            getOptionSelected={optionSelected}\n            getOptionLabel={optionLabel}\n            groupBy={(option) => option.group.name}\n            style={{ width: 700, marginLeft: 10, marginBottom:5 }}\n            onChange={(event, value) => {props.onSegmentSelectedChange(value)}}\n            renderInput={params => (\n                <TextField {...params} variant=\"standard\" label=\"Segment\" fullWidth />\n            )}\n        />\n    );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport {useSelector} from \"react-redux\";\nimport SegmentFormSelect from \"./SegmentFormSelect\";\n\nconst useCriteriaBuilderStyles = makeStyles({\n    selectedButton: {\n        backgroundColor: \"#E4E4E4\"\n    },\n    deselectedButton: {\n        color:  \"#A6A6A6\"\n    }\n});\n\nfunction getSourceTable(selectedSegmentSourceTable, selectedSegment, items) {\n    if (selectedSegmentSourceTable) {\n        return selectedSegmentSourceTable;\n    }\n\n    if (selectedSegment) {\n        const segment = items.filter(item => item.segments.filter(item => item.code === selectedSegment).length > 0);\n\n        return (segment[0] && segment[0].hasOwnProperty('table')) ? segment[0].table : 'users';\n    }\n\n    return 'users';\n}\n\nexport default function SegmentSelector(props) {\n    const classes = useCriteriaBuilderStyles();\n    const items = useSelector(state => state.segments.avalaibleSegments);\n    const sourceTable = getSourceTable(props.selectedSegmentSourceTable, props.selectedSegment, items);\n\n    return (\n        <Grid container item xs={12} spacing={3}>\n            <Grid item xs={12}>\n                <ButtonGroup aria-label=\"outlined button group\">\n                    {items.map(item => (\n                        <Button\n                            onClick={() => props.onSegmentTypeButtonClick(item.table)}\n                            className={sourceTable === item.table ? classes.selectedButton : classes.deselectedButton}\n                            key={item.table}>{item.table}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n            </Grid>\n            <SegmentFormSelect\n                selectedSegment={props.selectedSegment}\n                selectedSegmentSourceTable={sourceTable}\n                onSegmentSelectedChange={props.onSegmentSelectedChange}\n            >\n            </SegmentFormSelect>\n        </Grid>\n    );\n}","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport SegmentIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport OkIcon from '@material-ui/icons/Check';\nimport NopeIcon from '@material-ui/icons/Close';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Icon from '@material-ui/core/Icon';\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport { PortWidget } from '../../widgets/PortWidget';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\nimport SegmenterService from '../../../services/SegmenterService';\nimport { fetchSegments } from '../../../actions';\nimport SegmentSelector from './SegmentSelector';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodeFormName: this.props.node.name,\n      selectedSegment: this.props.node.selectedSegment,\n      dialogOpened: false,\n      anchorElementForTooltip: null,\n      creatingNewSegment: false,\n      selectedSegmentSourceTable: null\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      selectedSegment: this.props.node.selectedSegment,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  actionSetTable = table => {\n    if (this.state.selectedSegmentSourceTable !== table) {\n      this.setState({selectedSegment: null});\n      this.setState({selectedSegmentSourceTable: table});\n    }\n  };\n\n  segmentSelectedChange = segment => {\n    let value = null;\n    if (segment && segment.hasOwnProperty('code')) {\n      value = segment.code;\n    }\n\n    this.setState({selectedSegment: value});\n  };\n\n  getSelectedSegmentValue = () => {\n    const selected = this.props.segments.flatMap(\n      item => item.segments).find(\n        segment => segment.code === this.props.node.selectedSegment\n    );\n\n    return selected ? ` - ${selected.name}` : '';\n  };\n\n  handleNewSegmentClick = () => {\n    window.addEventListener('savedSegment', this.handleSavedNewSegment);\n    window.addEventListener('canceledNewSegment', this.handleCancelNewSegment);\n    this.setState({ creatingNewSegment: true });\n    setTimeout(() => {\n      SegmenterService.init();\n    });\n  };\n\n  handleSavedNewSegment = event => {\n    this.props.dispatch(fetchSegments());\n    this.setState({\n      selectedSegment: event.detail.code,\n      creatingNewSegment: false\n    });\n    this.props.node.name = this.state.nodeFormName;\n    this.props.node.selectedSegment = this.state.selectedSegment;\n    this.props.diagramEngine.repaintCanvas();\n    this.closeDialog();\n    window.removeEventListener('savedSegment', this.handleSavedNewSegment);\n  };\n\n  handleCancelNewSegment = event => {\n    this.setState({ creatingNewSegment: false });\n    window.removeEventListener(\n      'canceledNewSegment',\n      this.handleSavedNewSegment\n    );\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : `Segment ${this.getSelectedSegmentValue()}`}\n          </div>\n        </div>\n\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <SegmentIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__left')}>\n              <PortWidget name='left' node={this.props.node} />\n            </div>\n\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node}>\n                <OkIcon\n                  style={{\n                    position: 'absolute',\n                    top: '-20px',\n                    right: '-20px',\n                    color: '#2ECC40'\n                  }}\n                />\n              </PortWidget>\n            </div>\n\n            <div className={this.bem('__bottom')}>\n              <PortWidget name='bottom' node={this.props.node}>\n                <NopeIcon\n                  style={{\n                    position: 'absolute',\n                    top: '8px',\n                    right: '-22px',\n                    color: '#FF695E'\n                  }}\n                />\n              </PortWidget>\n            </div>\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n          fullScreen={this.state.creatingNewSegment}\n          disableEscapeKeyDown={this.state.creatingNewSegment}\n        >\n          {!this.state.creatingNewSegment && (\n            <>\n              <DialogTitle id='form-dialog-title'>Segment node</DialogTitle>\n\n              <DialogContent>\n                <DialogContentText>\n                  Segments evaluate user's presence in a group of users defined\n                  by system-provided conditions. Execution flow can be directed\n                  based on presence/absence of user within the selected segment.\n                  You can either pick one of the existing segments or create a\n                  new one.\n                </DialogContentText>\n\n                <Grid container spacing={3}>\n                  <Grid item xs={6}>\n                    <TextField\n                      margin='normal'\n                      id='segment-name'\n                      label='Node name'\n                      fullWidth\n                      value={this.state.nodeFormName}\n                      onChange={event => {\n                        this.setState({\n                          nodeFormName: event.target.value\n                        });\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n\n                <Grid container spacing={3} alignItems='flex-end'>\n                  <Grid item xs={8}>\n                    <SegmentSelector\n                        selectedSegment={this.state.selectedSegment}\n                        selectedSegmentSourceTable={this.state.selectedSegmentSourceTable}\n                        onSegmentTypeButtonClick={this.actionSetTable}\n                        onSegmentSelectedChange={this.segmentSelectedChange}\n                    >\n                    </SegmentSelector>\n                  </Grid>\n                  {window.RempSegmenter && (\n                    <Grid item xs={4} style={{textAlign: 'right', paddingBottom: '4px'}}>\n                      <Button\n                        variant='contained'\n                        color='primary'\n                        size='small'\n                        style={{ position: 'relative', bottom: '10px' }}\n                        onClick={this.handleNewSegmentClick}\n                      >\n                        <Icon style={{ marginRight: '5px' }}>add_circle</Icon>\n                        New segment\n                      </Button>\n                    </Grid>\n                  )}\n                </Grid>\n              </DialogContent>\n            </>\n          )}\n\n          {this.state.creatingNewSegment && (\n            <DialogContent>\n              <div\n                id='segmenter'\n                style={{ position: 'fixed', zIndex: '99999999' }}\n              />\n            </DialogContent>\n          )}\n\n          {!this.state.creatingNewSegment && (\n            <DialogActions>\n              <Button\n                color='secondary'\n                onClick={() => {\n                  this.closeDialog();\n                }}\n              >\n                Cancel\n              </Button>\n\n              <Button\n                color='primary'\n                onClick={() => {\n                  // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                  this.props.node.name = this.state.nodeFormName;\n                  this.props.node.selectedSegment = this.state.selectedSegment;\n\n                  this.props.diagramEngine.repaintCanvas();\n                  this.closeDialog();\n                }}\n              >\n                Save changes\n              </Button>\n            </DialogActions>\n          )}\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { segments, dispatch } = state;\n\n  return {\n    segments: segments.avalaibleSegments,\n    dispatch\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('segment');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='diamond-node'\n        className='segment-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightPort } from './../Ports';\n\nexport class PortModel extends LeftRightPort {\n  constructor(position = 'left') {\n    super(position, 'trigger');\n  }\n}\n","import * as _ from 'lodash';\nimport { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('trigger', element.id);\n\n    this.name = element.name;\n    this.selectedTrigger = element.selectedTrigger;\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.selectedTrigger = ob.selectedTrigger;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      selectedTrigger: this.selectedTrigger\n    });\n  }\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport TriggerIcon from '@material-ui/icons/Notifications';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { PortWidget } from './../../widgets/PortWidget';\nimport MaterialSelect from '../../MaterialSelect';\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      nodeFormName: this.props.node.name,\n      selectedTrigger: this.props.node.selectedTrigger,\n      dialogOpened: false,\n      anchorElementForTooltip: null\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  getTriggersInSelectableFormat = () => {\n    return this.props.triggers.map(trigger => {\n      return {\n        value: trigger.code,\n        label: trigger.name\n      };\n    });\n  };\n\n  getSelectedTriggerValue = () => {\n    const selected = this.getTriggersInSelectableFormat().find(\n      trigger => trigger.value === this.props.node.selectedTrigger\n    );\n\n    return selected ? ` - ${selected.label}` : '';\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        style={{ background: this.props.node.color }}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <TriggerIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node} />\n            </div>\n          </div>\n        </div>\n\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : `Event ${this.getSelectedTriggerValue()}`}\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          isTrigger={true}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n        >\n          <DialogTitle id='form-dialog-title'>Trigger node</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText>\n              Events are emitted on any change related to user. We recommend to\n              combine \"before\" events with \"Wait\" operations to achieve\n              execution at any desired time.\n            </DialogContentText>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='trigger-name'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={12}>\n                <MaterialSelect\n                  options={this.getTriggersInSelectableFormat()}\n                  value={this.getTriggersInSelectableFormat().find(\n                    option => option.value === this.state.selectedTrigger\n                  )}\n                  onChange={event => {\n                    this.setState({\n                      selectedTrigger: event.value\n                    });\n                  }}\n                  placeholder='Pick one'\n                  label='Selected Trigger'\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.selectedTrigger = this.state.selectedTrigger;\n\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { triggers } = state;\n\n  return {\n    triggers: triggers.avalaibleTriggers\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('trigger');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='square-node'\n        className='trigger-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightPort } from '../Ports';\n\nexport class PortModel extends LeftRightPort {\n  constructor(position = 'left') {\n    super(position, 'trigger_before');\n  }\n}\n","import * as _ from 'lodash';\nimport { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('before_trigger', element.id);\n\n    this.name = element.name;\n    this.selectedTrigger = element.selectedTrigger;\n    this.time = element.time || 10;\n    this.timeUnit = element.timeUnit || 'hours';\n\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.selectedTrigger = ob.selectedTrigger;\n    this.time = ob.time;\n    this.timeUnit = ob.timeUnit;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      selectedTrigger: this.selectedTrigger,\n      time: this.time,\n      timeUnit: this.timeUnit\n    });\n  }\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { PortWidget } from '../../widgets/PortWidget';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      nodeFormName: this.props.node.name,\n      selectedTrigger: this.props.node.selectedTrigger,\n      nodeFormBeforeTime: this.props.node.time,\n      timeUnit: this.props.node.timeUnit,\n      dialogOpened: false,\n      anchorElementForTooltip: null\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      nodeFormBeforeTime: this.props.node.time,\n      timeUnit: this.props.node.timeUnit,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  getTriggersInSelectableFormat = () => {\n    return this.props.beforeTriggers.map(trigger => {\n      return {\n        value: trigger.code,\n        label: trigger.name\n      };\n    });\n  };\n\n  getSelectedTriggerValue = () => {\n    const selected = this.getTriggersInSelectableFormat().find(\n      trigger => trigger.value === this.props.node.selectedTrigger\n    );\n\n    return selected ? `${this.props.node.time} ${this.props.node.timeUnit} before - ${selected.label} event` : 'Before Event';\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        style={{ background: this.props.node.color }}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <NotificationsActiveIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node} />\n            </div>\n          </div>\n        </div>\n\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : this.getSelectedTriggerValue()}\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          isTrigger={true}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n        >\n          <DialogTitle id='form-dialog-title'>Before trigger node</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText>\n              Events are emitted in advanced according to the selected time period.\n            </DialogContentText>\n\n            <Grid container>\n              <Grid item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='trigger-name'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container>\n              <Grid item xs={12}>\n                <Autocomplete\n                    value={this.getTriggersInSelectableFormat().find(\n                      option => option.value === this.state.selectedTrigger\n                    )}\n                    options={this.getTriggersInSelectableFormat()}\n                    getOptionLabel={(option) => option.label}\n                    style={{ marginBottom: 16 }}\n                    onChange={(event, selectedOption) => {\n                      if (selectedOption !== null) {\n                        this.setState({\n                          selectedTrigger: selectedOption.value\n                        });\n                      }\n                    }}\n                    renderInput={params => (\n                        <TextField {...params} variant=\"standard\" label=\"Trigger\" fullWidth />\n                    )}\n                  />\n              </Grid>\n            </Grid>\n\n            <Grid container>\n              <Grid item xs={6}>\n                <TextField\n                    id='waiting-time'\n                    label='Before time'\n                    type='number'\n                    fullWidth\n                    value={this.state.nodeFormBeforeTime}\n                    onChange={event => {\n                      this.setState({\n                        nodeFormBeforeTime: event.target.value\n                      });\n                    }}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <FormControl fullWidth>\n                  <InputLabel htmlFor='time-unit'>Time unit</InputLabel>\n                  <Select\n                      value={this.state.timeUnit}\n                      onChange={event => {\n                        this.setState({\n                          timeUnit: event.target.value\n                        });\n                      }}\n                      inputProps={{\n                        name: 'time-unit',\n                        id: 'time-unit'\n                      }}\n                  >\n                    <MenuItem value='minutes'>Minutes</MenuItem>\n                    <MenuItem value='hours'>Hours</MenuItem>\n                    <MenuItem value='days'>Days</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.selectedTrigger = this.state.selectedTrigger;\n                this.props.node.time = this.state.nodeFormBeforeTime;\n                this.props.node.timeUnit = this.state.timeUnit;\n\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { beforeTriggers } = state;\n\n  return {\n    beforeTriggers: beforeTriggers.availableBeforeTriggers\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('before_trigger');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='square-node'\n        className='before-trigger-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightPort } from './../Ports';\n\nexport class PortModel extends LeftRightPort {\n  constructor(position = 'left') {\n    super(position, 'wait');\n  }\n}\n","import * as _ from 'lodash';\nimport { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('wait', element.id);\n\n    this.name = element.name;\n    this.waitingTime = element.waitingTime || 10;\n    this.waitingUnit = element.waitingUnit || 'minutes';\n\n    this.addPort(new PortModel('left'));\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.waitingTime = ob.waitingTime;\n    this.waitingUnit = ob.waitingUnit;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      waitingTime: this.waitingTime,\n      waitingUnit: this.waitingUnit\n    });\n  }\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport WaitIcon from '@material-ui/icons/AccessAlarmsOutlined';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { PortWidget } from './../../widgets/PortWidget';\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodeFormWaitingTime: this.props.node.waitingTime,\n      nodeFormName: this.props.node.name,\n      timeUnit: this.props.node.waitingUnit,\n      dialogOpened: false,\n      anchorElementForTooltip: null\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormWaitingTime: this.props.node.waitingTime,\n      nodeFormName: this.props.node.name,\n      timeUnit: this.props.node.waitingUnit,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        style={{ background: this.props.node.color }}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <WaitIcon />\n          </div>\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__left')}>\n              <PortWidget name='left' node={this.props.node} />\n            </div>\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node} />\n            </div>\n          </div>\n        </div>\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : `Wait - ${this.props.node.waitingTime} ${\n                  this.props.node.waitingUnit\n                }`}\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n        >\n          <DialogTitle id='form-dialog-title'>Wait node</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Postpones the execution of next node in flow by selected amount of\n              time.\n            </DialogContentText>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='waiting-time'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  id='waiting-time'\n                  label='Waiting time'\n                  type='number'\n                  fullWidth\n                  value={this.state.nodeFormWaitingTime}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormWaitingTime: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <FormControl fullWidth>\n                  <InputLabel htmlFor='time-unit'>Time unit</InputLabel>\n                  <Select\n                    value={this.state.timeUnit}\n                    onChange={event => {\n                      this.setState({\n                        timeUnit: event.target.value\n                      });\n                    }}\n                    inputProps={{\n                      name: 'time-unit',\n                      id: 'time-unit'\n                    }}\n                  >\n                    <MenuItem value='minutes'>Minutes</MenuItem>\n                    <MenuItem value='hours'>Hours</MenuItem>\n                    <MenuItem value='days'>Days</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                this.props.node.waitingTime = this.state.nodeFormWaitingTime;\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.waitingUnit = this.state.timeUnit;\n\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { segments } = state;\n\n  return {\n    segments: segments.avalaibleSegments\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\nimport * as React from 'react';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('wait');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='round-node'\n        className='wait-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightBottomPort } from '../Ports';\n\nexport class PortModel extends LeftRightBottomPort {\n  constructor(position = 'top') {\n    super(position, 'goal');\n  }\n}\n","import { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport * as _ from 'lodash';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('goal', element.id);\n\n    this.name = element.name;\n    this.selectedGoals = element.selectedGoals;\n    this.timeoutTime = element.timeoutTime;\n    this.timeoutUnit = element.timeoutUnit;\n\n    this.recheckPeriodTime = element.recheckPeriodTime;\n    this.recheckPeriodUnit = element.recheckPeriodUnit;\n\n    this.addPort(new PortModel('left'));\n    this.addPort(new PortModel('bottom'));\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.selectedGoals = ob.selectedGoals;\n    this.timeoutTime = ob.timeoutTime || '';\n    this.timeoutUnit = ob.timeoutUnit || 'days';\n\n    this.recheckPeriodTime = ob.recheckPeriodTime || '1';\n    this.recheckPeriodUnit = ob.recheckPeriodUnit || 'hours';\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      selectedGoals: this.selectedGoals,\n      timeoutTime: this.timeoutTime,\n      timeoutUnit: this.timeoutUnit,\n      recheckPeriodTime: this.recheckPeriodTime,\n      recheckPeriodUnit: this.recheckPeriodUnit,\n    });\n  }\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport OkIcon from '@material-ui/icons/Check';\nimport TimeoutIcon from '@material-ui/icons/AccessTime';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport GoalIcon from '@material-ui/icons/CheckBox';\n\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport { PortWidget } from './../../widgets/PortWidget';\nimport MaterialSelect from '../../MaterialSelect';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodeFormName: this.props.node.name,\n      selectedGoals: this.props.node.selectedGoals,\n      timeoutTime: this.props.node.timeoutTime,\n      timeoutUnit: this.props.node.timeoutUnit,\n      recheckPeriodTime: this.props.node.recheckPeriodTime,\n      recheckPeriodUnit: this.props.node.recheckPeriodUnit,\n      dialogOpened: false,\n      anchorElementForTooltip: null,      \n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      selectedGoals: this.props.node.selectedGoals,\n      timeoutTime: this.props.node.timeoutTime,\n      timeoutUnit: this.props.node.timeoutUnit,\n      recheckPeriodTime: this.props.node.recheckPeriodTime,\n      recheckPeriodUnit: this.props.node.recheckPeriodUnit,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  transformOptionsForSelect = () => {\n    const goals = this.props.goals.map(goal => ({\n      value: goal.code,\n      label: goal.name,\n    }));\n    return goals;\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n  getFormatedValue = () => {\n    let goals = {};\n    this.props.goals.forEach(goal => {\n      goals[goal.code] = goal;\n    });\n\n    let matches = [];\n\n    if (this.state.selectedGoals !== undefined) {\n      this.state.selectedGoals.forEach(goalCode => {\n        matches.push({\n          value: goalCode,\n          label: goals[goalCode].name \n        });\n      });\n    }\n\n    return matches;\n  };\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name ? this.props.node.name : 'Goal'}\n          </div>\n        </div>\n\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <GoalIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__left')}>\n              <PortWidget name='left' node={this.props.node} />\n            </div>\n\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node}>\n                <OkIcon\n                  style={{\n                    position: 'absolute',\n                    top: '-20px',\n                    right: '-20px',\n                    color: '#2ECC40'\n                  }}\n                />\n              </PortWidget>\n            </div>\n\n            <div className={this.bem('__bottom')}>\n              <PortWidget name='bottom' node={this.props.node}>\n                <TimeoutIcon\n                  style={{\n                    position: 'absolute',\n                    top: '8px',\n                    right: '-22px',\n                    color: '#FF695E'\n                  }}\n                />\n              </PortWidget>\n            </div>\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n          // fullScreen={this.state.creatingNewSegment}\n          // disableEscapeKeyDown={this.state.creatingNewSegment}\n        >            \n          <DialogTitle id='form-dialog-title'>Goal node</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText>\n              Goal node evaluates whether user has completed selected onboarding goals. \n              Timeout value can be optionally specified, defining a point in time when evalution of completed goals is stopped.\n              Execution flow can be directed two ways from the node - a positive direction, when all goals are completed, or a negative one, when timeout threshold is reached.\n            </DialogContentText>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='goal-name'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={12}>\n                <MaterialSelect\n                  options={this.transformOptionsForSelect()}\n                  value={this.getFormatedValue()}\n                  onChange={selectedGoals => {\n                    this.setState({\n                      selectedGoals: selectedGoals.map(item => item.value)\n                    });\n                  }}\n                  isMulti={true}\n                  placeholder='Pick goals'\n                  label='Selected Goal(s)'\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  id='recheck-period-time'\n                  label='Recheck period time'\n                  type='number'\n                  helperText=\"How often goals completition should be checked\"\n                  fullWidth\n                  value={this.state.recheckPeriodTime}\n                  onChange={event => {\n                    this.setState({\n                      recheckPeriodTime: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <FormControl fullWidth>\n                  <InputLabel htmlFor='time-unit'>Time unit</InputLabel>\n                  <Select\n                    value={this.state.recheckPeriodUnit}\n                    onChange={event => {\n                      this.setState({\n                        recheckPeriodUnit: event.target.value\n                      });\n                    }}\n                    inputProps={{\n                      name: 'recheck-period-unit',\n                      id: 'recheck-period-unit'\n                    }}\n                  >\n                    <MenuItem value='minutes'>Minutes</MenuItem>\n                    <MenuItem value='hours'>Hours</MenuItem>\n                    <MenuItem value='days'>Days</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n            \n            <Grid container spacing={32}>\n              <Grid item xs={6}>\n                <TextField\n                  id='timeout-time'\n                  label='Timeout time'\n                  type='number'\n                  placeholder=\"No timeout\"\n                  helperText=\"Optionally select a timeout\"\n                  fullWidth\n                  value={this.state.timeoutTime}\n                  onChange={event => {\n                    this.setState({\n                      timeoutTime: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <FormControl fullWidth>\n                  <InputLabel htmlFor='time-unit'>Time unit</InputLabel>\n                  <Select\n                    value={this.state.timeoutUnit}\n                    onChange={event => {\n                      this.setState({\n                        timeoutUnit: event.target.value\n                      });\n                    }}\n                    inputProps={{\n                      name: 'time-unit',\n                      id: 'time-unit'\n                    }}\n                  >\n                    <MenuItem value='minutes'>Minutes</MenuItem>\n                    <MenuItem value='hours'>Hours</MenuItem>\n                    <MenuItem value='days'>Days</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.selectedGoals = this.state.selectedGoals;\n                this.props.node.timeoutTime = this.state.timeoutTime;\n                this.props.node.timeoutUnit = this.state.timeoutUnit;\n                this.props.node.recheckPeriodTime = this.state.recheckPeriodTime;\n                this.props.node.recheckPeriodUnit = this.state.recheckPeriodUnit;\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { goals, dispatch } = state;\n\n  return {\n    goals: goals.availableGoals,\n    dispatch\n  };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);\n","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('goal');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='diamond-node'\n        className='goal-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import { LeftRightBottomPort } from './../Ports';\n\nexport class PortModel extends LeftRightBottomPort {\n  constructor(position = 'top') {\n    super(position, 'condition');\n  }\n}\n","import { NodeModel as BaseNodeModel } from 'storm-react-diagrams';\nimport * as _ from 'lodash';\nimport { PortModel } from './PortModel';\n\nexport class NodeModel extends BaseNodeModel {\n  constructor(element) {\n    super('condition', element.id);\n\n    this.name = element.name;\n    this.conditions = element.conditions;\n\n    this.addPort(new PortModel('left'));\n    this.addPort(new PortModel('bottom'));\n    this.addPort(new PortModel('right'));\n  }\n\n  deSerialize(ob, engine) {\n    super.deSerialize(ob, engine);\n    this.name = ob.name;\n    this.conditions = ob.conditions;\n  }\n\n  serialize() {\n    return _.merge(super.serialize(), {\n      name: this.name,\n      conditions: this.conditions,\n    });\n  }\n}\n","import uuidv4 from 'uuid/v4';\n\n///////////////////////////\n// local reducer and state for criteria builder\n///////////////////////////\n\nexport function emptyNode() {\n\treturn {\n\t\tid: uuidv4(),\n\t\tkey: ''\n\t};\n}\n\nexport function actionSetNodeValues(nodeId, values) {\n\treturn {\n\t\ttype: 'SET_NODE_VALUES',\n\t\tpayload: {\n\t\t\tvalues: values,\n\t\t\tnodeId: nodeId,\n\t\t}\n\t};\n}\n\nexport function actionSetKeyForNode(nodeId, key) {\n\treturn {\n\t\ttype: 'SET_KEY_FOR_NODE',\n\t\tpayload: {\n\t\t\tkey: key,\n\t\t\tnodeId: nodeId,\n\t\t}\n\t};\n}\n\nexport function actionDeleteNode(nodeId) {\n\treturn {\n\t\ttype: 'DELETE_NODE',\n\t\tpayload: {\n\t\t\tnodeId: nodeId,\n\t\t}\n\t};\n}\n\nexport function actionAddCriterion() {\n\treturn {\n\t\ttype: 'ADD_CRITERION'\n\t};\n}\n\nexport function actionSetEvent(event) {\n\treturn {\n\t\ttype: 'SET_EVENT',\n\t\tpayload: event\n\t};\n}\n\nexport function reducer(state, action) {\n\tswitch (action.type) {\n\t\tcase 'SET_NODE_VALUES':\n\t\t\treturn {\n\t\t\t\t...state, nodes: state.nodes.map(node => {\n\t\t\t\t\tif (node.id === action.payload.nodeId) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...node,\n\t\t\t\t\t\t\tvalues: action.payload.values\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn node;\n\t\t\t\t})\n\t\t\t};\n\t\tcase 'SET_EVENT':\n\t\t\t// this also resets nodes state\n\t\t\treturn {\n\t\t\t\t...state, nodes: [emptyNode()], event: action.payload\n\t\t\t};\n\t\tcase 'ADD_CRITERION':\n\t\t\treturn {\n\t\t\t\t...state, nodes: [...state.nodes, emptyNode()]\n\t\t\t};\n\t\tcase 'DELETE_NODE':\n\t\t\treturn {\n\t\t\t\t...state, nodes: state.nodes.filter(n => n.id !== action.payload.nodeId)\n\t\t\t};\n\t\tcase 'SET_KEY_FOR_NODE':\n\t\t\tlet newNodes = state.nodes.map(node => {\n\t\t\t\tif (action.payload.nodeId === node.id) return {\n\t\t\t\t\tid: node.id,\n\t\t\t\t\tkey: action.payload.key,\n\t\t\t\t\tvalues: [], // reset values, TODO: add default value depending on key type\n\t\t\t\t};\n\t\t\t\treturn node;\n\t\t\t});\n\t\t\treturn {\n\t\t\t\t...state, nodes: newNodes\n\t\t\t};\n\t\tdefault:\n\t\t\tthrow new Error(\"unsupported action type \" + action.type);\n\t}\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { actionSetNodeValues } from '../criteriaReducer';\n\nconst elementStyles = makeStyles(theme => ({\n  // Puts visually OR/AND between tags\n  chipRoot: props => ({\n    \"&:not(:first-child)\": {\n      \"&::before\": {\n        content: \"'\" + props.operator + \"'\",\n        textTransform: 'uppercase',\n        position: 'absolute',\n        left: '-20px',\n      },\n      marginLeft: '20px'\n    },\n    position: 'relative'\n  })\n}));\n\nfunction selectedOptions(selectedValues, options) {\n  const s = new Set(selectedValues);\n  let selected = options.filter(option => {\n    let has = s.has(option.value);\n    if (has) {\n      // for free-solo mode\n      s.delete(option.value);\n    }\n    return has;\n  });\n  // If free solo mode is enabled, there might be additional selected values (outside of options), add them as well\n  return selected.concat([...s]);\n}\n\nfunction optionLabel(option) {\n  if (typeof(option) === 'string') {\n    // free-solo value\n    return option;\n  } else {\n    // predefined option value\n    return option.label;\n  }\n}\n\nfunction optionGroup(option) {\n  if (typeof(option) === 'string') {\n    // free-solo value\n    return '';\n  } else if (option.hasOwnProperty('group')) {\n    return option.group;\n  } else {\n    return '';\n  }\n}\n\nexport default function StringLabeledArrayParam(props) {\n  const classes = elementStyles({operator: props.params.operator});\n  const handleChange = (event, values) => {\n    props.dispatch(actionSetNodeValues(props.node.id, {\n      operator: props.params.operator, // TODO add ability to change operator\n      selection: values.map(item => {\n        if (typeof(item) === 'string') {\n          // free-solo value\n          return item;\n        } else {\n          // predefined option value\n          return item.value;\n        }\n      })\n    }));\n  };\n\n  return (\n    <Autocomplete\n        multiple\n        ChipProps={{\n          classes: {\n            root: classes.chipRoot\n          }\n        }}\n        options={props.params.options}\n        getOptionLabel={optionLabel}\n        onChange={handleChange}\n        value={selectedOptions(props.node.values.selection, props.params.options)}\n        freeSolo={props.params.freeSolo}\n        groupBy={optionGroup}\n        renderInput={params => (\n          <TextField\n            {...params}\n            variant=\"standard\"\n            label={props.params.label}\n            placeholder=\"\"\n            fullWidth\n          />\n        )}\n      />\n  );\n}\n\nStringLabeledArrayParam.propTypes = {\n  // node = {values: {selection: ['city_1'], operator: 'or'}, key: 'type', id: '1'}\n  node: PropTypes.object.isRequired,\n  // params = {label: 'Cities', type: 'string_labeled_array', options: [{value: 'city_1', label: 'City 1', group: 'Group 1'}], operator: 'or', freeSolo: true}\n  params: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { actionSetNodeValues } from '../criteriaReducer';\n\nexport default function BooleanParam(props) {\n    // if not selected yet, set selection to True\n    if (props.node.values.selection === undefined) {\n      props.dispatch(actionSetNodeValues(props.node.id, {\n        selection: true\n      }));\n    }\n\n    const handleChange = (event) => {\n      props.dispatch(actionSetNodeValues(props.node.id, {\n        selection: event.target.checked\n      }));\n    };\n  \n    return (\n      <FormControlLabel\n          onChange={handleChange}\n          control={<Switch />}\n          checked={props.node.values.selection !== undefined && props.node.values.selection}\n          label={props.params.label}\n        />\n    );\n  }\n\nBooleanParam.propTypes = {\n    // node = {values: {selection: true}, key: 'type_of_boolean_condition', id: '1'}\n    node: PropTypes.object.isRequired,\n    // params = {label: 'Is recurrent', type: 'boolean'}\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n};","import React, { useImperativeHandle, useReducer, useContext, forwardRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\nimport { Card, CardContent, FormControl, InputLabel, Select, MenuItem, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport StringLabeledArrayParam from './CriteriaTypes/StringLabeledArrayParam';\nimport BooleanParam from './CriteriaTypes/BooleanParam';\nimport { emptyNode, reducer, actionSetEvent, actionSetKeyForNode, actionAddCriterion, actionDeleteNode } from './criteriaReducer';\n\nconst BuilderDispatch = React.createContext(null);\n\n////////////////////\n// CriteriaParams\n////////////////////\n\n// Props - node, params\nfunction CriteriaParams(props) {\n  const dispatch = useContext(BuilderDispatch);\n  let typeParams = props.params[props.node.key];\n  switch (typeParams.type) {\n    case 'string_labeled_array':\n      return (<StringLabeledArrayParam node={props.node} params={typeParams} dispatch={dispatch}></StringLabeledArrayParam>);\n    case 'boolean':\n      return (<BooleanParam node={props.node} params={typeParams} dispatch={dispatch}></BooleanParam>);\n    default:\n      throw new Error(\"unsupported node type \" + typeParams.type);\n  }\n}\n\n////////////////////\n// CriteriaForm\n////////////////////\n\nconst useCriteriaFormStyles = makeStyles({\n  cardContent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    backgroundColor: '#F2F2F2',\n  },\n  formControl: {\n    minWidth: '180px',\n  },\n});\n\n// Props - node, criteria\nfunction CriteriaForm(props) {\n  const classes = useCriteriaFormStyles();\n  const dispatch = useContext(BuilderDispatch);\n\n  return (\n    <Card>\n      <CardContent className={classes.cardContent}>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"select-criteria-label\">Criteria</InputLabel>\n          <Select\n            labelId=\"select-criteria-label\"\n            id=\"select-criteria\"\n            placeholder=\"Select criteria\"\n            value={props.node.key}\n            onChange={e => dispatch(actionSetKeyForNode(props.node.id, e.target.value))}\n          >\n            {props.criteria.map(cr => (\n              <MenuItem key={cr.key} value={cr.key}>{cr.label}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <IconButton onClick={() => dispatch(actionDeleteNode(props.node.id))} \n          size=\"small\" \n          className={classes.icon} \n          aria-label=\"delete\">\n          <DeleteIcon />\n        </IconButton>\n      </CardContent>\n\n      { props.node.key &&\n        <CardContent>\n          <CriteriaParams \n            node={props.node} \n            params={props.criteria.filter(cr => cr.key === props.node.key)[0].params}>\n          </CriteriaParams>\n        </CardContent>\n      }\n    </Card>\n  );\n}\n\n////////////////////\n// CriteriaTable\n////////////////////\n\nconst useCriteriaTableStyles = makeStyles({\n  andContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexGrow: 0,\n    maxWidth: '100%',\n    flexBasis: '100%'\n  }\n});\n\n// Props - blueprint, nodes\nfunction CriteriaTable(props) {\n  const classes = useCriteriaTableStyles();\n  const dispatch = useContext(BuilderDispatch);\n\n  return (\n    <>\n      {props.nodes.map((node, index) => (\n        <React.Fragment key={node.id}>\n          { index >= 1 &&\n            <div className={classes.andContainer}>AND</div>\n          }\n          <Grid item xs={12}>\n            <CriteriaForm\n              node={node}\n              criteria={props.blueprint.criteria}>\n            </CriteriaForm>\n          </Grid>\n        </React.Fragment>\n      ))}\n\n      <Grid item xs={12}>\n        <Button onClick={() => dispatch(actionAddCriterion())} className={classes.button} startIcon={<AddIcon />}>\n          Add new criteria\n        </Button>\n      </Grid>\n    </>\n  )\n}\n\n////////////////////\n// CriteriaBuilder\n////////////////////\n\nconst useCriteriaBuilderStyles = makeStyles({\n  selectedButton: {\n    backgroundColor: \"#E4E4E4\"\n  }, \n  deselectedButton: {\n    color:  \"#A6A6A6\"\n  }\n});\n\nfunction CriteriaBuilder(props, ref) {\n  const classes = useCriteriaBuilderStyles();\n  const criteria = useSelector(state => state.criteria.criteria);\n\n  const [state, dispatch] = useReducer(reducer, {\n    version: 1,\n    event: criteria[0].event,\n    nodes: [emptyNode()] // by default, one empty node\n  , ...props.conditions});\n\n  // expose state to outer node\n  useImperativeHandle(ref, () => ({\n    state: state\n  }));\n\n  return (\n    <BuilderDispatch.Provider value={dispatch}>\n      <Grid container item xs={12} spacing={3}>\n        <Grid item xs={12}>\n          <ButtonGroup aria-label=\"outlined button group\">\n            {criteria.map(criteriaBlueprint => (\n              <Button \n                onClick={() => dispatch(actionSetEvent(criteriaBlueprint.event))}\n                className={state.event === criteriaBlueprint.event ? classes.selectedButton : classes.deselectedButton}\n                key={criteriaBlueprint.event}>{criteriaBlueprint.event}</Button>\n            ))}\n          </ButtonGroup>\n        </Grid>\n\n        {criteria.filter(cb => cb.event === state.event).map(criteriaBlueprint => (\n            <CriteriaTable \n              key={criteriaBlueprint.event} \n              blueprint={criteriaBlueprint}\n              nodes={state.nodes}></CriteriaTable>\n          )\n        )}\n      </Grid>\n    </BuilderDispatch.Provider>\n  )\n}\n\n// forwardRef is here used to access local state from parent node\nexport default forwardRef(CriteriaBuilder)\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport ConditionIcon from '@material-ui/icons/CallSplit';\nimport OkIcon from '@material-ui/icons/Check';\nimport Grid from '@material-ui/core/Grid';\nimport NopeIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport StatisticsTooltip from '../../StatisticTooltip';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CriteriaBuilder from './CriteriaBuilder';\n\nimport { PortWidget } from './../../widgets/PortWidget';\nimport { setCanvasZoomingAndPanning } from '../../../actions';\n\nclass NodeWidget extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Use it to access CriteriaBuilder state\n    this.builderRef = React.createRef();\n\n    this.state = {\n      nodeFormName: this.props.node.name,\n      dialogOpened: false,\n      anchorElementForTooltip: null\n    };\n  }\n\n  bem(selector) {\n    return (\n      this.props.classBaseName +\n      selector +\n      ' ' +\n      this.props.className +\n      selector +\n      ' '\n    );\n  }\n\n  getClassName() {\n    return this.props.classBaseName + ' ' + this.props.className;\n  }\n\n  openDialog = () => {\n    this.setState({\n      dialogOpened: true,\n      nodeFormName: this.props.node.name,\n      anchorElementForTooltip: null\n    });\n    this.props.dispatch(setCanvasZoomingAndPanning(false));\n  };\n\n  closeDialog = () => {\n    this.setState({ dialogOpened: false });\n    this.props.dispatch(setCanvasZoomingAndPanning(true));\n  };\n\n  handleNodeMouseEnter = event => {\n    if (!this.state.dialogOpened) {\n      this.setState({ anchorElementForTooltip: event.currentTarget });\n    }\n  };\n\n  handleNodeMouseLeave = () => {\n    this.setState({ anchorElementForTooltip: null });\n  };\n\n\n  render() {\n    return (\n      <div\n        className={this.getClassName()}\n        style={{ background: this.props.node.color }}\n        onDoubleClick={() => {\n          this.openDialog();\n        }}\n        onMouseEnter={this.handleNodeMouseEnter}\n        onMouseLeave={this.handleNodeMouseLeave}\n      >\n        <div className={this.bem('__title')}>\n          <div className={this.bem('__name')}>\n            {this.props.node.name\n              ? this.props.node.name\n              : 'Condition'}\n          </div>\n        </div>\n\n\n        <div className='node-container'>\n          <div className={this.bem('__icon')}>\n            <ConditionIcon />\n          </div>\n\n          <div className={this.bem('__ports')}>\n            <div className={this.bem('__left')}>\n              <PortWidget name='left' node={this.props.node} />\n            </div>\n\n            <div className={this.bem('__right')}>\n              <PortWidget name='right' node={this.props.node}>\n                <OkIcon\n                  style={{\n                    position: 'absolute',\n                    top: '-20px',\n                    right: '-20px',\n                    color: '#2ECC40'\n                  }}\n                />\n              </PortWidget>\n            </div>\n\n            <div className={this.bem('__bottom')}>\n              <PortWidget name='bottom' node={this.props.node}>\n                <NopeIcon\n                  style={{\n                    position: 'absolute',\n                    top: '8px',\n                    right: '-22px',\n                    color: '#FF695E'\n                  }}\n                />\n              </PortWidget>\n            </div>\n          </div>\n        </div>\n\n        <StatisticsTooltip\n          id={this.props.node.id}\n          anchorElement={this.state.anchorElementForTooltip}\n        />\n\n        <Dialog\n          open={this.state.dialogOpened}\n          onClose={this.closeDialog}\n          aria-labelledby='form-dialog-title'\n          onKeyUp={event => {\n            if (event.keyCode === 46 || event.keyCode === 8) {\n              event.preventDefault();\n              event.stopPropagation();\n              return false;\n            }\n          }}\n        >\n          <DialogTitle id='form-dialog-title'>\n            Event Condition\n          </DialogTitle>\n\n          <DialogContent>\n            <Grid container spacing={32}>\n              <Grid style={{marginBottom: '10px'}} item xs={6}>\n                <TextField\n                  margin='normal'\n                  id='trigger-name'\n                  label='Node name'\n                  fullWidth\n                  value={this.state.nodeFormName}\n                  onChange={event => {\n                    this.setState({\n                      nodeFormName: event.target.value\n                    });\n                  }}\n                />\n              </Grid>\n\n              <CriteriaBuilder\n                conditions={this.props.node.conditions}\n                ref={this.builderRef}>\n              </CriteriaBuilder>\n            </Grid>\n          </DialogContent>\n\n          <DialogActions>\n            <Button\n              color='secondary'\n              onClick={() => {\n                this.closeDialog();\n              }}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              color='primary'\n              onClick={() => {\n                // https://github.com/projectstorm/react-diagrams/issues/50 huh\n\n                this.props.node.name = this.state.nodeFormName;\n                this.props.node.conditions = this.builderRef.current.state;\n\n                this.props.diagramEngine.repaintCanvas();\n                this.closeDialog();\n              }}\n            >\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { dispatch } = state;\n  return { dispatch };\n}\n\nexport default connect(mapStateToProps)(NodeWidget);","import * as React from 'react';\nimport { AbstractNodeFactory } from 'storm-react-diagrams';\n\nimport NodeWidget from './NodeWidget';\nimport { NodeModel } from './NodeModel';\n\nexport class NodeFactory extends AbstractNodeFactory {\n  constructor() {\n    super('condition');\n  }\n\n  generateReactWidget(diagramEngine, node) {\n    return (\n      <NodeWidget\n        diagramEngine={diagramEngine}\n        node={node}\n        classBaseName='diamond-node'\n        className='condition-node'\n      />\n    );\n  }\n\n  getNewInstance() {\n    return new NodeModel();\n  }\n}\n","import * as React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport { DiagramWidget } from 'storm-react-diagrams';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EmailIcon from '@material-ui/icons/Mail';\nimport BannerIcon from '@material-ui/icons/Adjust';\nimport TriggerIcon from '@material-ui/icons/Notifications';\nimport WaitIcon from '@material-ui/icons/AccessAlarmsOutlined';\nimport SegmentIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport ConditionIcon from '@material-ui/icons/CallSplit';\nimport GoalIcon from '@material-ui/icons/CheckBox';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\n\nimport * as config from './../../config';\nimport { TrayItemWidget } from './TrayItemWidget';\nimport { ExportService } from '../../services/ExportService';\nimport Notification from '../Notification';\nimport { Email, Segment, Trigger, BeforeTrigger, Wait, Goal, Banner, Condition } from './../elements';\nimport {\n  setScenarioId,\n  setScenarioName,\n  setCanvasNotification,\n  setScenarioLoading\n} from '../../actions';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: 0\n  },\n  toolbar: theme.mixins.toolbar\n});\n\nclass BodyWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editingName: false,\n      editedName: ''\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.app.isCorruptedPayload() === true && prevProps.app.isCorruptedPayload() === false) {\n      this.props.dispatch(\n        setCanvasNotification({\n          open: true,\n          variant: 'error',\n          text: 'Unable to load corrupted scenario.'\n        })\n      );\n    }\n  }\n\n  saveChanges = () => {\n    const { dispatch } = this.props;\n\n    // Check for corruption to prevent override\n    if (this.props.app.isCorruptedPayload()) {\n      dispatch(\n        setCanvasNotification({\n          open: true,\n          variant: 'error',\n          text: 'Cannot modify corrupted scenario.'\n        })\n      );\n      return;\n    };\n\n    const exportService = new ExportService(\n      this.props.app.getDiagramEngine().getDiagramModel()\n    );\n\n    const payload = {\n      name: this.props.scenario.name,\n      ...exportService.exportPayload()\n    };\n\n    const scenarioId = this.props.scenario.id;\n    if (scenarioId) {\n      payload.id = scenarioId;\n    }\n\n    dispatch(setScenarioLoading(true));\n\n    axios\n      .post(`${config.URL_SCENARIO_CREATE}`, payload)\n      .then(response => {\n        dispatch(setScenarioId(response.data.id));\n        dispatch(setScenarioLoading(false));\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'success',\n            text: 'Scenario saving succeeded.'\n          })\n        );\n      })\n      .catch(error => {\n        dispatch(setScenarioLoading(false));\n        dispatch(\n          setCanvasNotification({\n            open: true,\n            variant: 'error',\n            text: 'Scenario saving failed.'\n          })\n        );\n        console.log(error);\n      });\n  };\n\n  startEditingName = () => {\n    this.setState({\n      editedName: this.props.scenario.name,\n      editingName: true\n    });\n  };\n\n  cancelEditingName = () => {\n    this.setState({\n      editedName: '',\n      editingName: false\n    });\n  };\n\n  submitEditingName = () => {\n    if (this.state.editedName.length === 0) {\n      this.cancelEditingName();\n      return;\n    }\n\n    this.props.dispatch(setScenarioName(this.state.editedName));\n    this.setState({\n      editedName: '',\n      editingName: false\n    });\n  };\n\n  handleCloseAndSaveDuringChangingName = event => {\n    if (event.keyCode === 27) {\n      this.cancelEditingName();\n    } else if (event.keyCode === 13) {\n      this.submitEditingName();\n    }\n  };\n\n  handleNameTyping = event => {\n    this.setState({\n      editedName: event.target.value\n    });\n  };\n\n  closeNotification = () => {\n    this.props.dispatch(setCanvasNotification({ open: false }));\n  };\n\n  render() {\n    const { classes, canvas } = this.props;\n\n    const diagramProps = {\n      className: 'srd-demo-canvas',\n      diagramEngine: this.props.app.getDiagramEngine(),\n      maxNumberPointsPerLink: 0,\n      allowLooseLinks: false,\n      allowCanvasTranslation: canvas.pannable,\n      allowCanvasZoom: canvas.zoomable\n    }; // as DiagramProps;\n\n    return (\n      <div className='body'>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar position='fixed' className={classes.appBar}>\n            <Toolbar>\n              <Grid container>\n                <Grid item xs={4}>\n                  <Typography variant='h6' color='inherit' noWrap>\n                    {this.state.editingName ? (\n                      <input\n                        autoFocus\n                        type='text'\n                        value={this.state.editedName}\n                        onChange={this.handleNameTyping}\n                        onKeyDown={this.handleCloseAndSaveDuringChangingName}\n                        onBlur={this.submitEditingName}\n                        className='changing-name-input'\n                      />\n                    ) : (\n                      <span\n                        onClick={this.startEditingName}\n                        className='scenario-name'\n                      >\n                        {this.props.scenario.name}\n                      </span>\n                    )}\n                  </Typography>\n                </Grid>\n\n                <Grid item xs={8}>\n                  <Grid container direction='row' justify='flex-end'>\n                    {!!this.props.scenario.loading && (\n                      <CircularProgress\n                        className='circular-loading'\n                        size={19}\n                        color='inherit'\n                      />\n                    )}\n                    <Button\n                      size='small'\n                      variant='contained'\n                      color='secondary'\n                      onClick={() => this.saveChanges()}\n                    >\n                      {this.props.scenario.id ? 'Update' : 'Save'}\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant='permanent'\n            classes={{\n              paper: classes.drawerPaper\n            }}\n          >\n            <div className={classes.toolbar} />\n            <List\n              component='nav'\n              subheader={\n                <ListSubheader component='div'>Triggers</ListSubheader>\n              }\n            >\n              <TrayItemWidget\n                model={{ type: 'trigger' }}\n                name='Event'\n                icon={<TriggerIcon />}\n              />\n\n              <TrayItemWidget\n                  model={{ type: 'before_trigger' }}\n                  name='Before Event'\n                  icon={<NotificationsActiveIcon />}\n              />\n            </List>\n\n            <List\n              component='nav'\n              subheader={<ListSubheader component='div'>Actions</ListSubheader>}\n            >\n              <TrayItemWidget\n                model={{ type: 'email' }}\n                name='Send email'\n                icon={<EmailIcon />}\n              />\n\n              {config.BANNER_ENABLED &&\n                <TrayItemWidget\n                  model={{ type: 'banner' }}\n                  name='Show banner'\n                  icon={<BannerIcon />}\n                />\n              }\n              \n            </List>\n\n            <List\n              component='nav'\n              subheader={\n                <ListSubheader component='div'>Operations</ListSubheader>\n              }\n            >\n              <TrayItemWidget\n                model={{ type: 'segment' }}\n                name='Segment'\n                icon={<SegmentIcon />}\n              />\n\n              <TrayItemWidget\n                model={{ type: 'condition' }}\n                name='Condition'\n                icon={<ConditionIcon />}\n              />\n\n              <TrayItemWidget\n                model={{ type: 'wait' }}\n                name='Wait'\n                icon={<WaitIcon />}\n              />\n\n              <TrayItemWidget\n                model={{ type: 'goal' }}\n                name='Goal'\n                icon={<GoalIcon />}\n              />\n            </List>\n          </Drawer>\n          <Notification\n            variant={this.props.canvas.notification.variant}\n            text={this.props.canvas.notification.text}\n            open={this.props.canvas.notification.open}\n            handleClose={this.closeNotification}\n          />\n\n          <main className={classes.content}>\n            <div\n              className='diagram-layer'\n              onDrop={event => {\n                const stormDiagramNode = event.dataTransfer.getData(\n                  'storm-diagram-node'\n                );\n                if (!stormDiagramNode) return;\n                var data = JSON.parse(stormDiagramNode);\n              \n                var node = null;\n                if (data.type === 'email') {\n                  node = new Email.NodeModel({});\n                } else if (data.type === 'banner') {\n                  node = new Banner.NodeModel({\n                    expiresInUnit: 'days',\n                    expiresInTime: 1,\n                  });\n                } else if (data.type === 'segment') {\n                  node = new Segment.NodeModel({});\n                } else if (data.type === 'condition') {\n                  node = new Condition.NodeModel({});\n                } else if (data.type === 'trigger') {\n                  node = new Trigger.NodeModel({});\n                } else if (data.type === 'before_trigger') {\n                  node = new BeforeTrigger.NodeModel({});\n                } else if (data.type === 'wait') {\n                  node = new Wait.NodeModel({});\n                } else if (data.type === 'goal') {\n                  node = new Goal.NodeModel({\n                    recheckPeriodUnit: 'hours',\n                    recheckPeriodTime: 1,\n                  });\n                }\n                var points = this.props.app\n                  .getDiagramEngine()\n                  .getRelativeMousePoint(event);\n                node.x = points.x;\n                node.y = points.y;\n                this.props.app\n                  .getDiagramEngine()\n                  .getDiagramModel()\n                  .addNode(node);\n                this.forceUpdate();\n              }}\n              onDragOver={event => {\n                event.preventDefault();\n              }}\n            >\n              <DiagramWidget {...diagramProps} />\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    canvas: state.canvas,\n    scenario: state.scenario\n  };\n}\n\nexport default compose(\n  withStyles(styles, { name: 'BodyWidget' }),\n  connect(\n    mapStateToProps,\n    null\n  )\n)(BodyWidget);\n","import flatMap from 'lodash/flatMap';\n\n// import the custom models\nimport {Banner, Email, Segment, Trigger, Wait, Goal, Condition, BeforeTrigger} from './../components/elements';\nimport { BANNER_ENABLED } from './../config';\n\nfunction minutesToTimeUnit(minutes) {\n  if (minutes % 1440 === 0) {\n    return {\n      unit: 'days',\n      time: minutes / 1440 \n    };\n  } else if (minutes % 60 === 0) {\n    return {\n      unit: 'hours',\n      time: minutes / 60 \n    };\n  }\n  return {\n    unit: 'minutes',\n    time: minutes\n  };\n}\n\nexport class RenderService {\n  constructor(activeModel, payload = {}) {\n    this.activeModel = activeModel;\n    this.payload = payload;\n  }\n\n  renderPayload(payload) {\n    this.payload = payload;\n\n    flatMap(payload.triggers, trigger => {\n      const triggerVisual = payload.visual[trigger.id];\n      // trigger.type = \"trigger\";\n\n      return this.renderElements(trigger, triggerVisual);\n    });\n  }\n\n  renderElements(element, visual) {\n    let nodes = [];\n    let node = null;\n\n    if (element.type === 'event') {\n      element.selectedTrigger = element.event.code;\n      node = new Trigger.NodeModel(element);\n\n      nodes = element.elements.flatMap(elementId => {\n        const element = this.payload.elements[elementId];\n        const visual = this.payload.visual[element.id];\n\n        const nextNodes = this.renderElements(element, visual);\n        const link = node.getPort('right').link(nextNodes[0].getPort('left')); //FIXME/REFACTOR: nextNodes[0] is the last added node, it works, but it's messy\n\n        this.activeModel.addLink(link);\n\n        return nextNodes;\n      });\n    } else if (element.type === 'before_event') {\n      const timeUnit = minutesToTimeUnit(element.options.minutes);\n      element.timeUnit = timeUnit.unit;\n      element.time = timeUnit.time;\n      element.selectedTrigger = element.event.code;\n      node = new BeforeTrigger.NodeModel(element);\n\n      nodes = element.elements.flatMap(elementId => {\n        const element = this.payload.elements[elementId];\n        const visual = this.payload.visual[element.id];\n\n        const nextNodes = this.renderElements(element, visual);\n        const link = node.getPort('right').link(nextNodes[0].getPort('left')); //FIXME/REFACTOR: nextNodes[0] is the last added node, it works, but it's messy\n\n        this.activeModel.addLink(link);\n\n        return nextNodes;\n      });\n    } else if (element.type === 'email') {\n      element.selectedMail = element.email.code;\n      node = new Email.NodeModel(element);\n\n      nodes = element.email.descendants.flatMap(descendantObj => {\n        const element = this.payload.elements[descendantObj.uuid];\n        const visual = this.payload.visual[element.id];\n\n        const nextNodes = this.renderElements(element, visual);\n        const link = node.getPort('right').link(nextNodes[0].getPort('left'));\n\n        this.activeModel.addLink(link);\n\n        return nextNodes;\n      });\n    } else if (element.type === 'banner') {\n\n      if (!BANNER_ENABLED) {\n        throw Error(\"BANNER_ENABLED configuration is false, but loaded scenario contains banner element.\");\n      }\n\n      const timeUnit = minutesToTimeUnit(element.banner.expiresInMinutes);\n      element.expiresInUnit = timeUnit.unit;\n      element.expiresInTime = timeUnit.time;\n\n      element.selectedBanner = element.banner.id;\n      node = new Banner.NodeModel(element);\n\n      nodes = element.banner.descendants.flatMap(descendantObj => {\n        const element = this.payload.elements[descendantObj.uuid];\n        const visual = this.payload.visual[element.id];\n\n        const nextNodes = this.renderElements(element, visual);\n        const link = node.getPort('right').link(nextNodes[0].getPort('left'));\n\n        this.activeModel.addLink(link);\n\n        return nextNodes;\n      });\n    } else if (element.type === 'segment') {\n      element.selectedSegment = element.segment.code;\n      node = new Segment.NodeModel(element);\n\n      nodes = element.segment.descendants.flatMap(descendantObj => {\n        const element = this.payload.elements[descendantObj.uuid];\n        const visual = this.payload.visual[element.id];\n        const nextNodes = this.renderElements(element, visual);\n\n        if (descendantObj.direction) {\n          if (descendantObj.direction === 'positive') {\n            const link = node.getPort('right').link(nextNodes[0].getPort('left'));\n            this.activeModel.addLink(link);\n          } else if (descendantObj.direction === 'negative') {\n            const link = node.getPort('bottom').link(nextNodes[0].getPort('left'));\n            this.activeModel.addLink(link);\n          }\n        }\n\n        return nextNodes;\n      });\n    } else if (element.type === 'wait') {\n      const timeUnit = minutesToTimeUnit(element.wait.minutes);\n      element.waitingUnit = timeUnit.unit;\n      element.waitingTime = timeUnit.time;\n\n      node = new Wait.NodeModel(element);\n\n      nodes = element.wait.descendants.flatMap(descendantObj => {\n        const element = this.payload.elements[descendantObj.uuid];\n        const visual = this.payload.visual[element.id];\n\n        const nextNodes = this.renderElements(element, visual);\n        const link = node.getPort('right').link(nextNodes[0].getPort('left'));\n        this.activeModel.addLink(link);\n\n        return nextNodes;\n      });\n    } else if (element.type === 'goal') {\n      if (element.goal.hasOwnProperty(\"timeoutMinutes\")) {\n        const timeUnit = minutesToTimeUnit(element.goal.timeoutMinutes);\n        element.timeoutUnit = timeUnit.unit;\n        element.timeoutTime = timeUnit.time;\n      }\n\n      const recheckPeriodTimeUnit = minutesToTimeUnit(element.goal.recheckPeriodMinutes);\n      element.recheckPeriodUnit = recheckPeriodTimeUnit.unit;\n      element.recheckPeriodTime = recheckPeriodTimeUnit.time;\n\n      element.selectedGoals = element.goal.codes;\n      node = new Goal.NodeModel(element);\n\n      nodes = element.goal.descendants.flatMap(descendantObj => {\n        const element = this.payload.elements[descendantObj.uuid];\n        const visual = this.payload.visual[element.id];\n        const nextNodes = this.renderElements(element, visual);\n\n        if (descendantObj.direction) {\n          if (descendantObj.direction === 'positive') {\n            const link = node.getPort('right').link(nextNodes[0].getPort('left'));\n            this.activeModel.addLink(link);\n          } else if (descendantObj.direction === 'negative') {\n            const link = node.getPort('bottom').link(nextNodes[0].getPort('left'));\n            this.activeModel.addLink(link);\n          }\n        }\n\n        return nextNodes;\n      });\n    } else if (element.type === 'condition') {\n        [node, nodes] = this.renderCondition(element);\n     }\n\n    this.activeModel.addNode(node);\n    node.setPosition(visual.x, visual.y);\n\n    return [node, ...nodes];\n  }\n\n  renderCondition(element) {\n    let node = new Condition.NodeModel({\n      id: element.id,\n      name: element.name,\n      conditions: element.condition.conditions\n    });\n\n    let nodes = element.condition.descendants.flatMap(descendantObj => {\n      const element = this.payload.elements[descendantObj.uuid];\n      const visual = this.payload.visual[element.id];\n      const nextNodes = this.renderElements(element, visual);\n\n      if (descendantObj.direction) {\n        if (descendantObj.direction === 'positive') {\n          const link = node.getPort('right').link(nextNodes[0].getPort('left'));\n          this.activeModel.addLink(link);\n        } else if (descendantObj.direction === 'negative') {\n          const link = node.getPort('bottom').link(nextNodes[0].getPort('left'));\n          this.activeModel.addLink(link);\n        }\n      }\n\n      return nextNodes;\n    });\n    return [node, nodes];\n  }\n}\n","import { DiagramEngine, DiagramModel } from 'storm-react-diagrams';\n\n// import the custom models\nimport {\n  SimplePortFactory,\n  Banner,\n  Email,\n  Segment,\n  Trigger,\n  BeforeTrigger,\n  Wait,\n  Goal,\n  Condition\n} from './elements';\n\nimport './sass/main.scss';\nimport { LinkFactory } from './elements/Link';\nimport { RenderService } from './../services/RenderService';\n\nexport class Application {\n  activeModel;\n  diagramEngine;\n\n  constructor(payload) {\n    this.diagramEngine = new DiagramEngine();\n    this.diagramEngine.installDefaultFactories();\n    this.activeModel = new DiagramModel();\n    this.renderService = new RenderService(this.activeModel);\n    this.payload = payload;\n    this.corruptedPayload = false;\n\n    if (payload) {\n      this.renderPayload();\n    } else {\n      this.registerCustomModels();\n    }\n  }\n\n  renderPayload() {\n    this.registerCustomModels();\n    try {\n      this.renderService.renderPayload(this.payload);\n    } catch(ex) {\n      // In case of rendering error, dump loaded model, log and flag as corrupted scenario\n      console.log(ex.message);\n      this.corruptedPayload = true;\n      this.activeModel = new DiagramModel();\n    }\n    \n    this.diagramEngine.setDiagramModel(this.activeModel);\n    this.diagramEngine.repaintCanvas();\n  }\n\n  registerCustomModels() {\n    this.diagramEngine.registerLinkFactory(new LinkFactory());\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('email', config => new Email.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Email.NodeFactory());\n\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('segment', config => new Segment.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Segment.NodeFactory());\n\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('trigger', config => new Trigger.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Trigger.NodeFactory());\n\n    this.diagramEngine.registerPortFactory(\n        new SimplePortFactory('before_trigger', config => new BeforeTrigger.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new BeforeTrigger.NodeFactory());\n\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('wait', config => new Wait.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Wait.NodeFactory());\n\n    // Goal\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('goal', config => new Goal.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Goal.NodeFactory());\n\n    // Banner\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('banner', config => new Banner.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Banner.NodeFactory());\n\n    // Condition\n    this.diagramEngine.registerPortFactory(\n      new SimplePortFactory('condition', config => new Condition.PortModel())\n    );\n    this.diagramEngine.registerNodeFactory(new Condition.NodeFactory());\n  }\n\n  getActiveDiagram() {\n    return this.activeModel;\n  }\n\n  getDiagramEngine() {\n    return this.diagramEngine;\n  }\n\n  isCorruptedPayload() {\n    return this.corruptedPayload;\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport SegmenterService from './services/SegmenterService';\nimport BodyWidget from './components/widgets/BodyWidget';\nimport { Application } from './components/Application';\nimport * as config from './config';\nimport {\n  fetchSegments,\n  fetchGoals,\n  fetchBanners,\n  fetchTriggers,\n  fetchBeforeTriggers,\n  fetchCriteria,\n  fetchScenario,\n  setScenarioName,\n  fetchMails\n} from './actions';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n\n    dispatch(fetchSegments());\n    dispatch(fetchCriteria());\n    dispatch(fetchGoals());\n    dispatch(fetchTriggers());\n    dispatch(fetchBeforeTriggers());\n    dispatch(fetchMails());\n\n    if (config.BANNER_ENABLED) {\n      dispatch(fetchBanners());\n    }\n\n    if (config.SCENARIO_ID) {\n      dispatch(fetchScenario(config.SCENARIO_ID));\n    } else {\n      dispatch(setScenarioName('Unnamed scenario'));\n    }\n\n    SegmenterService.load();\n  }\n\n  render() {\n    var app = new Application(this.props.scenarioPayload);\n\n    return <BodyWidget app={app} />;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    scenarioPayload: state.scenario.payload\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport axios from 'axios';\n\nimport rootReducer from './reducers';\nimport App from './App';\nimport * as config from './config';\n\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\naxios.defaults.headers.common['Authorization'] = config.AUTH_TOKEN;\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  {},\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}