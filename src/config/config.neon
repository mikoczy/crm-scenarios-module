services:
	moduleManager:
		setup:
			- addModule(Crm\ScenariosModule\ScenariosModule())

	scenariosLogger:
			class: Monolog\Logger('scenarios-logger')
			setup:
				- pushHandler(Monolog\Handler\StreamHandler("%appDir%/../log/scenarios.log"))
				- pushHandler(Monolog\Handler\ErrorLogHandler())

	scenariosEngine:
			class: Crm\ScenariosModule\Engine\Engine(@scenariosLogger)

	- Crm\ScenariosModule\Api\ScenariosCreateApiHandler
	- Crm\ScenariosModule\Api\ScenariosInfoApiHandler
	- Crm\ScenariosModule\Api\ScenariosElementApiHandler

	- Crm\ScenariosModule\Events\FinishWaitEventHandler
	- Crm\ScenariosModule\Events\SegmentCheckEventHandler
	- Crm\ScenariosModule\Events\OnboardingGoalsCheckEventHandler
	- Crm\ScenariosModule\Events\SendEmailEventHandler
	- Crm\ScenariosModule\Events\ShowBannerEventHandler
	- Crm\ScenariosModule\Events\TestUserHandler
	- Crm\ScenariosModule\Events\UserCreatedHandler
	- Crm\ScenariosModule\Events\NewSubscriptionHandler
	- Crm\ScenariosModule\Events\SubscriptionEndsHandler
	- Crm\ScenariosModule\Events\RecurrentPaymentRenewedHandler

	- Crm\ScenariosModule\Commands\ScenariosWorkerCommand
	- Crm\ScenariosModule\Commands\TestUserCommand

	- Crm\ScenariosModule\Engine\Dispatcher
	- Crm\ScenariosModule\Engine\GraphConfiguration

	- Crm\ScenariosModule\Repository\JobsRepository
	- Crm\ScenariosModule\Repository\ElementsRepository
	- Crm\ScenariosModule\Repository\ElementElementsRepository
	- Crm\ScenariosModule\Repository\ScenariosRepository
	- Crm\ScenariosModule\Repository\TriggersRepository
	- Crm\ScenariosModule\Repository\TriggerElementsRepository

	- Crm\ScenariosModule\Presenters\ScenariosAdminPresenter(%remp.campaign.host%)
